
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSEleftORleftANDrightNOTleftEQNELTLEGTGEINleftPLUSMINUSleftTIMESDIVIDEDIVMODleftCOLONAND ARRAY ASSIGN BEGIN BOOLEAN CASE CHAR COLON COMMA CONST DIV DIVIDE DO DOT DOWNTO ELSE END EQ FILE FOR FUNCTION GE GOTO GT ID IF IN INTEGER LABEL LBRACKET LE LPAREN LT MINUS MOD NE NOT OF OR PACKED PLUS PROCEDURE PROGRAM RANGE RBRACKET REAL RECORD REPEAT RPAREN SEMI SET TEXTO THEN TIMES TIPO TO TYPE UNTIL VAR WHILE WITHprogram : PROGRAM ID SEMI block DOTblock : declarations BEGIN statement_list ENDdeclarations : declarations declaration\n                    | emptydeclaration : const_declaration\n                    | type_declaration\n                    | label_declaration\n                    | var_declaration\n                    | function_declaration\n                    | procedure_declarationconst_declaration : CONST const_listconst_list : const_list CONST_ITEM SEMI\n                  | CONST_ITEM SEMICONST_ITEM : ID EQ expressiontype_declaration : TYPE type_listtype_list : type_list type_item SEMI\n                 | type_item SEMItype_item : ID EQ typelabel_declaration : LABEL label_list SEMIlabel_list : label_list COMMA INTEGER\n                  | INTEGERvar_declaration : VAR var_listvar_list : var_list var_item\n                | var_itemvar_item : ID_LIST COLON type SEMIfunction_declaration : FUNCTION ID LPAREN params RPAREN COLON type SEMI block SEMIprocedure_declaration : PROCEDURE ID LPAREN params RPAREN SEMI block SEMItype : packed_type\n            | simple_type\n            | id_type\n            | array_type\n            | enum_type\n            | subrange_type\n            | record_type\n            | set_type\n            | file_typepacked_type : PACKED typesimple_type : TIPOid_type : IDarray_type : ARRAY LBRACKET range RBRACKET OF typeenum_type : LPAREN ID_LIST RPARENsubrange_type : const_expr RANGE const_exprrecord_type : RECORD field_list variant_part END\n                   | RECORD field_list ENDset_type : SET OF typefile_type : FILE OF typerange : const_expr RANGE const_exprconst_expr : INTEGER\n                  | REAL\n                  | BOOLEAN\n                  | CHAR\n                  | TEXTO\n                  | IDfield_list : field_list var_item\n                  | var_itemvariant_part : CASE ID COLON TIPO OF variant_listvariant_list : variant_list variant_item SEMI\n                    | variant_item SEMIvariant_item : constant COLON LPAREN field_list RPARENID_LIST : ID\n               | ID_LIST COMMA IDparams : param_list\n              | emptyparam_list : param_list SEMI param\n                  | paramparam : ID_LIST COLON type\n             | VAR ID_LIST COLON type\n             | CONST ID_LIST COLON typestatement_list : statement_list SEMI statement\n                      | statementcompound : BEGIN statement_list ENDstatement : assignment\n                 | procedure_call\n                 | if_statement\n                 | for_statement\n                 | while_statement\n                 | repeat_statement\n                 | case_statement\n                 | with_statement\n                 | goto_statement\n                 | labeled_statement\n                 | compound\n                 | emptyassignment : variable ASSIGN expressionvariable : variable LBRACKET expression RBRACKET\n                | variable DOT ID\n                | IDprocedure_call : ID LPAREN expression_list RPAREN\n                      | IDif_statement : IF expression THEN statement ELSE statement\n                    | IF expression THEN statement %prec IFXfor_statement : FOR ID ASSIGN expression TO expression DO statement\n                     | FOR ID ASSIGN expression DOWNTO expression DO statementwhile_statement : WHILE expression DO statementrepeat_statement : REPEAT statement_list UNTIL expressioncase_statement : CASE expression OF case_list ENDcase_list : case_list case_item SEMI\n                 | case_item SEMIcase_item : constant_list COLON statement_listconstant_list : const_expr\n                     | constant_list COMMA const_exprwith_statement : WITH variable_list DO statementvariable_list : variable\n                     | variable_list COMMA variablegoto_statement : GOTO INTEGERlabeled_statement : INTEGER COLON statementconstant : INTEGER\n                | REAL\n                | BOOLEAN\n                | CHAR\n                | TEXTOexpression : variable\n                  | constant\n                  | TIPO LPAREN expression_list RPAREN\n                  | ID LPAREN expression_list RPAREN\n                  | LPAREN expression RPAREN\n                  | LBRACKET expression_list RBRACKET\n                  | NOT expression\n                  | expression COLON expression\n                  | expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression DIV expression\n                  | expression MOD expression\n                  | expression EQ expression\n                  | expression NE expression\n                  | expression LT expression\n                  | expression LE expression\n                  | expression GT expression\n                  | expression GE expression\n                  | expression IN expression\n                  | expression AND expression\n                  | expression OR expressionexpression_list : expression\n                       | expression_list COMMA expressionempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,8,],[0,-1,]),'ID':([2,9,17,18,20,21,22,23,40,41,42,43,44,45,48,51,56,57,64,65,66,67,68,73,75,76,90,92,93,95,96,99,100,101,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,136,137,138,140,142,154,157,159,175,176,180,205,213,215,216,217,218,219,220,222,223,228,231,232,235,236,237,244,245,248,251,252,257,261,268,269,270,289,290,],[3,39,50,53,59,60,61,39,74,82,74,39,74,88,50,53,59,-24,39,74,74,108,74,74,74,74,39,-13,74,-17,143,-23,143,169,59,59,39,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,39,74,209,39,88,-12,-16,143,59,59,59,59,74,209,209,209,59,-55,143,143,-25,59,143,39,74,74,-98,39,209,-54,263,143,143,143,-97,209,39,39,143,59,59,]),'SEMI':([3,9,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,43,49,52,54,55,62,63,64,70,71,74,77,78,79,80,81,84,89,90,91,94,104,105,106,108,111,132,134,137,139,141,143,144,145,146,147,148,149,150,151,152,153,155,162,163,164,165,166,167,168,171,173,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,203,204,206,209,210,212,226,228,229,230,233,234,236,240,241,243,246,247,249,250,254,258,262,264,265,266,267,268,269,275,276,277,279,283,285,291,],[4,-137,-137,64,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-89,-137,92,95,97,-21,64,-2,-137,-112,-113,-87,-107,-108,-109,-110,-111,64,-105,-137,140,142,-71,-69,-84,-86,-137,-118,-137,-137,-106,-14,-39,-18,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-48,-49,-50,-51,-52,-20,220,222,-65,-85,-88,-91,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-116,-117,-94,-95,235,-53,-102,-37,253,-137,-114,-115,-96,257,-137,-41,-42,-44,-45,-46,-64,-66,-90,-99,-43,273,-67,-68,274,-137,-137,-92,-93,-40,281,286,288,-59,]),'BEGIN':([4,6,7,9,10,11,12,13,14,15,16,23,43,48,51,56,57,64,90,92,95,97,99,111,134,137,140,142,220,228,236,253,268,269,273,274,281,],[-137,9,-4,23,-3,-5,-6,-7,-8,-9,-10,23,23,-11,-15,-22,-24,23,23,-13,-17,-19,-23,23,23,23,-12,-16,-25,23,23,-137,23,23,-137,-27,-26,]),'CONST':([4,6,7,10,11,12,13,14,15,16,48,51,56,57,92,95,97,99,102,103,140,142,220,222,253,273,274,281,],[-137,17,-4,-3,-5,-6,-7,-8,-9,-10,-11,-15,-22,-24,-13,-17,-19,-23,176,176,-12,-16,-25,176,-137,-137,-27,-26,]),'TYPE':([4,6,7,10,11,12,13,14,15,16,48,51,56,57,92,95,97,99,140,142,220,253,273,274,281,],[-137,18,-4,-3,-5,-6,-7,-8,-9,-10,-11,-15,-22,-24,-13,-17,-19,-23,-12,-16,-25,-137,-137,-27,-26,]),'LABEL':([4,6,7,10,11,12,13,14,15,16,48,51,56,57,92,95,97,99,140,142,220,253,273,274,281,],[-137,19,-4,-3,-5,-6,-7,-8,-9,-10,-11,-15,-22,-24,-13,-17,-19,-23,-12,-16,-25,-137,-137,-27,-26,]),'VAR':([4,6,7,10,11,12,13,14,15,16,48,51,56,57,92,95,97,99,102,103,140,142,220,222,253,273,274,281,],[-137,20,-4,-3,-5,-6,-7,-8,-9,-10,-11,-15,-22,-24,-13,-17,-19,-23,175,175,-12,-16,-25,175,-137,-137,-27,-26,]),'FUNCTION':([4,6,7,10,11,12,13,14,15,16,48,51,56,57,92,95,97,99,140,142,220,253,273,274,281,],[-137,21,-4,-3,-5,-6,-7,-8,-9,-10,-11,-15,-22,-24,-13,-17,-19,-23,-12,-16,-25,-137,-137,-27,-26,]),'PROCEDURE':([4,6,7,10,11,12,13,14,15,16,48,51,56,57,92,95,97,99,140,142,220,253,273,274,281,],[-137,22,-4,-3,-5,-6,-7,-8,-9,-10,-11,-15,-22,-24,-13,-17,-19,-23,-12,-16,-25,-137,-137,-27,-26,]),'DOT':([5,38,39,63,70,74,87,88,108,178,211,],[8,67,-87,-2,67,-87,67,-87,-86,-85,67,]),'IF':([9,23,43,64,90,111,134,137,228,236,268,269,],[40,40,40,40,40,40,40,40,40,40,40,40,]),'FOR':([9,23,43,64,90,111,134,137,228,236,268,269,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'WHILE':([9,23,43,64,90,111,134,137,228,236,268,269,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'REPEAT':([9,23,43,64,90,111,134,137,228,236,268,269,],[43,43,43,43,43,43,43,43,43,43,43,43,]),'CASE':([9,23,43,64,90,111,134,137,216,217,220,228,236,244,268,269,],[44,44,44,44,44,44,44,44,245,-55,-25,44,44,-54,44,44,]),'WITH':([9,23,43,64,90,111,134,137,228,236,268,269,],[45,45,45,45,45,45,45,45,45,45,45,45,]),'GOTO':([9,23,43,64,90,111,134,137,228,236,268,269,],[46,46,46,46,46,46,46,46,46,46,46,46,]),'INTEGER':([9,19,23,40,42,43,44,46,64,65,66,68,73,75,76,90,93,96,98,100,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,136,137,154,180,205,213,215,218,219,223,228,231,232,235,236,237,248,251,252,257,261,268,269,270,280,282,286,288,],[47,55,47,77,77,47,77,89,47,77,77,77,77,77,77,47,77,162,167,162,47,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,47,77,162,47,162,77,162,162,162,162,162,162,47,77,77,-98,47,162,162,162,162,-97,162,47,47,162,77,77,-58,-57,]),'END':([9,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,62,64,70,71,74,77,78,79,80,81,89,90,104,105,106,108,111,132,134,137,139,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,203,204,205,210,216,217,220,228,229,230,233,235,242,244,254,257,268,269,275,276,282,286,288,],[-137,-137,63,-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-89,104,-137,-112,-113,-87,-107,-108,-109,-110,-111,-105,-137,-71,-69,-84,-86,-137,-118,-137,-137,-106,-85,-88,-91,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-116,-117,-94,-95,233,-102,243,-55,-25,-137,-114,-115,-96,-98,262,-54,-90,-97,-137,-137,-92,-93,-56,-58,-57,]),'UNTIL':([25,26,27,28,29,30,31,32,33,34,35,36,37,39,43,64,70,71,74,77,78,79,80,81,84,89,90,104,105,106,108,111,132,134,137,139,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,203,204,210,228,229,230,233,254,268,269,275,276,],[-70,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-89,-137,-137,-112,-113,-87,-107,-108,-109,-110,-111,135,-105,-137,-71,-69,-84,-86,-137,-118,-137,-137,-106,-85,-88,-91,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-116,-117,-94,-95,-102,-137,-114,-115,-96,-90,-137,-137,-92,-93,]),'ELSE':([26,27,28,29,30,31,32,33,34,35,36,37,39,70,71,74,77,78,79,80,81,89,90,104,106,108,111,132,134,137,139,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,203,204,210,228,229,230,233,254,268,269,275,276,],[-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-89,-112,-113,-87,-107,-108,-109,-110,-111,-105,-137,-71,-84,-86,-137,-118,-137,-137,-106,-85,-88,228,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-116,-117,-94,-95,-102,-137,-114,-115,-96,-90,-137,-137,-92,-93,]),'ASSIGN':([38,39,82,108,178,],[65,-87,133,-86,-85,]),'LBRACKET':([38,39,40,42,44,65,66,68,70,73,74,75,76,87,88,93,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,135,156,178,180,211,231,232,],[66,-87,75,75,75,75,75,75,66,75,-87,75,75,66,-87,75,-86,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,213,-85,75,66,75,75,]),'LPAREN':([39,40,42,44,60,61,65,66,68,72,73,74,75,76,93,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,135,154,180,218,219,223,231,232,248,251,252,270,287,],[68,73,73,73,102,103,73,73,73,128,73,130,73,73,73,157,157,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,157,73,157,157,157,73,73,157,157,157,157,289,]),'TIPO':([40,42,44,65,66,68,73,75,76,93,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,135,154,180,218,219,223,231,232,248,251,252,270,272,],[72,72,72,72,72,72,72,72,72,72,155,155,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,155,72,155,155,155,72,72,155,155,155,155,278,]),'NOT':([40,42,44,65,66,68,73,75,76,93,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,135,180,231,232,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'REAL':([40,42,44,65,66,68,73,75,76,93,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,135,136,154,180,205,213,215,218,219,223,231,232,235,237,248,251,252,257,261,270,280,282,286,288,],[78,78,78,78,78,78,78,78,78,78,163,163,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,163,163,78,163,163,163,163,163,163,78,78,-98,163,163,163,163,-97,163,163,78,78,-58,-57,]),'BOOLEAN':([40,42,44,65,66,68,73,75,76,93,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,135,136,154,180,205,213,215,218,219,223,231,232,235,237,248,251,252,257,261,270,280,282,286,288,],[79,79,79,79,79,79,79,79,79,79,164,164,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,164,164,79,164,164,164,164,164,164,79,79,-98,164,164,164,164,-97,164,164,79,79,-58,-57,]),'CHAR':([40,42,44,65,66,68,73,75,76,93,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,135,136,154,180,205,213,215,218,219,223,231,232,235,237,248,251,252,257,261,270,280,282,286,288,],[80,80,80,80,80,80,80,80,80,80,165,165,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,165,165,80,165,165,165,165,165,165,80,80,-98,165,165,165,165,-97,165,165,80,80,-58,-57,]),'TEXTO':([40,42,44,65,66,68,73,75,76,93,96,100,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,135,136,154,180,205,213,215,218,219,223,231,232,235,237,248,251,252,257,261,270,280,282,286,288,],[81,81,81,81,81,81,81,81,81,81,166,166,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,166,166,81,166,166,166,166,166,166,81,81,-98,166,166,166,166,-97,166,166,81,81,-58,-57,]),'COLON':([47,58,59,69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,162,163,164,165,166,169,174,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,207,208,209,221,224,225,227,229,230,255,256,259,263,284,],[90,100,-60,112,-112,-113,-87,-107,-108,-109,-110,-111,112,112,112,112,-86,112,112,112,112,-48,-49,-50,-51,-52,-61,223,-85,-119,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-116,-117,112,112,236,-100,-53,248,251,252,112,-114,-115,112,112,-101,272,287,]),'EQ':([50,53,69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[93,96,119,-112,-113,-87,-107,-108,-109,-110,-111,119,119,119,119,-86,119,119,119,119,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,119,119,-116,-117,119,119,119,-114,-115,119,119,]),'COMMA':([54,55,58,59,70,71,74,77,78,79,80,81,86,87,88,108,109,110,131,132,162,163,164,165,166,167,169,174,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,207,208,209,211,214,224,225,227,229,230,259,],[98,-21,101,-60,-112,-113,-87,-107,-108,-109,-110,-111,138,-103,-87,-86,180,-135,180,-118,-48,-49,-50,-51,-52,-20,-61,101,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,180,-116,180,-117,237,-100,-53,-104,101,101,101,-136,-114,-115,-101,]),'RPAREN':([59,70,71,74,77,78,79,80,81,102,103,108,109,110,129,132,143,145,146,147,148,149,150,151,152,153,155,162,163,164,165,166,169,170,171,172,173,177,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,209,212,214,217,220,227,229,230,240,241,243,244,246,247,249,250,262,265,266,277,290,],[-60,-112,-113,-87,-107,-108,-109,-110,-111,-137,-137,-86,179,-135,199,-118,-39,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-48,-49,-50,-51,-52,-61,221,-62,-63,-65,226,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,229,-116,230,-117,-53,-37,240,-55,-25,-136,-114,-115,-41,-42,-44,-54,-45,-46,-64,-66,-43,-67,-68,-40,291,]),'THEN':([69,70,71,74,77,78,79,80,81,108,132,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,229,230,],[111,-112,-113,-87,-107,-108,-109,-110,-111,-86,-118,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-116,-117,-114,-115,]),'PLUS':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[113,-112,-113,-87,-107,-108,-109,-110,-111,113,113,113,113,-86,113,113,113,113,-85,-119,-120,-121,-122,-123,-124,-125,113,113,113,113,113,113,113,113,113,-116,-117,113,113,113,-114,-115,113,113,]),'MINUS':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[114,-112,-113,-87,-107,-108,-109,-110,-111,114,114,114,114,-86,114,114,114,114,-85,-119,-120,-121,-122,-123,-124,-125,114,114,114,114,114,114,114,114,114,-116,-117,114,114,114,-114,-115,114,114,]),'TIMES':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[115,-112,-113,-87,-107,-108,-109,-110,-111,115,115,115,115,-86,115,115,115,115,-85,-119,115,115,-122,-123,-124,-125,115,115,115,115,115,115,115,115,115,-116,-117,115,115,115,-114,-115,115,115,]),'DIVIDE':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[116,-112,-113,-87,-107,-108,-109,-110,-111,116,116,116,116,-86,116,116,116,116,-85,-119,116,116,-122,-123,-124,-125,116,116,116,116,116,116,116,116,116,-116,-117,116,116,116,-114,-115,116,116,]),'DIV':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[117,-112,-113,-87,-107,-108,-109,-110,-111,117,117,117,117,-86,117,117,117,117,-85,-119,117,117,-122,-123,-124,-125,117,117,117,117,117,117,117,117,117,-116,-117,117,117,117,-114,-115,117,117,]),'MOD':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[118,-112,-113,-87,-107,-108,-109,-110,-111,118,118,118,118,-86,118,118,118,118,-85,-119,118,118,-122,-123,-124,-125,118,118,118,118,118,118,118,118,118,-116,-117,118,118,118,-114,-115,118,118,]),'NE':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[120,-112,-113,-87,-107,-108,-109,-110,-111,120,120,120,120,-86,120,120,120,120,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,120,120,-116,-117,120,120,120,-114,-115,120,120,]),'LT':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[121,-112,-113,-87,-107,-108,-109,-110,-111,121,121,121,121,-86,121,121,121,121,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,121,121,-116,-117,121,121,121,-114,-115,121,121,]),'LE':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[122,-112,-113,-87,-107,-108,-109,-110,-111,122,122,122,122,-86,122,122,122,122,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,122,122,-116,-117,122,122,122,-114,-115,122,122,]),'GT':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[123,-112,-113,-87,-107,-108,-109,-110,-111,123,123,123,123,-86,123,123,123,123,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,123,123,-116,-117,123,123,123,-114,-115,123,123,]),'GE':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[124,-112,-113,-87,-107,-108,-109,-110,-111,124,124,124,124,-86,124,124,124,124,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,124,124,-116,-117,124,124,124,-114,-115,124,124,]),'IN':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[125,-112,-113,-87,-107,-108,-109,-110,-111,125,125,125,125,-86,125,125,125,125,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,125,125,-116,-117,125,125,125,-114,-115,125,125,]),'AND':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[126,-112,-113,-87,-107,-108,-109,-110,-111,126,126,126,126,-86,126,126,-118,126,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,126,-116,-117,126,126,126,-114,-115,126,126,]),'OR':([69,70,71,74,77,78,79,80,81,83,85,106,107,108,110,129,132,141,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,204,227,229,230,255,256,],[127,-112,-113,-87,-107,-108,-109,-110,-111,127,127,127,127,-86,127,127,-118,127,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-116,-117,127,127,127,-114,-115,127,127,]),'DO':([70,71,74,77,78,79,80,81,83,86,87,88,108,132,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,211,229,230,255,256,],[-112,-113,-87,-107,-108,-109,-110,-111,134,137,-103,-87,-86,-118,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-116,-117,-104,-114,-115,268,269,]),'OF':([70,71,74,77,78,79,80,81,85,108,132,160,161,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,229,230,260,278,],[-112,-113,-87,-107,-108,-109,-110,-111,136,-86,-118,218,219,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-116,-117,-114,-115,270,280,]),'RBRACKET':([70,71,74,77,78,79,80,81,107,108,110,131,132,162,163,164,165,166,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,209,227,229,230,238,271,],[-112,-113,-87,-107,-108,-109,-110,-111,178,-86,-135,201,-118,-48,-49,-50,-51,-52,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-116,-117,-53,-136,-114,-115,260,-47,]),'TO':([70,71,74,77,78,79,80,81,108,132,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,229,230,],[-112,-113,-87,-107,-108,-109,-110,-111,-86,-118,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-116,-117,231,-114,-115,]),'DOWNTO':([70,71,74,77,78,79,80,81,108,132,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,201,202,229,230,],[-112,-113,-87,-107,-108,-109,-110,-111,-86,-118,-85,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-116,-117,232,-114,-115,]),'PACKED':([96,100,154,218,219,223,248,251,252,270,],[154,154,154,154,154,154,154,154,154,154,]),'ARRAY':([96,100,154,218,219,223,248,251,252,270,],[156,156,156,156,156,156,156,156,156,156,]),'RECORD':([96,100,154,218,219,223,248,251,252,270,],[159,159,159,159,159,159,159,159,159,159,]),'SET':([96,100,154,218,219,223,248,251,252,270,],[160,160,160,160,160,160,160,160,160,160,]),'FILE':([96,100,154,218,219,223,248,251,252,270,],[161,161,161,161,161,161,161,161,161,161,]),'RANGE':([143,158,162,163,164,165,166,209,239,],[-53,215,-48,-49,-50,-51,-52,-53,261,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([4,253,273,],[5,267,279,]),'declarations':([4,253,273,],[6,6,6,]),'empty':([4,9,23,43,64,90,102,103,111,134,137,228,236,253,268,269,273,],[7,37,37,37,37,37,172,172,37,37,37,37,37,7,37,37,7,]),'declaration':([6,],[10,]),'const_declaration':([6,],[11,]),'type_declaration':([6,],[12,]),'label_declaration':([6,],[13,]),'var_declaration':([6,],[14,]),'function_declaration':([6,],[15,]),'procedure_declaration':([6,],[16,]),'statement_list':([9,23,43,236,],[24,62,84,258,]),'statement':([9,23,43,64,90,111,134,137,228,236,268,269,],[25,25,25,105,139,181,203,210,254,25,275,276,]),'assignment':([9,23,43,64,90,111,134,137,228,236,268,269,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'procedure_call':([9,23,43,64,90,111,134,137,228,236,268,269,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'if_statement':([9,23,43,64,90,111,134,137,228,236,268,269,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'for_statement':([9,23,43,64,90,111,134,137,228,236,268,269,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'while_statement':([9,23,43,64,90,111,134,137,228,236,268,269,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'repeat_statement':([9,23,43,64,90,111,134,137,228,236,268,269,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'case_statement':([9,23,43,64,90,111,134,137,228,236,268,269,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'with_statement':([9,23,43,64,90,111,134,137,228,236,268,269,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'goto_statement':([9,23,43,64,90,111,134,137,228,236,268,269,],[34,34,34,34,34,34,34,34,34,34,34,34,]),'labeled_statement':([9,23,43,64,90,111,134,137,228,236,268,269,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'compound':([9,23,43,64,90,111,134,137,228,236,268,269,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'variable':([9,23,40,42,43,44,45,64,65,66,68,73,75,76,90,93,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,138,180,228,231,232,236,268,269,],[38,38,70,70,38,70,87,38,70,70,70,70,70,70,38,70,38,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,38,70,38,211,70,38,70,70,38,38,38,]),'const_list':([17,],[48,]),'CONST_ITEM':([17,48,],[49,91,]),'type_list':([18,],[51,]),'type_item':([18,51,],[52,94,]),'label_list':([19,],[54,]),'var_list':([20,],[56,]),'var_item':([20,56,159,216,289,290,],[57,99,217,244,217,244,]),'ID_LIST':([20,56,102,103,157,159,175,176,216,222,289,290,],[58,58,174,174,214,58,224,225,58,174,58,58,]),'expression':([40,42,44,65,66,68,73,75,76,93,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,135,180,231,232,],[69,83,85,106,107,110,129,110,132,141,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,110,110,202,204,227,255,256,]),'constant':([40,42,44,65,66,68,73,75,76,93,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,135,180,231,232,280,282,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,284,284,]),'variable_list':([45,],[86,]),'expression_list':([68,75,128,130,],[109,131,198,200,]),'type':([96,100,154,218,219,223,248,251,252,270,],[144,168,212,246,247,250,264,265,266,277,]),'packed_type':([96,100,154,218,219,223,248,251,252,270,],[145,145,145,145,145,145,145,145,145,145,]),'simple_type':([96,100,154,218,219,223,248,251,252,270,],[146,146,146,146,146,146,146,146,146,146,]),'id_type':([96,100,154,218,219,223,248,251,252,270,],[147,147,147,147,147,147,147,147,147,147,]),'array_type':([96,100,154,218,219,223,248,251,252,270,],[148,148,148,148,148,148,148,148,148,148,]),'enum_type':([96,100,154,218,219,223,248,251,252,270,],[149,149,149,149,149,149,149,149,149,149,]),'subrange_type':([96,100,154,218,219,223,248,251,252,270,],[150,150,150,150,150,150,150,150,150,150,]),'record_type':([96,100,154,218,219,223,248,251,252,270,],[151,151,151,151,151,151,151,151,151,151,]),'set_type':([96,100,154,218,219,223,248,251,252,270,],[152,152,152,152,152,152,152,152,152,152,]),'file_type':([96,100,154,218,219,223,248,251,252,270,],[153,153,153,153,153,153,153,153,153,153,]),'const_expr':([96,100,136,154,205,213,215,218,219,223,237,248,251,252,261,270,],[158,158,208,158,208,239,241,158,158,158,259,158,158,158,271,158,]),'params':([102,103,],[170,177,]),'param_list':([102,103,],[171,171,]),'param':([102,103,222,],[173,173,249,]),'case_list':([136,],[205,]),'case_item':([136,205,],[206,234,]),'constant_list':([136,205,],[207,207,]),'field_list':([159,289,],[216,290,]),'range':([213,],[238,]),'variant_part':([216,],[242,]),'variant_list':([280,],[282,]),'variant_item':([280,282,],[283,285,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMI block DOT','program',5,'p_program','ana_sin.py',31),
  ('block -> declarations BEGIN statement_list END','block',4,'p_block','ana_sin.py',38),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','ana_sin.py',47),
  ('declarations -> empty','declarations',1,'p_declarations','ana_sin.py',48),
  ('declaration -> const_declaration','declaration',1,'p_declaration','ana_sin.py',59),
  ('declaration -> type_declaration','declaration',1,'p_declaration','ana_sin.py',60),
  ('declaration -> label_declaration','declaration',1,'p_declaration','ana_sin.py',61),
  ('declaration -> var_declaration','declaration',1,'p_declaration','ana_sin.py',62),
  ('declaration -> function_declaration','declaration',1,'p_declaration','ana_sin.py',63),
  ('declaration -> procedure_declaration','declaration',1,'p_declaration','ana_sin.py',64),
  ('const_declaration -> CONST const_list','const_declaration',2,'p_const_declaration','ana_sin.py',72),
  ('const_list -> const_list CONST_ITEM SEMI','const_list',3,'p_const_list','ana_sin.py',77),
  ('const_list -> CONST_ITEM SEMI','const_list',2,'p_const_list','ana_sin.py',78),
  ('CONST_ITEM -> ID EQ expression','CONST_ITEM',3,'p_CONST_ITEM','ana_sin.py',87),
  ('type_declaration -> TYPE type_list','type_declaration',2,'p_type_declaration','ana_sin.py',95),
  ('type_list -> type_list type_item SEMI','type_list',3,'p_type_list','ana_sin.py',101),
  ('type_list -> type_item SEMI','type_list',2,'p_type_list','ana_sin.py',102),
  ('type_item -> ID EQ type','type_item',3,'p_type_item','ana_sin.py',110),
  ('label_declaration -> LABEL label_list SEMI','label_declaration',3,'p_label_declaration','ana_sin.py',119),
  ('label_list -> label_list COMMA INTEGER','label_list',3,'p_label_list','ana_sin.py',125),
  ('label_list -> INTEGER','label_list',1,'p_label_list','ana_sin.py',126),
  ('var_declaration -> VAR var_list','var_declaration',2,'p_var_declaration','ana_sin.py',138),
  ('var_list -> var_list var_item','var_list',2,'p_var_list','ana_sin.py',143),
  ('var_list -> var_item','var_list',1,'p_var_list','ana_sin.py',144),
  ('var_item -> ID_LIST COLON type SEMI','var_item',4,'p_var_item','ana_sin.py',153),
  ('function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type SEMI block SEMI','function_declaration',10,'p_function_declaration','ana_sin.py',161),
  ('procedure_declaration -> PROCEDURE ID LPAREN params RPAREN SEMI block SEMI','procedure_declaration',8,'p_procedure_declaration','ana_sin.py',169),
  ('type -> packed_type','type',1,'p_type','ana_sin.py',177),
  ('type -> simple_type','type',1,'p_type','ana_sin.py',178),
  ('type -> id_type','type',1,'p_type','ana_sin.py',179),
  ('type -> array_type','type',1,'p_type','ana_sin.py',180),
  ('type -> enum_type','type',1,'p_type','ana_sin.py',181),
  ('type -> subrange_type','type',1,'p_type','ana_sin.py',182),
  ('type -> record_type','type',1,'p_type','ana_sin.py',183),
  ('type -> set_type','type',1,'p_type','ana_sin.py',184),
  ('type -> file_type','type',1,'p_type','ana_sin.py',185),
  ('packed_type -> PACKED type','packed_type',2,'p_packed_type','ana_sin.py',190),
  ('simple_type -> TIPO','simple_type',1,'p_simple_type','ana_sin.py',195),
  ('id_type -> ID','id_type',1,'p_id_type','ana_sin.py',200),
  ('array_type -> ARRAY LBRACKET range RBRACKET OF type','array_type',6,'p_array_type_range','ana_sin.py',205),
  ('enum_type -> LPAREN ID_LIST RPAREN','enum_type',3,'p_enum_type','ana_sin.py',212),
  ('subrange_type -> const_expr RANGE const_expr','subrange_type',3,'p_subrange_type','ana_sin.py',218),
  ('record_type -> RECORD field_list variant_part END','record_type',4,'p_record_type','ana_sin.py',231),
  ('record_type -> RECORD field_list END','record_type',3,'p_record_type','ana_sin.py',232),
  ('set_type -> SET OF type','set_type',3,'p_set_type','ana_sin.py',241),
  ('file_type -> FILE OF type','file_type',3,'p_file_type','ana_sin.py',247),
  ('range -> const_expr RANGE const_expr','range',3,'p_range','ana_sin.py',257),
  ('const_expr -> INTEGER','const_expr',1,'p_const_expr','ana_sin.py',263),
  ('const_expr -> REAL','const_expr',1,'p_const_expr','ana_sin.py',264),
  ('const_expr -> BOOLEAN','const_expr',1,'p_const_expr','ana_sin.py',265),
  ('const_expr -> CHAR','const_expr',1,'p_const_expr','ana_sin.py',266),
  ('const_expr -> TEXTO','const_expr',1,'p_const_expr','ana_sin.py',267),
  ('const_expr -> ID','const_expr',1,'p_const_expr','ana_sin.py',268),
  ('field_list -> field_list var_item','field_list',2,'p_field_list','ana_sin.py',276),
  ('field_list -> var_item','field_list',1,'p_field_list','ana_sin.py',277),
  ('variant_part -> CASE ID COLON TIPO OF variant_list','variant_part',6,'p_variant_part','ana_sin.py',289),
  ('variant_list -> variant_list variant_item SEMI','variant_list',3,'p_variant_list','ana_sin.py',295),
  ('variant_list -> variant_item SEMI','variant_list',2,'p_variant_list','ana_sin.py',296),
  ('variant_item -> constant COLON LPAREN field_list RPAREN','variant_item',5,'p_variant_item','ana_sin.py',306),
  ('ID_LIST -> ID','ID_LIST',1,'p_ID_LIST','ana_sin.py',313),
  ('ID_LIST -> ID_LIST COMMA ID','ID_LIST',3,'p_ID_LIST','ana_sin.py',314),
  ('params -> param_list','params',1,'p_params','ana_sin.py',325),
  ('params -> empty','params',1,'p_params','ana_sin.py',326),
  ('param_list -> param_list SEMI param','param_list',3,'p_param_list','ana_sin.py',332),
  ('param_list -> param','param_list',1,'p_param_list','ana_sin.py',333),
  ('param -> ID_LIST COLON type','param',3,'p_param','ana_sin.py',345),
  ('param -> VAR ID_LIST COLON type','param',4,'p_param','ana_sin.py',346),
  ('param -> CONST ID_LIST COLON type','param',4,'p_param','ana_sin.py',347),
  ('statement_list -> statement_list SEMI statement','statement_list',3,'p_statement_list','ana_sin.py',360),
  ('statement_list -> statement','statement_list',1,'p_statement_list','ana_sin.py',361),
  ('compound -> BEGIN statement_list END','compound',3,'p_compound','ana_sin.py',376),
  ('statement -> assignment','statement',1,'p_statement','ana_sin.py',384),
  ('statement -> procedure_call','statement',1,'p_statement','ana_sin.py',385),
  ('statement -> if_statement','statement',1,'p_statement','ana_sin.py',386),
  ('statement -> for_statement','statement',1,'p_statement','ana_sin.py',387),
  ('statement -> while_statement','statement',1,'p_statement','ana_sin.py',388),
  ('statement -> repeat_statement','statement',1,'p_statement','ana_sin.py',389),
  ('statement -> case_statement','statement',1,'p_statement','ana_sin.py',390),
  ('statement -> with_statement','statement',1,'p_statement','ana_sin.py',391),
  ('statement -> goto_statement','statement',1,'p_statement','ana_sin.py',392),
  ('statement -> labeled_statement','statement',1,'p_statement','ana_sin.py',393),
  ('statement -> compound','statement',1,'p_statement','ana_sin.py',394),
  ('statement -> empty','statement',1,'p_statement','ana_sin.py',395),
  ('assignment -> variable ASSIGN expression','assignment',3,'p_assignment','ana_sin.py',403),
  ('variable -> variable LBRACKET expression RBRACKET','variable',4,'p_variable','ana_sin.py',413),
  ('variable -> variable DOT ID','variable',3,'p_variable','ana_sin.py',414),
  ('variable -> ID','variable',1,'p_variable','ana_sin.py',415),
  ('procedure_call -> ID LPAREN expression_list RPAREN','procedure_call',4,'p_procedure_call','ana_sin.py',428),
  ('procedure_call -> ID','procedure_call',1,'p_procedure_call','ana_sin.py',429),
  ('if_statement -> IF expression THEN statement ELSE statement','if_statement',6,'p_if_statement','ana_sin.py',440),
  ('if_statement -> IF expression THEN statement','if_statement',4,'p_if_statement','ana_sin.py',441),
  ('for_statement -> FOR ID ASSIGN expression TO expression DO statement','for_statement',8,'p_for_statement','ana_sin.py',452),
  ('for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement','for_statement',8,'p_for_statement','ana_sin.py',453),
  ('while_statement -> WHILE expression DO statement','while_statement',4,'p_while_statement','ana_sin.py',462),
  ('repeat_statement -> REPEAT statement_list UNTIL expression','repeat_statement',4,'p_repeat_statement','ana_sin.py',470),
  ('case_statement -> CASE expression OF case_list END','case_statement',5,'p_case_statement','ana_sin.py',478),
  ('case_list -> case_list case_item SEMI','case_list',3,'p_case_list','ana_sin.py',483),
  ('case_list -> case_item SEMI','case_list',2,'p_case_list','ana_sin.py',484),
  ('case_item -> constant_list COLON statement_list','case_item',3,'p_case_item','ana_sin.py',492),
  ('constant_list -> const_expr','constant_list',1,'p_constant_list','ana_sin.py',497),
  ('constant_list -> constant_list COMMA const_expr','constant_list',3,'p_constant_list','ana_sin.py',498),
  ('with_statement -> WITH variable_list DO statement','with_statement',4,'p_with_statement','ana_sin.py',508),
  ('variable_list -> variable','variable_list',1,'p_variable_list','ana_sin.py',513),
  ('variable_list -> variable_list COMMA variable','variable_list',3,'p_variable_list','ana_sin.py',514),
  ('goto_statement -> GOTO INTEGER','goto_statement',2,'p_goto_statement','ana_sin.py',525),
  ('labeled_statement -> INTEGER COLON statement','labeled_statement',3,'p_labeled_statement','ana_sin.py',533),
  ('constant -> INTEGER','constant',1,'p_constant','ana_sin.py',540),
  ('constant -> REAL','constant',1,'p_constant','ana_sin.py',541),
  ('constant -> BOOLEAN','constant',1,'p_constant','ana_sin.py',542),
  ('constant -> CHAR','constant',1,'p_constant','ana_sin.py',543),
  ('constant -> TEXTO','constant',1,'p_constant','ana_sin.py',544),
  ('expression -> variable','expression',1,'p_expression','ana_sin.py',551),
  ('expression -> constant','expression',1,'p_expression','ana_sin.py',552),
  ('expression -> TIPO LPAREN expression_list RPAREN','expression',4,'p_expression','ana_sin.py',553),
  ('expression -> ID LPAREN expression_list RPAREN','expression',4,'p_expression','ana_sin.py',554),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','ana_sin.py',555),
  ('expression -> LBRACKET expression_list RBRACKET','expression',3,'p_expression','ana_sin.py',556),
  ('expression -> NOT expression','expression',2,'p_expression','ana_sin.py',557),
  ('expression -> expression COLON expression','expression',3,'p_expression','ana_sin.py',558),
  ('expression -> expression PLUS expression','expression',3,'p_expression','ana_sin.py',559),
  ('expression -> expression MINUS expression','expression',3,'p_expression','ana_sin.py',560),
  ('expression -> expression TIMES expression','expression',3,'p_expression','ana_sin.py',561),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','ana_sin.py',562),
  ('expression -> expression DIV expression','expression',3,'p_expression','ana_sin.py',563),
  ('expression -> expression MOD expression','expression',3,'p_expression','ana_sin.py',564),
  ('expression -> expression EQ expression','expression',3,'p_expression','ana_sin.py',565),
  ('expression -> expression NE expression','expression',3,'p_expression','ana_sin.py',566),
  ('expression -> expression LT expression','expression',3,'p_expression','ana_sin.py',567),
  ('expression -> expression LE expression','expression',3,'p_expression','ana_sin.py',568),
  ('expression -> expression GT expression','expression',3,'p_expression','ana_sin.py',569),
  ('expression -> expression GE expression','expression',3,'p_expression','ana_sin.py',570),
  ('expression -> expression IN expression','expression',3,'p_expression','ana_sin.py',571),
  ('expression -> expression AND expression','expression',3,'p_expression','ana_sin.py',572),
  ('expression -> expression OR expression','expression',3,'p_expression','ana_sin.py',573),
  ('expression_list -> expression','expression_list',1,'p_expression_list','ana_sin.py',598),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','ana_sin.py',599),
  ('empty -> <empty>','empty',0,'p_empty','ana_sin.py',609),
]

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMI block DOT
Rule 2     block -> declarations BEGIN statement_list END
Rule 3     declarations -> declarations declaration
Rule 4     declarations -> empty
Rule 5     declaration -> const_declaration
Rule 6     declaration -> type_declaration
Rule 7     declaration -> label_declaration
Rule 8     declaration -> var_declaration
Rule 9     declaration -> function_declaration
Rule 10    declaration -> procedure_declaration
Rule 11    const_declaration -> CONST const_list
Rule 12    const_list -> const_list CONST_ITEM SEMI
Rule 13    const_list -> CONST_ITEM SEMI
Rule 14    CONST_ITEM -> ID EQ expression
Rule 15    type_declaration -> TYPE type_list
Rule 16    type_list -> type_list type_item SEMI
Rule 17    type_list -> type_item SEMI
Rule 18    type_item -> ID EQ type
Rule 19    label_declaration -> LABEL label_list SEMI
Rule 20    label_list -> label_list COMMA INTEGER
Rule 21    label_list -> INTEGER
Rule 22    var_declaration -> VAR var_list
Rule 23    var_list -> var_list var_item
Rule 24    var_list -> var_item
Rule 25    var_item -> ID_LIST COLON type SEMI
Rule 26    function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type SEMI block SEMI
Rule 27    procedure_declaration -> PROCEDURE ID LPAREN params RPAREN SEMI block SEMI
Rule 28    type -> packed_type
Rule 29    type -> simple_type
Rule 30    type -> id_type
Rule 31    type -> array_type
Rule 32    type -> enum_type
Rule 33    type -> subrange_type
Rule 34    type -> record_type
Rule 35    type -> set_type
Rule 36    type -> file_type
Rule 37    packed_type -> PACKED type
Rule 38    simple_type -> TIPO
Rule 39    id_type -> ID
Rule 40    array_type -> ARRAY LBRACKET range RBRACKET OF type
Rule 41    enum_type -> LPAREN ID_LIST RPAREN
Rule 42    subrange_type -> const_expr RANGE const_expr
Rule 43    record_type -> RECORD field_list variant_part END
Rule 44    record_type -> RECORD field_list END
Rule 45    set_type -> SET OF type
Rule 46    file_type -> FILE OF type
Rule 47    range -> const_expr RANGE const_expr
Rule 48    const_expr -> INTEGER
Rule 49    const_expr -> REAL
Rule 50    const_expr -> BOOLEAN
Rule 51    const_expr -> CHAR
Rule 52    const_expr -> TEXTO
Rule 53    const_expr -> ID
Rule 54    field_list -> field_list var_item
Rule 55    field_list -> var_item
Rule 56    variant_part -> CASE ID COLON TIPO OF variant_list
Rule 57    variant_list -> variant_list variant_item SEMI
Rule 58    variant_list -> variant_item SEMI
Rule 59    variant_item -> constant COLON LPAREN field_list RPAREN
Rule 60    ID_LIST -> ID
Rule 61    ID_LIST -> ID_LIST COMMA ID
Rule 62    params -> param_list
Rule 63    params -> empty
Rule 64    param_list -> param_list SEMI param
Rule 65    param_list -> param
Rule 66    param -> ID_LIST COLON type
Rule 67    param -> VAR ID_LIST COLON type
Rule 68    param -> CONST ID_LIST COLON type
Rule 69    statement_list -> statement_list SEMI statement
Rule 70    statement_list -> statement
Rule 71    compound -> BEGIN statement_list END
Rule 72    statement -> assignment
Rule 73    statement -> procedure_call
Rule 74    statement -> if_statement
Rule 75    statement -> for_statement
Rule 76    statement -> while_statement
Rule 77    statement -> repeat_statement
Rule 78    statement -> case_statement
Rule 79    statement -> with_statement
Rule 80    statement -> goto_statement
Rule 81    statement -> labeled_statement
Rule 82    statement -> compound
Rule 83    statement -> empty
Rule 84    assignment -> variable ASSIGN expression
Rule 85    variable -> variable LBRACKET expression RBRACKET
Rule 86    variable -> variable DOT ID
Rule 87    variable -> ID
Rule 88    procedure_call -> ID LPAREN expression_list RPAREN
Rule 89    procedure_call -> ID
Rule 90    if_statement -> IF expression THEN statement ELSE statement
Rule 91    if_statement -> IF expression THEN statement
Rule 92    for_statement -> FOR ID ASSIGN expression TO expression DO statement
Rule 93    for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement
Rule 94    while_statement -> WHILE expression DO statement
Rule 95    repeat_statement -> REPEAT statement_list UNTIL expression
Rule 96    case_statement -> CASE expression OF case_list END
Rule 97    case_list -> case_list case_item SEMI
Rule 98    case_list -> case_item SEMI
Rule 99    case_item -> constant_list COLON statement_list
Rule 100   constant_list -> const_expr
Rule 101   constant_list -> constant_list COMMA const_expr
Rule 102   with_statement -> WITH variable_list DO statement
Rule 103   variable_list -> variable
Rule 104   variable_list -> variable_list COMMA variable
Rule 105   goto_statement -> GOTO INTEGER
Rule 106   labeled_statement -> INTEGER COLON statement
Rule 107   constant -> INTEGER
Rule 108   constant -> REAL
Rule 109   constant -> BOOLEAN
Rule 110   constant -> CHAR
Rule 111   constant -> TEXTO
Rule 112   expression -> variable
Rule 113   expression -> constant
Rule 114   expression -> TIPO LPAREN expression_list RPAREN
Rule 115   expression -> ID LPAREN expression_list RPAREN
Rule 116   expression -> LPAREN expression RPAREN
Rule 117   expression -> LBRACKET expression_list RBRACKET
Rule 118   expression -> NOT expression
Rule 119   expression -> expression COLON expression
Rule 120   expression -> expression PLUS expression
Rule 121   expression -> expression MINUS expression
Rule 122   expression -> expression TIMES expression
Rule 123   expression -> expression DIVIDE expression
Rule 124   expression -> expression DIV expression
Rule 125   expression -> expression MOD expression
Rule 126   expression -> expression EQ expression
Rule 127   expression -> expression NE expression
Rule 128   expression -> expression LT expression
Rule 129   expression -> expression LE expression
Rule 130   expression -> expression GT expression
Rule 131   expression -> expression GE expression
Rule 132   expression -> expression IN expression
Rule 133   expression -> expression AND expression
Rule 134   expression -> expression OR expression
Rule 135   expression_list -> expression
Rule 136   expression_list -> expression_list COMMA expression
Rule 137   empty -> <empty>

Terminals, with rules where they appear

AND                  : 133
ARRAY                : 40
ASSIGN               : 84 92 93
BEGIN                : 2 71
BOOLEAN              : 50 109
CASE                 : 56 96
CHAR                 : 51 110
COLON                : 25 26 56 59 66 67 68 99 106 119
COMMA                : 20 61 101 104 136
CONST                : 11 68
DIV                  : 124
DIVIDE               : 123
DO                   : 92 93 94 102
DOT                  : 1 86
DOWNTO               : 93
ELSE                 : 90
END                  : 2 43 44 71 96
EQ                   : 14 18 126
FILE                 : 46
FOR                  : 92 93
FUNCTION             : 26
GE                   : 131
GOTO                 : 105
GT                   : 130
ID                   : 1 14 18 26 27 39 53 56 60 61 86 87 88 89 92 93 115
IF                   : 90 91
IN                   : 132
INTEGER              : 20 21 48 105 106 107
LABEL                : 19
LBRACKET             : 40 85 117
LE                   : 129
LPAREN               : 26 27 41 59 88 114 115 116
LT                   : 128
MINUS                : 121
MOD                  : 125
NE                   : 127
NOT                  : 118
OF                   : 40 45 46 56 96
OR                   : 134
PACKED               : 37
PLUS                 : 120
PROCEDURE            : 27
PROGRAM              : 1
RANGE                : 42 47
RBRACKET             : 40 85 117
REAL                 : 49 108
RECORD               : 43 44
REPEAT               : 95
RPAREN               : 26 27 41 59 88 114 115 116
SEMI                 : 1 12 13 16 17 19 25 26 26 27 27 57 58 64 69 97 98
SET                  : 45
TEXTO                : 52 111
THEN                 : 90 91
TIMES                : 122
TIPO                 : 38 56 114
TO                   : 92
TYPE                 : 15
UNTIL                : 95
VAR                  : 22 67
WHILE                : 94
WITH                 : 102
error                : 

Nonterminals, with rules where they appear

CONST_ITEM           : 12 13
ID_LIST              : 25 41 61 66 67 68
array_type           : 31
assignment           : 72
block                : 1 26 27
case_item            : 97 98
case_list            : 96 97
case_statement       : 78
compound             : 82
const_declaration    : 5
const_expr           : 42 42 47 47 100 101
const_list           : 11 12
constant             : 59 113
constant_list        : 99 101
declaration          : 3
declarations         : 2 3
empty                : 4 63 83
enum_type            : 32
expression           : 14 84 85 90 91 92 92 93 93 94 95 96 116 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130 131 131 132 132 133 133 134 134 135 136
expression_list      : 88 114 115 117 136
field_list           : 43 44 54 59
file_type            : 36
for_statement        : 75
function_declaration : 9
goto_statement       : 80
id_type              : 30
if_statement         : 74
label_declaration    : 7
label_list           : 19 20
labeled_statement    : 81
packed_type          : 28
param                : 64 65
param_list           : 62 64
params               : 26 27
procedure_call       : 73
procedure_declaration : 10
program              : 0
range                : 40
record_type          : 34
repeat_statement     : 77
set_type             : 35
simple_type          : 29
statement            : 69 70 90 90 91 92 93 94 102 106
statement_list       : 2 69 71 95 99
subrange_type        : 33
type                 : 18 25 26 37 40 45 46 66 67 68
type_declaration     : 6
type_item            : 16 17
type_list            : 15 16
var_declaration      : 8
var_item             : 23 24 54 55
var_list             : 22 23
variable             : 84 85 86 103 104 112
variable_list        : 102 104
variant_item         : 57 58
variant_list         : 56 57
variant_part         : 43
while_statement      : 76
with_statement       : 79

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMI block DOT

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMI block DOT

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMI block DOT

    SEMI            shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMI . block DOT
    (2) block -> . declarations BEGIN statement_list END
    (3) declarations -> . declarations declaration
    (4) declarations -> . empty
    (137) empty -> .

    BEGIN           reduce using rule 137 (empty -> .)
    CONST           reduce using rule 137 (empty -> .)
    TYPE            reduce using rule 137 (empty -> .)
    LABEL           reduce using rule 137 (empty -> .)
    VAR             reduce using rule 137 (empty -> .)
    FUNCTION        reduce using rule 137 (empty -> .)
    PROCEDURE       reduce using rule 137 (empty -> .)

    block                          shift and go to state 5
    declarations                   shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID SEMI block . DOT

    DOT             shift and go to state 8


state 6

    (2) block -> declarations . BEGIN statement_list END
    (3) declarations -> declarations . declaration
    (5) declaration -> . const_declaration
    (6) declaration -> . type_declaration
    (7) declaration -> . label_declaration
    (8) declaration -> . var_declaration
    (9) declaration -> . function_declaration
    (10) declaration -> . procedure_declaration
    (11) const_declaration -> . CONST const_list
    (15) type_declaration -> . TYPE type_list
    (19) label_declaration -> . LABEL label_list SEMI
    (22) var_declaration -> . VAR var_list
    (26) function_declaration -> . FUNCTION ID LPAREN params RPAREN COLON type SEMI block SEMI
    (27) procedure_declaration -> . PROCEDURE ID LPAREN params RPAREN SEMI block SEMI

    BEGIN           shift and go to state 9
    CONST           shift and go to state 17
    TYPE            shift and go to state 18
    LABEL           shift and go to state 19
    VAR             shift and go to state 20
    FUNCTION        shift and go to state 21
    PROCEDURE       shift and go to state 22

    declaration                    shift and go to state 10
    const_declaration              shift and go to state 11
    type_declaration               shift and go to state 12
    label_declaration              shift and go to state 13
    var_declaration                shift and go to state 14
    function_declaration           shift and go to state 15
    procedure_declaration          shift and go to state 16

state 7

    (4) declarations -> empty .

    BEGIN           reduce using rule 4 (declarations -> empty .)
    CONST           reduce using rule 4 (declarations -> empty .)
    TYPE            reduce using rule 4 (declarations -> empty .)
    LABEL           reduce using rule 4 (declarations -> empty .)
    VAR             reduce using rule 4 (declarations -> empty .)
    FUNCTION        reduce using rule 4 (declarations -> empty .)
    PROCEDURE       reduce using rule 4 (declarations -> empty .)


state 8

    (1) program -> PROGRAM ID SEMI block DOT .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMI block DOT .)


state 9

    (2) block -> declarations BEGIN . statement_list END
    (69) statement_list -> . statement_list SEMI statement
    (70) statement_list -> . statement
    (72) statement -> . assignment
    (73) statement -> . procedure_call
    (74) statement -> . if_statement
    (75) statement -> . for_statement
    (76) statement -> . while_statement
    (77) statement -> . repeat_statement
    (78) statement -> . case_statement
    (79) statement -> . with_statement
    (80) statement -> . goto_statement
    (81) statement -> . labeled_statement
    (82) statement -> . compound
    (83) statement -> . empty
    (84) assignment -> . variable ASSIGN expression
    (88) procedure_call -> . ID LPAREN expression_list RPAREN
    (89) procedure_call -> . ID
    (90) if_statement -> . IF expression THEN statement ELSE statement
    (91) if_statement -> . IF expression THEN statement
    (92) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (93) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (94) while_statement -> . WHILE expression DO statement
    (95) repeat_statement -> . REPEAT statement_list UNTIL expression
    (96) case_statement -> . CASE expression OF case_list END
    (102) with_statement -> . WITH variable_list DO statement
    (105) goto_statement -> . GOTO INTEGER
    (106) labeled_statement -> . INTEGER COLON statement
    (71) compound -> . BEGIN statement_list END
    (137) empty -> .
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    REPEAT          shift and go to state 43
    CASE            shift and go to state 44
    WITH            shift and go to state 45
    GOTO            shift and go to state 46
    INTEGER         shift and go to state 47
    BEGIN           shift and go to state 23
    END             reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)

    statement_list                 shift and go to state 24
    statement                      shift and go to state 25
    assignment                     shift and go to state 26
    procedure_call                 shift and go to state 27
    if_statement                   shift and go to state 28
    for_statement                  shift and go to state 29
    while_statement                shift and go to state 30
    repeat_statement               shift and go to state 31
    case_statement                 shift and go to state 32
    with_statement                 shift and go to state 33
    goto_statement                 shift and go to state 34
    labeled_statement              shift and go to state 35
    compound                       shift and go to state 36
    empty                          shift and go to state 37
    variable                       shift and go to state 38

state 10

    (3) declarations -> declarations declaration .

    BEGIN           reduce using rule 3 (declarations -> declarations declaration .)
    CONST           reduce using rule 3 (declarations -> declarations declaration .)
    TYPE            reduce using rule 3 (declarations -> declarations declaration .)
    LABEL           reduce using rule 3 (declarations -> declarations declaration .)
    VAR             reduce using rule 3 (declarations -> declarations declaration .)
    FUNCTION        reduce using rule 3 (declarations -> declarations declaration .)
    PROCEDURE       reduce using rule 3 (declarations -> declarations declaration .)


state 11

    (5) declaration -> const_declaration .

    BEGIN           reduce using rule 5 (declaration -> const_declaration .)
    CONST           reduce using rule 5 (declaration -> const_declaration .)
    TYPE            reduce using rule 5 (declaration -> const_declaration .)
    LABEL           reduce using rule 5 (declaration -> const_declaration .)
    VAR             reduce using rule 5 (declaration -> const_declaration .)
    FUNCTION        reduce using rule 5 (declaration -> const_declaration .)
    PROCEDURE       reduce using rule 5 (declaration -> const_declaration .)


state 12

    (6) declaration -> type_declaration .

    BEGIN           reduce using rule 6 (declaration -> type_declaration .)
    CONST           reduce using rule 6 (declaration -> type_declaration .)
    TYPE            reduce using rule 6 (declaration -> type_declaration .)
    LABEL           reduce using rule 6 (declaration -> type_declaration .)
    VAR             reduce using rule 6 (declaration -> type_declaration .)
    FUNCTION        reduce using rule 6 (declaration -> type_declaration .)
    PROCEDURE       reduce using rule 6 (declaration -> type_declaration .)


state 13

    (7) declaration -> label_declaration .

    BEGIN           reduce using rule 7 (declaration -> label_declaration .)
    CONST           reduce using rule 7 (declaration -> label_declaration .)
    TYPE            reduce using rule 7 (declaration -> label_declaration .)
    LABEL           reduce using rule 7 (declaration -> label_declaration .)
    VAR             reduce using rule 7 (declaration -> label_declaration .)
    FUNCTION        reduce using rule 7 (declaration -> label_declaration .)
    PROCEDURE       reduce using rule 7 (declaration -> label_declaration .)


state 14

    (8) declaration -> var_declaration .

    BEGIN           reduce using rule 8 (declaration -> var_declaration .)
    CONST           reduce using rule 8 (declaration -> var_declaration .)
    TYPE            reduce using rule 8 (declaration -> var_declaration .)
    LABEL           reduce using rule 8 (declaration -> var_declaration .)
    VAR             reduce using rule 8 (declaration -> var_declaration .)
    FUNCTION        reduce using rule 8 (declaration -> var_declaration .)
    PROCEDURE       reduce using rule 8 (declaration -> var_declaration .)


state 15

    (9) declaration -> function_declaration .

    BEGIN           reduce using rule 9 (declaration -> function_declaration .)
    CONST           reduce using rule 9 (declaration -> function_declaration .)
    TYPE            reduce using rule 9 (declaration -> function_declaration .)
    LABEL           reduce using rule 9 (declaration -> function_declaration .)
    VAR             reduce using rule 9 (declaration -> function_declaration .)
    FUNCTION        reduce using rule 9 (declaration -> function_declaration .)
    PROCEDURE       reduce using rule 9 (declaration -> function_declaration .)


state 16

    (10) declaration -> procedure_declaration .

    BEGIN           reduce using rule 10 (declaration -> procedure_declaration .)
    CONST           reduce using rule 10 (declaration -> procedure_declaration .)
    TYPE            reduce using rule 10 (declaration -> procedure_declaration .)
    LABEL           reduce using rule 10 (declaration -> procedure_declaration .)
    VAR             reduce using rule 10 (declaration -> procedure_declaration .)
    FUNCTION        reduce using rule 10 (declaration -> procedure_declaration .)
    PROCEDURE       reduce using rule 10 (declaration -> procedure_declaration .)


state 17

    (11) const_declaration -> CONST . const_list
    (12) const_list -> . const_list CONST_ITEM SEMI
    (13) const_list -> . CONST_ITEM SEMI
    (14) CONST_ITEM -> . ID EQ expression

    ID              shift and go to state 50

    const_list                     shift and go to state 48
    CONST_ITEM                     shift and go to state 49

state 18

    (15) type_declaration -> TYPE . type_list
    (16) type_list -> . type_list type_item SEMI
    (17) type_list -> . type_item SEMI
    (18) type_item -> . ID EQ type

    ID              shift and go to state 53

    type_list                      shift and go to state 51
    type_item                      shift and go to state 52

state 19

    (19) label_declaration -> LABEL . label_list SEMI
    (20) label_list -> . label_list COMMA INTEGER
    (21) label_list -> . INTEGER

    INTEGER         shift and go to state 55

    label_list                     shift and go to state 54

state 20

    (22) var_declaration -> VAR . var_list
    (23) var_list -> . var_list var_item
    (24) var_list -> . var_item
    (25) var_item -> . ID_LIST COLON type SEMI
    (60) ID_LIST -> . ID
    (61) ID_LIST -> . ID_LIST COMMA ID

    ID              shift and go to state 59

    var_list                       shift and go to state 56
    var_item                       shift and go to state 57
    ID_LIST                        shift and go to state 58

state 21

    (26) function_declaration -> FUNCTION . ID LPAREN params RPAREN COLON type SEMI block SEMI

    ID              shift and go to state 60


state 22

    (27) procedure_declaration -> PROCEDURE . ID LPAREN params RPAREN SEMI block SEMI

    ID              shift and go to state 61


state 23

    (71) compound -> BEGIN . statement_list END
    (69) statement_list -> . statement_list SEMI statement
    (70) statement_list -> . statement
    (72) statement -> . assignment
    (73) statement -> . procedure_call
    (74) statement -> . if_statement
    (75) statement -> . for_statement
    (76) statement -> . while_statement
    (77) statement -> . repeat_statement
    (78) statement -> . case_statement
    (79) statement -> . with_statement
    (80) statement -> . goto_statement
    (81) statement -> . labeled_statement
    (82) statement -> . compound
    (83) statement -> . empty
    (84) assignment -> . variable ASSIGN expression
    (88) procedure_call -> . ID LPAREN expression_list RPAREN
    (89) procedure_call -> . ID
    (90) if_statement -> . IF expression THEN statement ELSE statement
    (91) if_statement -> . IF expression THEN statement
    (92) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (93) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (94) while_statement -> . WHILE expression DO statement
    (95) repeat_statement -> . REPEAT statement_list UNTIL expression
    (96) case_statement -> . CASE expression OF case_list END
    (102) with_statement -> . WITH variable_list DO statement
    (105) goto_statement -> . GOTO INTEGER
    (106) labeled_statement -> . INTEGER COLON statement
    (71) compound -> . BEGIN statement_list END
    (137) empty -> .
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    REPEAT          shift and go to state 43
    CASE            shift and go to state 44
    WITH            shift and go to state 45
    GOTO            shift and go to state 46
    INTEGER         shift and go to state 47
    BEGIN           shift and go to state 23
    END             reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)

    statement_list                 shift and go to state 62
    statement                      shift and go to state 25
    assignment                     shift and go to state 26
    procedure_call                 shift and go to state 27
    if_statement                   shift and go to state 28
    for_statement                  shift and go to state 29
    while_statement                shift and go to state 30
    repeat_statement               shift and go to state 31
    case_statement                 shift and go to state 32
    with_statement                 shift and go to state 33
    goto_statement                 shift and go to state 34
    labeled_statement              shift and go to state 35
    compound                       shift and go to state 36
    empty                          shift and go to state 37
    variable                       shift and go to state 38

state 24

    (2) block -> declarations BEGIN statement_list . END
    (69) statement_list -> statement_list . SEMI statement

    END             shift and go to state 63
    SEMI            shift and go to state 64


state 25

    (70) statement_list -> statement .

    END             reduce using rule 70 (statement_list -> statement .)
    SEMI            reduce using rule 70 (statement_list -> statement .)
    UNTIL           reduce using rule 70 (statement_list -> statement .)


state 26

    (72) statement -> assignment .

    END             reduce using rule 72 (statement -> assignment .)
    SEMI            reduce using rule 72 (statement -> assignment .)
    UNTIL           reduce using rule 72 (statement -> assignment .)
    ELSE            reduce using rule 72 (statement -> assignment .)


state 27

    (73) statement -> procedure_call .

    END             reduce using rule 73 (statement -> procedure_call .)
    SEMI            reduce using rule 73 (statement -> procedure_call .)
    UNTIL           reduce using rule 73 (statement -> procedure_call .)
    ELSE            reduce using rule 73 (statement -> procedure_call .)


state 28

    (74) statement -> if_statement .

    END             reduce using rule 74 (statement -> if_statement .)
    SEMI            reduce using rule 74 (statement -> if_statement .)
    UNTIL           reduce using rule 74 (statement -> if_statement .)
    ELSE            reduce using rule 74 (statement -> if_statement .)


state 29

    (75) statement -> for_statement .

    END             reduce using rule 75 (statement -> for_statement .)
    SEMI            reduce using rule 75 (statement -> for_statement .)
    UNTIL           reduce using rule 75 (statement -> for_statement .)
    ELSE            reduce using rule 75 (statement -> for_statement .)


state 30

    (76) statement -> while_statement .

    END             reduce using rule 76 (statement -> while_statement .)
    SEMI            reduce using rule 76 (statement -> while_statement .)
    UNTIL           reduce using rule 76 (statement -> while_statement .)
    ELSE            reduce using rule 76 (statement -> while_statement .)


state 31

    (77) statement -> repeat_statement .

    END             reduce using rule 77 (statement -> repeat_statement .)
    SEMI            reduce using rule 77 (statement -> repeat_statement .)
    UNTIL           reduce using rule 77 (statement -> repeat_statement .)
    ELSE            reduce using rule 77 (statement -> repeat_statement .)


state 32

    (78) statement -> case_statement .

    END             reduce using rule 78 (statement -> case_statement .)
    SEMI            reduce using rule 78 (statement -> case_statement .)
    UNTIL           reduce using rule 78 (statement -> case_statement .)
    ELSE            reduce using rule 78 (statement -> case_statement .)


state 33

    (79) statement -> with_statement .

    END             reduce using rule 79 (statement -> with_statement .)
    SEMI            reduce using rule 79 (statement -> with_statement .)
    UNTIL           reduce using rule 79 (statement -> with_statement .)
    ELSE            reduce using rule 79 (statement -> with_statement .)


state 34

    (80) statement -> goto_statement .

    END             reduce using rule 80 (statement -> goto_statement .)
    SEMI            reduce using rule 80 (statement -> goto_statement .)
    UNTIL           reduce using rule 80 (statement -> goto_statement .)
    ELSE            reduce using rule 80 (statement -> goto_statement .)


state 35

    (81) statement -> labeled_statement .

    END             reduce using rule 81 (statement -> labeled_statement .)
    SEMI            reduce using rule 81 (statement -> labeled_statement .)
    UNTIL           reduce using rule 81 (statement -> labeled_statement .)
    ELSE            reduce using rule 81 (statement -> labeled_statement .)


state 36

    (82) statement -> compound .

    END             reduce using rule 82 (statement -> compound .)
    SEMI            reduce using rule 82 (statement -> compound .)
    UNTIL           reduce using rule 82 (statement -> compound .)
    ELSE            reduce using rule 82 (statement -> compound .)


state 37

    (83) statement -> empty .

    END             reduce using rule 83 (statement -> empty .)
    SEMI            reduce using rule 83 (statement -> empty .)
    UNTIL           reduce using rule 83 (statement -> empty .)
    ELSE            reduce using rule 83 (statement -> empty .)


state 38

    (84) assignment -> variable . ASSIGN expression
    (85) variable -> variable . LBRACKET expression RBRACKET
    (86) variable -> variable . DOT ID

    ASSIGN          shift and go to state 65
    LBRACKET        shift and go to state 66
    DOT             shift and go to state 67


state 39

    (88) procedure_call -> ID . LPAREN expression_list RPAREN
    (89) procedure_call -> ID .
    (87) variable -> ID .

    LPAREN          shift and go to state 68
    END             reduce using rule 89 (procedure_call -> ID .)
    SEMI            reduce using rule 89 (procedure_call -> ID .)
    UNTIL           reduce using rule 89 (procedure_call -> ID .)
    ELSE            reduce using rule 89 (procedure_call -> ID .)
    ASSIGN          reduce using rule 87 (variable -> ID .)
    LBRACKET        reduce using rule 87 (variable -> ID .)
    DOT             reduce using rule 87 (variable -> ID .)


state 40

    (90) if_statement -> IF . expression THEN statement ELSE statement
    (91) if_statement -> IF . expression THEN statement
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 69
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 41

    (92) for_statement -> FOR . ID ASSIGN expression TO expression DO statement
    (93) for_statement -> FOR . ID ASSIGN expression DOWNTO expression DO statement

    ID              shift and go to state 82


state 42

    (94) while_statement -> WHILE . expression DO statement
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 83
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 43

    (95) repeat_statement -> REPEAT . statement_list UNTIL expression
    (69) statement_list -> . statement_list SEMI statement
    (70) statement_list -> . statement
    (72) statement -> . assignment
    (73) statement -> . procedure_call
    (74) statement -> . if_statement
    (75) statement -> . for_statement
    (76) statement -> . while_statement
    (77) statement -> . repeat_statement
    (78) statement -> . case_statement
    (79) statement -> . with_statement
    (80) statement -> . goto_statement
    (81) statement -> . labeled_statement
    (82) statement -> . compound
    (83) statement -> . empty
    (84) assignment -> . variable ASSIGN expression
    (88) procedure_call -> . ID LPAREN expression_list RPAREN
    (89) procedure_call -> . ID
    (90) if_statement -> . IF expression THEN statement ELSE statement
    (91) if_statement -> . IF expression THEN statement
    (92) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (93) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (94) while_statement -> . WHILE expression DO statement
    (95) repeat_statement -> . REPEAT statement_list UNTIL expression
    (96) case_statement -> . CASE expression OF case_list END
    (102) with_statement -> . WITH variable_list DO statement
    (105) goto_statement -> . GOTO INTEGER
    (106) labeled_statement -> . INTEGER COLON statement
    (71) compound -> . BEGIN statement_list END
    (137) empty -> .
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    REPEAT          shift and go to state 43
    CASE            shift and go to state 44
    WITH            shift and go to state 45
    GOTO            shift and go to state 46
    INTEGER         shift and go to state 47
    BEGIN           shift and go to state 23
    UNTIL           reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)

    statement_list                 shift and go to state 84
    statement                      shift and go to state 25
    assignment                     shift and go to state 26
    procedure_call                 shift and go to state 27
    if_statement                   shift and go to state 28
    for_statement                  shift and go to state 29
    while_statement                shift and go to state 30
    repeat_statement               shift and go to state 31
    case_statement                 shift and go to state 32
    with_statement                 shift and go to state 33
    goto_statement                 shift and go to state 34
    labeled_statement              shift and go to state 35
    compound                       shift and go to state 36
    empty                          shift and go to state 37
    variable                       shift and go to state 38

state 44

    (96) case_statement -> CASE . expression OF case_list END
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 85
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 45

    (102) with_statement -> WITH . variable_list DO statement
    (103) variable_list -> . variable
    (104) variable_list -> . variable_list COMMA variable
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 88

    variable_list                  shift and go to state 86
    variable                       shift and go to state 87

state 46

    (105) goto_statement -> GOTO . INTEGER

    INTEGER         shift and go to state 89


state 47

    (106) labeled_statement -> INTEGER . COLON statement

    COLON           shift and go to state 90


state 48

    (11) const_declaration -> CONST const_list .
    (12) const_list -> const_list . CONST_ITEM SEMI
    (14) CONST_ITEM -> . ID EQ expression

    BEGIN           reduce using rule 11 (const_declaration -> CONST const_list .)
    CONST           reduce using rule 11 (const_declaration -> CONST const_list .)
    TYPE            reduce using rule 11 (const_declaration -> CONST const_list .)
    LABEL           reduce using rule 11 (const_declaration -> CONST const_list .)
    VAR             reduce using rule 11 (const_declaration -> CONST const_list .)
    FUNCTION        reduce using rule 11 (const_declaration -> CONST const_list .)
    PROCEDURE       reduce using rule 11 (const_declaration -> CONST const_list .)
    ID              shift and go to state 50

    CONST_ITEM                     shift and go to state 91

state 49

    (13) const_list -> CONST_ITEM . SEMI

    SEMI            shift and go to state 92


state 50

    (14) CONST_ITEM -> ID . EQ expression

    EQ              shift and go to state 93


state 51

    (15) type_declaration -> TYPE type_list .
    (16) type_list -> type_list . type_item SEMI
    (18) type_item -> . ID EQ type

    BEGIN           reduce using rule 15 (type_declaration -> TYPE type_list .)
    CONST           reduce using rule 15 (type_declaration -> TYPE type_list .)
    TYPE            reduce using rule 15 (type_declaration -> TYPE type_list .)
    LABEL           reduce using rule 15 (type_declaration -> TYPE type_list .)
    VAR             reduce using rule 15 (type_declaration -> TYPE type_list .)
    FUNCTION        reduce using rule 15 (type_declaration -> TYPE type_list .)
    PROCEDURE       reduce using rule 15 (type_declaration -> TYPE type_list .)
    ID              shift and go to state 53

    type_item                      shift and go to state 94

state 52

    (17) type_list -> type_item . SEMI

    SEMI            shift and go to state 95


state 53

    (18) type_item -> ID . EQ type

    EQ              shift and go to state 96


state 54

    (19) label_declaration -> LABEL label_list . SEMI
    (20) label_list -> label_list . COMMA INTEGER

    SEMI            shift and go to state 97
    COMMA           shift and go to state 98


state 55

    (21) label_list -> INTEGER .

    SEMI            reduce using rule 21 (label_list -> INTEGER .)
    COMMA           reduce using rule 21 (label_list -> INTEGER .)


state 56

    (22) var_declaration -> VAR var_list .
    (23) var_list -> var_list . var_item
    (25) var_item -> . ID_LIST COLON type SEMI
    (60) ID_LIST -> . ID
    (61) ID_LIST -> . ID_LIST COMMA ID

    BEGIN           reduce using rule 22 (var_declaration -> VAR var_list .)
    CONST           reduce using rule 22 (var_declaration -> VAR var_list .)
    TYPE            reduce using rule 22 (var_declaration -> VAR var_list .)
    LABEL           reduce using rule 22 (var_declaration -> VAR var_list .)
    VAR             reduce using rule 22 (var_declaration -> VAR var_list .)
    FUNCTION        reduce using rule 22 (var_declaration -> VAR var_list .)
    PROCEDURE       reduce using rule 22 (var_declaration -> VAR var_list .)
    ID              shift and go to state 59

    var_item                       shift and go to state 99
    ID_LIST                        shift and go to state 58

state 57

    (24) var_list -> var_item .

    ID              reduce using rule 24 (var_list -> var_item .)
    BEGIN           reduce using rule 24 (var_list -> var_item .)
    CONST           reduce using rule 24 (var_list -> var_item .)
    TYPE            reduce using rule 24 (var_list -> var_item .)
    LABEL           reduce using rule 24 (var_list -> var_item .)
    VAR             reduce using rule 24 (var_list -> var_item .)
    FUNCTION        reduce using rule 24 (var_list -> var_item .)
    PROCEDURE       reduce using rule 24 (var_list -> var_item .)


state 58

    (25) var_item -> ID_LIST . COLON type SEMI
    (61) ID_LIST -> ID_LIST . COMMA ID

    COLON           shift and go to state 100
    COMMA           shift and go to state 101


state 59

    (60) ID_LIST -> ID .

    COLON           reduce using rule 60 (ID_LIST -> ID .)
    COMMA           reduce using rule 60 (ID_LIST -> ID .)
    RPAREN          reduce using rule 60 (ID_LIST -> ID .)


state 60

    (26) function_declaration -> FUNCTION ID . LPAREN params RPAREN COLON type SEMI block SEMI

    LPAREN          shift and go to state 102


state 61

    (27) procedure_declaration -> PROCEDURE ID . LPAREN params RPAREN SEMI block SEMI

    LPAREN          shift and go to state 103


state 62

    (71) compound -> BEGIN statement_list . END
    (69) statement_list -> statement_list . SEMI statement

    END             shift and go to state 104
    SEMI            shift and go to state 64


state 63

    (2) block -> declarations BEGIN statement_list END .

    DOT             reduce using rule 2 (block -> declarations BEGIN statement_list END .)
    SEMI            reduce using rule 2 (block -> declarations BEGIN statement_list END .)


state 64

    (69) statement_list -> statement_list SEMI . statement
    (72) statement -> . assignment
    (73) statement -> . procedure_call
    (74) statement -> . if_statement
    (75) statement -> . for_statement
    (76) statement -> . while_statement
    (77) statement -> . repeat_statement
    (78) statement -> . case_statement
    (79) statement -> . with_statement
    (80) statement -> . goto_statement
    (81) statement -> . labeled_statement
    (82) statement -> . compound
    (83) statement -> . empty
    (84) assignment -> . variable ASSIGN expression
    (88) procedure_call -> . ID LPAREN expression_list RPAREN
    (89) procedure_call -> . ID
    (90) if_statement -> . IF expression THEN statement ELSE statement
    (91) if_statement -> . IF expression THEN statement
    (92) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (93) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (94) while_statement -> . WHILE expression DO statement
    (95) repeat_statement -> . REPEAT statement_list UNTIL expression
    (96) case_statement -> . CASE expression OF case_list END
    (102) with_statement -> . WITH variable_list DO statement
    (105) goto_statement -> . GOTO INTEGER
    (106) labeled_statement -> . INTEGER COLON statement
    (71) compound -> . BEGIN statement_list END
    (137) empty -> .
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    REPEAT          shift and go to state 43
    CASE            shift and go to state 44
    WITH            shift and go to state 45
    GOTO            shift and go to state 46
    INTEGER         shift and go to state 47
    BEGIN           shift and go to state 23
    END             reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    UNTIL           reduce using rule 137 (empty -> .)

    statement                      shift and go to state 105
    assignment                     shift and go to state 26
    procedure_call                 shift and go to state 27
    if_statement                   shift and go to state 28
    for_statement                  shift and go to state 29
    while_statement                shift and go to state 30
    repeat_statement               shift and go to state 31
    case_statement                 shift and go to state 32
    with_statement                 shift and go to state 33
    goto_statement                 shift and go to state 34
    labeled_statement              shift and go to state 35
    compound                       shift and go to state 36
    empty                          shift and go to state 37
    variable                       shift and go to state 38

state 65

    (84) assignment -> variable ASSIGN . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    variable                       shift and go to state 70
    expression                     shift and go to state 106
    constant                       shift and go to state 71

state 66

    (85) variable -> variable LBRACKET . expression RBRACKET
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    variable                       shift and go to state 70
    expression                     shift and go to state 107
    constant                       shift and go to state 71

state 67

    (86) variable -> variable DOT . ID

    ID              shift and go to state 108


state 68

    (88) procedure_call -> ID LPAREN . expression_list RPAREN
    (135) expression_list -> . expression
    (136) expression_list -> . expression_list COMMA expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression_list                shift and go to state 109
    expression                     shift and go to state 110
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 69

    (90) if_statement -> IF expression . THEN statement ELSE statement
    (91) if_statement -> IF expression . THEN statement
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            shift and go to state 111
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 70

    (112) expression -> variable .
    (85) variable -> variable . LBRACKET expression RBRACKET
    (86) variable -> variable . DOT ID

    THEN            reduce using rule 112 (expression -> variable .)
    COLON           reduce using rule 112 (expression -> variable .)
    PLUS            reduce using rule 112 (expression -> variable .)
    MINUS           reduce using rule 112 (expression -> variable .)
    TIMES           reduce using rule 112 (expression -> variable .)
    DIVIDE          reduce using rule 112 (expression -> variable .)
    DIV             reduce using rule 112 (expression -> variable .)
    MOD             reduce using rule 112 (expression -> variable .)
    EQ              reduce using rule 112 (expression -> variable .)
    NE              reduce using rule 112 (expression -> variable .)
    LT              reduce using rule 112 (expression -> variable .)
    LE              reduce using rule 112 (expression -> variable .)
    GT              reduce using rule 112 (expression -> variable .)
    GE              reduce using rule 112 (expression -> variable .)
    IN              reduce using rule 112 (expression -> variable .)
    AND             reduce using rule 112 (expression -> variable .)
    OR              reduce using rule 112 (expression -> variable .)
    DO              reduce using rule 112 (expression -> variable .)
    OF              reduce using rule 112 (expression -> variable .)
    END             reduce using rule 112 (expression -> variable .)
    SEMI            reduce using rule 112 (expression -> variable .)
    UNTIL           reduce using rule 112 (expression -> variable .)
    ELSE            reduce using rule 112 (expression -> variable .)
    RBRACKET        reduce using rule 112 (expression -> variable .)
    RPAREN          reduce using rule 112 (expression -> variable .)
    COMMA           reduce using rule 112 (expression -> variable .)
    TO              reduce using rule 112 (expression -> variable .)
    DOWNTO          reduce using rule 112 (expression -> variable .)
    LBRACKET        shift and go to state 66
    DOT             shift and go to state 67


state 71

    (113) expression -> constant .

    THEN            reduce using rule 113 (expression -> constant .)
    COLON           reduce using rule 113 (expression -> constant .)
    PLUS            reduce using rule 113 (expression -> constant .)
    MINUS           reduce using rule 113 (expression -> constant .)
    TIMES           reduce using rule 113 (expression -> constant .)
    DIVIDE          reduce using rule 113 (expression -> constant .)
    DIV             reduce using rule 113 (expression -> constant .)
    MOD             reduce using rule 113 (expression -> constant .)
    EQ              reduce using rule 113 (expression -> constant .)
    NE              reduce using rule 113 (expression -> constant .)
    LT              reduce using rule 113 (expression -> constant .)
    LE              reduce using rule 113 (expression -> constant .)
    GT              reduce using rule 113 (expression -> constant .)
    GE              reduce using rule 113 (expression -> constant .)
    IN              reduce using rule 113 (expression -> constant .)
    AND             reduce using rule 113 (expression -> constant .)
    OR              reduce using rule 113 (expression -> constant .)
    DO              reduce using rule 113 (expression -> constant .)
    OF              reduce using rule 113 (expression -> constant .)
    END             reduce using rule 113 (expression -> constant .)
    SEMI            reduce using rule 113 (expression -> constant .)
    UNTIL           reduce using rule 113 (expression -> constant .)
    ELSE            reduce using rule 113 (expression -> constant .)
    RBRACKET        reduce using rule 113 (expression -> constant .)
    RPAREN          reduce using rule 113 (expression -> constant .)
    COMMA           reduce using rule 113 (expression -> constant .)
    TO              reduce using rule 113 (expression -> constant .)
    DOWNTO          reduce using rule 113 (expression -> constant .)


state 72

    (114) expression -> TIPO . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 128


state 73

    (116) expression -> LPAREN . expression RPAREN
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 129
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 74

    (115) expression -> ID . LPAREN expression_list RPAREN
    (87) variable -> ID .

    LPAREN          shift and go to state 130
    LBRACKET        reduce using rule 87 (variable -> ID .)
    DOT             reduce using rule 87 (variable -> ID .)
    THEN            reduce using rule 87 (variable -> ID .)
    COLON           reduce using rule 87 (variable -> ID .)
    PLUS            reduce using rule 87 (variable -> ID .)
    MINUS           reduce using rule 87 (variable -> ID .)
    TIMES           reduce using rule 87 (variable -> ID .)
    DIVIDE          reduce using rule 87 (variable -> ID .)
    DIV             reduce using rule 87 (variable -> ID .)
    MOD             reduce using rule 87 (variable -> ID .)
    EQ              reduce using rule 87 (variable -> ID .)
    NE              reduce using rule 87 (variable -> ID .)
    LT              reduce using rule 87 (variable -> ID .)
    LE              reduce using rule 87 (variable -> ID .)
    GT              reduce using rule 87 (variable -> ID .)
    GE              reduce using rule 87 (variable -> ID .)
    IN              reduce using rule 87 (variable -> ID .)
    AND             reduce using rule 87 (variable -> ID .)
    OR              reduce using rule 87 (variable -> ID .)
    DO              reduce using rule 87 (variable -> ID .)
    OF              reduce using rule 87 (variable -> ID .)
    END             reduce using rule 87 (variable -> ID .)
    SEMI            reduce using rule 87 (variable -> ID .)
    UNTIL           reduce using rule 87 (variable -> ID .)
    ELSE            reduce using rule 87 (variable -> ID .)
    RBRACKET        reduce using rule 87 (variable -> ID .)
    RPAREN          reduce using rule 87 (variable -> ID .)
    COMMA           reduce using rule 87 (variable -> ID .)
    TO              reduce using rule 87 (variable -> ID .)
    DOWNTO          reduce using rule 87 (variable -> ID .)


state 75

    (117) expression -> LBRACKET . expression_list RBRACKET
    (135) expression_list -> . expression
    (136) expression_list -> . expression_list COMMA expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression_list                shift and go to state 131
    expression                     shift and go to state 110
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 76

    (118) expression -> NOT . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 132
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 77

    (107) constant -> INTEGER .

    THEN            reduce using rule 107 (constant -> INTEGER .)
    COLON           reduce using rule 107 (constant -> INTEGER .)
    PLUS            reduce using rule 107 (constant -> INTEGER .)
    MINUS           reduce using rule 107 (constant -> INTEGER .)
    TIMES           reduce using rule 107 (constant -> INTEGER .)
    DIVIDE          reduce using rule 107 (constant -> INTEGER .)
    DIV             reduce using rule 107 (constant -> INTEGER .)
    MOD             reduce using rule 107 (constant -> INTEGER .)
    EQ              reduce using rule 107 (constant -> INTEGER .)
    NE              reduce using rule 107 (constant -> INTEGER .)
    LT              reduce using rule 107 (constant -> INTEGER .)
    LE              reduce using rule 107 (constant -> INTEGER .)
    GT              reduce using rule 107 (constant -> INTEGER .)
    GE              reduce using rule 107 (constant -> INTEGER .)
    IN              reduce using rule 107 (constant -> INTEGER .)
    AND             reduce using rule 107 (constant -> INTEGER .)
    OR              reduce using rule 107 (constant -> INTEGER .)
    DO              reduce using rule 107 (constant -> INTEGER .)
    OF              reduce using rule 107 (constant -> INTEGER .)
    END             reduce using rule 107 (constant -> INTEGER .)
    SEMI            reduce using rule 107 (constant -> INTEGER .)
    UNTIL           reduce using rule 107 (constant -> INTEGER .)
    ELSE            reduce using rule 107 (constant -> INTEGER .)
    RBRACKET        reduce using rule 107 (constant -> INTEGER .)
    RPAREN          reduce using rule 107 (constant -> INTEGER .)
    COMMA           reduce using rule 107 (constant -> INTEGER .)
    TO              reduce using rule 107 (constant -> INTEGER .)
    DOWNTO          reduce using rule 107 (constant -> INTEGER .)


state 78

    (108) constant -> REAL .

    THEN            reduce using rule 108 (constant -> REAL .)
    COLON           reduce using rule 108 (constant -> REAL .)
    PLUS            reduce using rule 108 (constant -> REAL .)
    MINUS           reduce using rule 108 (constant -> REAL .)
    TIMES           reduce using rule 108 (constant -> REAL .)
    DIVIDE          reduce using rule 108 (constant -> REAL .)
    DIV             reduce using rule 108 (constant -> REAL .)
    MOD             reduce using rule 108 (constant -> REAL .)
    EQ              reduce using rule 108 (constant -> REAL .)
    NE              reduce using rule 108 (constant -> REAL .)
    LT              reduce using rule 108 (constant -> REAL .)
    LE              reduce using rule 108 (constant -> REAL .)
    GT              reduce using rule 108 (constant -> REAL .)
    GE              reduce using rule 108 (constant -> REAL .)
    IN              reduce using rule 108 (constant -> REAL .)
    AND             reduce using rule 108 (constant -> REAL .)
    OR              reduce using rule 108 (constant -> REAL .)
    DO              reduce using rule 108 (constant -> REAL .)
    OF              reduce using rule 108 (constant -> REAL .)
    END             reduce using rule 108 (constant -> REAL .)
    SEMI            reduce using rule 108 (constant -> REAL .)
    UNTIL           reduce using rule 108 (constant -> REAL .)
    ELSE            reduce using rule 108 (constant -> REAL .)
    RBRACKET        reduce using rule 108 (constant -> REAL .)
    RPAREN          reduce using rule 108 (constant -> REAL .)
    COMMA           reduce using rule 108 (constant -> REAL .)
    TO              reduce using rule 108 (constant -> REAL .)
    DOWNTO          reduce using rule 108 (constant -> REAL .)


state 79

    (109) constant -> BOOLEAN .

    THEN            reduce using rule 109 (constant -> BOOLEAN .)
    COLON           reduce using rule 109 (constant -> BOOLEAN .)
    PLUS            reduce using rule 109 (constant -> BOOLEAN .)
    MINUS           reduce using rule 109 (constant -> BOOLEAN .)
    TIMES           reduce using rule 109 (constant -> BOOLEAN .)
    DIVIDE          reduce using rule 109 (constant -> BOOLEAN .)
    DIV             reduce using rule 109 (constant -> BOOLEAN .)
    MOD             reduce using rule 109 (constant -> BOOLEAN .)
    EQ              reduce using rule 109 (constant -> BOOLEAN .)
    NE              reduce using rule 109 (constant -> BOOLEAN .)
    LT              reduce using rule 109 (constant -> BOOLEAN .)
    LE              reduce using rule 109 (constant -> BOOLEAN .)
    GT              reduce using rule 109 (constant -> BOOLEAN .)
    GE              reduce using rule 109 (constant -> BOOLEAN .)
    IN              reduce using rule 109 (constant -> BOOLEAN .)
    AND             reduce using rule 109 (constant -> BOOLEAN .)
    OR              reduce using rule 109 (constant -> BOOLEAN .)
    DO              reduce using rule 109 (constant -> BOOLEAN .)
    OF              reduce using rule 109 (constant -> BOOLEAN .)
    END             reduce using rule 109 (constant -> BOOLEAN .)
    SEMI            reduce using rule 109 (constant -> BOOLEAN .)
    UNTIL           reduce using rule 109 (constant -> BOOLEAN .)
    ELSE            reduce using rule 109 (constant -> BOOLEAN .)
    RBRACKET        reduce using rule 109 (constant -> BOOLEAN .)
    RPAREN          reduce using rule 109 (constant -> BOOLEAN .)
    COMMA           reduce using rule 109 (constant -> BOOLEAN .)
    TO              reduce using rule 109 (constant -> BOOLEAN .)
    DOWNTO          reduce using rule 109 (constant -> BOOLEAN .)


state 80

    (110) constant -> CHAR .

    THEN            reduce using rule 110 (constant -> CHAR .)
    COLON           reduce using rule 110 (constant -> CHAR .)
    PLUS            reduce using rule 110 (constant -> CHAR .)
    MINUS           reduce using rule 110 (constant -> CHAR .)
    TIMES           reduce using rule 110 (constant -> CHAR .)
    DIVIDE          reduce using rule 110 (constant -> CHAR .)
    DIV             reduce using rule 110 (constant -> CHAR .)
    MOD             reduce using rule 110 (constant -> CHAR .)
    EQ              reduce using rule 110 (constant -> CHAR .)
    NE              reduce using rule 110 (constant -> CHAR .)
    LT              reduce using rule 110 (constant -> CHAR .)
    LE              reduce using rule 110 (constant -> CHAR .)
    GT              reduce using rule 110 (constant -> CHAR .)
    GE              reduce using rule 110 (constant -> CHAR .)
    IN              reduce using rule 110 (constant -> CHAR .)
    AND             reduce using rule 110 (constant -> CHAR .)
    OR              reduce using rule 110 (constant -> CHAR .)
    DO              reduce using rule 110 (constant -> CHAR .)
    OF              reduce using rule 110 (constant -> CHAR .)
    END             reduce using rule 110 (constant -> CHAR .)
    SEMI            reduce using rule 110 (constant -> CHAR .)
    UNTIL           reduce using rule 110 (constant -> CHAR .)
    ELSE            reduce using rule 110 (constant -> CHAR .)
    RBRACKET        reduce using rule 110 (constant -> CHAR .)
    RPAREN          reduce using rule 110 (constant -> CHAR .)
    COMMA           reduce using rule 110 (constant -> CHAR .)
    TO              reduce using rule 110 (constant -> CHAR .)
    DOWNTO          reduce using rule 110 (constant -> CHAR .)


state 81

    (111) constant -> TEXTO .

    THEN            reduce using rule 111 (constant -> TEXTO .)
    COLON           reduce using rule 111 (constant -> TEXTO .)
    PLUS            reduce using rule 111 (constant -> TEXTO .)
    MINUS           reduce using rule 111 (constant -> TEXTO .)
    TIMES           reduce using rule 111 (constant -> TEXTO .)
    DIVIDE          reduce using rule 111 (constant -> TEXTO .)
    DIV             reduce using rule 111 (constant -> TEXTO .)
    MOD             reduce using rule 111 (constant -> TEXTO .)
    EQ              reduce using rule 111 (constant -> TEXTO .)
    NE              reduce using rule 111 (constant -> TEXTO .)
    LT              reduce using rule 111 (constant -> TEXTO .)
    LE              reduce using rule 111 (constant -> TEXTO .)
    GT              reduce using rule 111 (constant -> TEXTO .)
    GE              reduce using rule 111 (constant -> TEXTO .)
    IN              reduce using rule 111 (constant -> TEXTO .)
    AND             reduce using rule 111 (constant -> TEXTO .)
    OR              reduce using rule 111 (constant -> TEXTO .)
    DO              reduce using rule 111 (constant -> TEXTO .)
    OF              reduce using rule 111 (constant -> TEXTO .)
    END             reduce using rule 111 (constant -> TEXTO .)
    SEMI            reduce using rule 111 (constant -> TEXTO .)
    UNTIL           reduce using rule 111 (constant -> TEXTO .)
    ELSE            reduce using rule 111 (constant -> TEXTO .)
    RBRACKET        reduce using rule 111 (constant -> TEXTO .)
    RPAREN          reduce using rule 111 (constant -> TEXTO .)
    COMMA           reduce using rule 111 (constant -> TEXTO .)
    TO              reduce using rule 111 (constant -> TEXTO .)
    DOWNTO          reduce using rule 111 (constant -> TEXTO .)


state 82

    (92) for_statement -> FOR ID . ASSIGN expression TO expression DO statement
    (93) for_statement -> FOR ID . ASSIGN expression DOWNTO expression DO statement

    ASSIGN          shift and go to state 133


state 83

    (94) while_statement -> WHILE expression . DO statement
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    DO              shift and go to state 134
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 84

    (95) repeat_statement -> REPEAT statement_list . UNTIL expression
    (69) statement_list -> statement_list . SEMI statement

    UNTIL           shift and go to state 135
    SEMI            shift and go to state 64


state 85

    (96) case_statement -> CASE expression . OF case_list END
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    OF              shift and go to state 136
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 86

    (102) with_statement -> WITH variable_list . DO statement
    (104) variable_list -> variable_list . COMMA variable

    DO              shift and go to state 137
    COMMA           shift and go to state 138


state 87

    (103) variable_list -> variable .
    (85) variable -> variable . LBRACKET expression RBRACKET
    (86) variable -> variable . DOT ID

    DO              reduce using rule 103 (variable_list -> variable .)
    COMMA           reduce using rule 103 (variable_list -> variable .)
    LBRACKET        shift and go to state 66
    DOT             shift and go to state 67


state 88

    (87) variable -> ID .

    LBRACKET        reduce using rule 87 (variable -> ID .)
    DOT             reduce using rule 87 (variable -> ID .)
    DO              reduce using rule 87 (variable -> ID .)
    COMMA           reduce using rule 87 (variable -> ID .)


state 89

    (105) goto_statement -> GOTO INTEGER .

    END             reduce using rule 105 (goto_statement -> GOTO INTEGER .)
    SEMI            reduce using rule 105 (goto_statement -> GOTO INTEGER .)
    UNTIL           reduce using rule 105 (goto_statement -> GOTO INTEGER .)
    ELSE            reduce using rule 105 (goto_statement -> GOTO INTEGER .)


state 90

    (106) labeled_statement -> INTEGER COLON . statement
    (72) statement -> . assignment
    (73) statement -> . procedure_call
    (74) statement -> . if_statement
    (75) statement -> . for_statement
    (76) statement -> . while_statement
    (77) statement -> . repeat_statement
    (78) statement -> . case_statement
    (79) statement -> . with_statement
    (80) statement -> . goto_statement
    (81) statement -> . labeled_statement
    (82) statement -> . compound
    (83) statement -> . empty
    (84) assignment -> . variable ASSIGN expression
    (88) procedure_call -> . ID LPAREN expression_list RPAREN
    (89) procedure_call -> . ID
    (90) if_statement -> . IF expression THEN statement ELSE statement
    (91) if_statement -> . IF expression THEN statement
    (92) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (93) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (94) while_statement -> . WHILE expression DO statement
    (95) repeat_statement -> . REPEAT statement_list UNTIL expression
    (96) case_statement -> . CASE expression OF case_list END
    (102) with_statement -> . WITH variable_list DO statement
    (105) goto_statement -> . GOTO INTEGER
    (106) labeled_statement -> . INTEGER COLON statement
    (71) compound -> . BEGIN statement_list END
    (137) empty -> .
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    REPEAT          shift and go to state 43
    CASE            shift and go to state 44
    WITH            shift and go to state 45
    GOTO            shift and go to state 46
    INTEGER         shift and go to state 47
    BEGIN           shift and go to state 23
    END             reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    UNTIL           reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)

    statement                      shift and go to state 139
    assignment                     shift and go to state 26
    procedure_call                 shift and go to state 27
    if_statement                   shift and go to state 28
    for_statement                  shift and go to state 29
    while_statement                shift and go to state 30
    repeat_statement               shift and go to state 31
    case_statement                 shift and go to state 32
    with_statement                 shift and go to state 33
    goto_statement                 shift and go to state 34
    labeled_statement              shift and go to state 35
    compound                       shift and go to state 36
    empty                          shift and go to state 37
    variable                       shift and go to state 38

state 91

    (12) const_list -> const_list CONST_ITEM . SEMI

    SEMI            shift and go to state 140


state 92

    (13) const_list -> CONST_ITEM SEMI .

    ID              reduce using rule 13 (const_list -> CONST_ITEM SEMI .)
    BEGIN           reduce using rule 13 (const_list -> CONST_ITEM SEMI .)
    CONST           reduce using rule 13 (const_list -> CONST_ITEM SEMI .)
    TYPE            reduce using rule 13 (const_list -> CONST_ITEM SEMI .)
    LABEL           reduce using rule 13 (const_list -> CONST_ITEM SEMI .)
    VAR             reduce using rule 13 (const_list -> CONST_ITEM SEMI .)
    FUNCTION        reduce using rule 13 (const_list -> CONST_ITEM SEMI .)
    PROCEDURE       reduce using rule 13 (const_list -> CONST_ITEM SEMI .)


state 93

    (14) CONST_ITEM -> ID EQ . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 141
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 94

    (16) type_list -> type_list type_item . SEMI

    SEMI            shift and go to state 142


state 95

    (17) type_list -> type_item SEMI .

    ID              reduce using rule 17 (type_list -> type_item SEMI .)
    BEGIN           reduce using rule 17 (type_list -> type_item SEMI .)
    CONST           reduce using rule 17 (type_list -> type_item SEMI .)
    TYPE            reduce using rule 17 (type_list -> type_item SEMI .)
    LABEL           reduce using rule 17 (type_list -> type_item SEMI .)
    VAR             reduce using rule 17 (type_list -> type_item SEMI .)
    FUNCTION        reduce using rule 17 (type_list -> type_item SEMI .)
    PROCEDURE       reduce using rule 17 (type_list -> type_item SEMI .)


state 96

    (18) type_item -> ID EQ . type
    (28) type -> . packed_type
    (29) type -> . simple_type
    (30) type -> . id_type
    (31) type -> . array_type
    (32) type -> . enum_type
    (33) type -> . subrange_type
    (34) type -> . record_type
    (35) type -> . set_type
    (36) type -> . file_type
    (37) packed_type -> . PACKED type
    (38) simple_type -> . TIPO
    (39) id_type -> . ID
    (40) array_type -> . ARRAY LBRACKET range RBRACKET OF type
    (41) enum_type -> . LPAREN ID_LIST RPAREN
    (42) subrange_type -> . const_expr RANGE const_expr
    (43) record_type -> . RECORD field_list variant_part END
    (44) record_type -> . RECORD field_list END
    (45) set_type -> . SET OF type
    (46) file_type -> . FILE OF type
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    PACKED          shift and go to state 154
    TIPO            shift and go to state 155
    ID              shift and go to state 143
    ARRAY           shift and go to state 156
    LPAREN          shift and go to state 157
    RECORD          shift and go to state 159
    SET             shift and go to state 160
    FILE            shift and go to state 161
    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166

    type                           shift and go to state 144
    packed_type                    shift and go to state 145
    simple_type                    shift and go to state 146
    id_type                        shift and go to state 147
    array_type                     shift and go to state 148
    enum_type                      shift and go to state 149
    subrange_type                  shift and go to state 150
    record_type                    shift and go to state 151
    set_type                       shift and go to state 152
    file_type                      shift and go to state 153
    const_expr                     shift and go to state 158

state 97

    (19) label_declaration -> LABEL label_list SEMI .

    BEGIN           reduce using rule 19 (label_declaration -> LABEL label_list SEMI .)
    CONST           reduce using rule 19 (label_declaration -> LABEL label_list SEMI .)
    TYPE            reduce using rule 19 (label_declaration -> LABEL label_list SEMI .)
    LABEL           reduce using rule 19 (label_declaration -> LABEL label_list SEMI .)
    VAR             reduce using rule 19 (label_declaration -> LABEL label_list SEMI .)
    FUNCTION        reduce using rule 19 (label_declaration -> LABEL label_list SEMI .)
    PROCEDURE       reduce using rule 19 (label_declaration -> LABEL label_list SEMI .)


state 98

    (20) label_list -> label_list COMMA . INTEGER

    INTEGER         shift and go to state 167


state 99

    (23) var_list -> var_list var_item .

    ID              reduce using rule 23 (var_list -> var_list var_item .)
    BEGIN           reduce using rule 23 (var_list -> var_list var_item .)
    CONST           reduce using rule 23 (var_list -> var_list var_item .)
    TYPE            reduce using rule 23 (var_list -> var_list var_item .)
    LABEL           reduce using rule 23 (var_list -> var_list var_item .)
    VAR             reduce using rule 23 (var_list -> var_list var_item .)
    FUNCTION        reduce using rule 23 (var_list -> var_list var_item .)
    PROCEDURE       reduce using rule 23 (var_list -> var_list var_item .)


state 100

    (25) var_item -> ID_LIST COLON . type SEMI
    (28) type -> . packed_type
    (29) type -> . simple_type
    (30) type -> . id_type
    (31) type -> . array_type
    (32) type -> . enum_type
    (33) type -> . subrange_type
    (34) type -> . record_type
    (35) type -> . set_type
    (36) type -> . file_type
    (37) packed_type -> . PACKED type
    (38) simple_type -> . TIPO
    (39) id_type -> . ID
    (40) array_type -> . ARRAY LBRACKET range RBRACKET OF type
    (41) enum_type -> . LPAREN ID_LIST RPAREN
    (42) subrange_type -> . const_expr RANGE const_expr
    (43) record_type -> . RECORD field_list variant_part END
    (44) record_type -> . RECORD field_list END
    (45) set_type -> . SET OF type
    (46) file_type -> . FILE OF type
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    PACKED          shift and go to state 154
    TIPO            shift and go to state 155
    ID              shift and go to state 143
    ARRAY           shift and go to state 156
    LPAREN          shift and go to state 157
    RECORD          shift and go to state 159
    SET             shift and go to state 160
    FILE            shift and go to state 161
    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166

    type                           shift and go to state 168
    packed_type                    shift and go to state 145
    simple_type                    shift and go to state 146
    id_type                        shift and go to state 147
    array_type                     shift and go to state 148
    enum_type                      shift and go to state 149
    subrange_type                  shift and go to state 150
    record_type                    shift and go to state 151
    set_type                       shift and go to state 152
    file_type                      shift and go to state 153
    const_expr                     shift and go to state 158

state 101

    (61) ID_LIST -> ID_LIST COMMA . ID

    ID              shift and go to state 169


state 102

    (26) function_declaration -> FUNCTION ID LPAREN . params RPAREN COLON type SEMI block SEMI
    (62) params -> . param_list
    (63) params -> . empty
    (64) param_list -> . param_list SEMI param
    (65) param_list -> . param
    (137) empty -> .
    (66) param -> . ID_LIST COLON type
    (67) param -> . VAR ID_LIST COLON type
    (68) param -> . CONST ID_LIST COLON type
    (60) ID_LIST -> . ID
    (61) ID_LIST -> . ID_LIST COMMA ID

    RPAREN          reduce using rule 137 (empty -> .)
    VAR             shift and go to state 175
    CONST           shift and go to state 176
    ID              shift and go to state 59

    params                         shift and go to state 170
    param_list                     shift and go to state 171
    empty                          shift and go to state 172
    param                          shift and go to state 173
    ID_LIST                        shift and go to state 174

state 103

    (27) procedure_declaration -> PROCEDURE ID LPAREN . params RPAREN SEMI block SEMI
    (62) params -> . param_list
    (63) params -> . empty
    (64) param_list -> . param_list SEMI param
    (65) param_list -> . param
    (137) empty -> .
    (66) param -> . ID_LIST COLON type
    (67) param -> . VAR ID_LIST COLON type
    (68) param -> . CONST ID_LIST COLON type
    (60) ID_LIST -> . ID
    (61) ID_LIST -> . ID_LIST COMMA ID

    RPAREN          reduce using rule 137 (empty -> .)
    VAR             shift and go to state 175
    CONST           shift and go to state 176
    ID              shift and go to state 59

    params                         shift and go to state 177
    param_list                     shift and go to state 171
    empty                          shift and go to state 172
    param                          shift and go to state 173
    ID_LIST                        shift and go to state 174

state 104

    (71) compound -> BEGIN statement_list END .

    END             reduce using rule 71 (compound -> BEGIN statement_list END .)
    SEMI            reduce using rule 71 (compound -> BEGIN statement_list END .)
    UNTIL           reduce using rule 71 (compound -> BEGIN statement_list END .)
    ELSE            reduce using rule 71 (compound -> BEGIN statement_list END .)


state 105

    (69) statement_list -> statement_list SEMI statement .

    END             reduce using rule 69 (statement_list -> statement_list SEMI statement .)
    SEMI            reduce using rule 69 (statement_list -> statement_list SEMI statement .)
    UNTIL           reduce using rule 69 (statement_list -> statement_list SEMI statement .)


state 106

    (84) assignment -> variable ASSIGN expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    END             reduce using rule 84 (assignment -> variable ASSIGN expression .)
    SEMI            reduce using rule 84 (assignment -> variable ASSIGN expression .)
    UNTIL           reduce using rule 84 (assignment -> variable ASSIGN expression .)
    ELSE            reduce using rule 84 (assignment -> variable ASSIGN expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 107

    (85) variable -> variable LBRACKET expression . RBRACKET
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    RBRACKET        shift and go to state 178
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 108

    (86) variable -> variable DOT ID .

    ASSIGN          reduce using rule 86 (variable -> variable DOT ID .)
    LBRACKET        reduce using rule 86 (variable -> variable DOT ID .)
    DOT             reduce using rule 86 (variable -> variable DOT ID .)
    THEN            reduce using rule 86 (variable -> variable DOT ID .)
    COLON           reduce using rule 86 (variable -> variable DOT ID .)
    PLUS            reduce using rule 86 (variable -> variable DOT ID .)
    MINUS           reduce using rule 86 (variable -> variable DOT ID .)
    TIMES           reduce using rule 86 (variable -> variable DOT ID .)
    DIVIDE          reduce using rule 86 (variable -> variable DOT ID .)
    DIV             reduce using rule 86 (variable -> variable DOT ID .)
    MOD             reduce using rule 86 (variable -> variable DOT ID .)
    EQ              reduce using rule 86 (variable -> variable DOT ID .)
    NE              reduce using rule 86 (variable -> variable DOT ID .)
    LT              reduce using rule 86 (variable -> variable DOT ID .)
    LE              reduce using rule 86 (variable -> variable DOT ID .)
    GT              reduce using rule 86 (variable -> variable DOT ID .)
    GE              reduce using rule 86 (variable -> variable DOT ID .)
    IN              reduce using rule 86 (variable -> variable DOT ID .)
    AND             reduce using rule 86 (variable -> variable DOT ID .)
    OR              reduce using rule 86 (variable -> variable DOT ID .)
    DO              reduce using rule 86 (variable -> variable DOT ID .)
    OF              reduce using rule 86 (variable -> variable DOT ID .)
    COMMA           reduce using rule 86 (variable -> variable DOT ID .)
    END             reduce using rule 86 (variable -> variable DOT ID .)
    SEMI            reduce using rule 86 (variable -> variable DOT ID .)
    UNTIL           reduce using rule 86 (variable -> variable DOT ID .)
    ELSE            reduce using rule 86 (variable -> variable DOT ID .)
    RBRACKET        reduce using rule 86 (variable -> variable DOT ID .)
    RPAREN          reduce using rule 86 (variable -> variable DOT ID .)
    TO              reduce using rule 86 (variable -> variable DOT ID .)
    DOWNTO          reduce using rule 86 (variable -> variable DOT ID .)


state 109

    (88) procedure_call -> ID LPAREN expression_list . RPAREN
    (136) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 179
    COMMA           shift and go to state 180


state 110

    (135) expression_list -> expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    RPAREN          reduce using rule 135 (expression_list -> expression .)
    COMMA           reduce using rule 135 (expression_list -> expression .)
    RBRACKET        reduce using rule 135 (expression_list -> expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 111

    (90) if_statement -> IF expression THEN . statement ELSE statement
    (91) if_statement -> IF expression THEN . statement
    (72) statement -> . assignment
    (73) statement -> . procedure_call
    (74) statement -> . if_statement
    (75) statement -> . for_statement
    (76) statement -> . while_statement
    (77) statement -> . repeat_statement
    (78) statement -> . case_statement
    (79) statement -> . with_statement
    (80) statement -> . goto_statement
    (81) statement -> . labeled_statement
    (82) statement -> . compound
    (83) statement -> . empty
    (84) assignment -> . variable ASSIGN expression
    (88) procedure_call -> . ID LPAREN expression_list RPAREN
    (89) procedure_call -> . ID
    (90) if_statement -> . IF expression THEN statement ELSE statement
    (91) if_statement -> . IF expression THEN statement
    (92) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (93) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (94) while_statement -> . WHILE expression DO statement
    (95) repeat_statement -> . REPEAT statement_list UNTIL expression
    (96) case_statement -> . CASE expression OF case_list END
    (102) with_statement -> . WITH variable_list DO statement
    (105) goto_statement -> . GOTO INTEGER
    (106) labeled_statement -> . INTEGER COLON statement
    (71) compound -> . BEGIN statement_list END
    (137) empty -> .
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    REPEAT          shift and go to state 43
    CASE            shift and go to state 44
    WITH            shift and go to state 45
    GOTO            shift and go to state 46
    INTEGER         shift and go to state 47
    BEGIN           shift and go to state 23
    END             reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    UNTIL           reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)

    statement                      shift and go to state 181
    assignment                     shift and go to state 26
    procedure_call                 shift and go to state 27
    if_statement                   shift and go to state 28
    for_statement                  shift and go to state 29
    while_statement                shift and go to state 30
    repeat_statement               shift and go to state 31
    case_statement                 shift and go to state 32
    with_statement                 shift and go to state 33
    goto_statement                 shift and go to state 34
    labeled_statement              shift and go to state 35
    compound                       shift and go to state 36
    empty                          shift and go to state 37
    variable                       shift and go to state 38

state 112

    (119) expression -> expression COLON . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 182
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 113

    (120) expression -> expression PLUS . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 183
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 114

    (121) expression -> expression MINUS . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 184
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 115

    (122) expression -> expression TIMES . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 185
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 116

    (123) expression -> expression DIVIDE . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 186
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 117

    (124) expression -> expression DIV . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 187
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 118

    (125) expression -> expression MOD . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 188
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 119

    (126) expression -> expression EQ . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 189
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 120

    (127) expression -> expression NE . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 190
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 121

    (128) expression -> expression LT . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 191
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 122

    (129) expression -> expression LE . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 192
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 123

    (130) expression -> expression GT . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 193
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 124

    (131) expression -> expression GE . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 194
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 125

    (132) expression -> expression IN . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 195
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 126

    (133) expression -> expression AND . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 196
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 127

    (134) expression -> expression OR . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 197
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 128

    (114) expression -> TIPO LPAREN . expression_list RPAREN
    (135) expression_list -> . expression
    (136) expression_list -> . expression_list COMMA expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression_list                shift and go to state 198
    expression                     shift and go to state 110
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 129

    (116) expression -> LPAREN expression . RPAREN
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    RPAREN          shift and go to state 199
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 130

    (115) expression -> ID LPAREN . expression_list RPAREN
    (135) expression_list -> . expression
    (136) expression_list -> . expression_list COMMA expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression_list                shift and go to state 200
    expression                     shift and go to state 110
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 131

    (117) expression -> LBRACKET expression_list . RBRACKET
    (136) expression_list -> expression_list . COMMA expression

    RBRACKET        shift and go to state 201
    COMMA           shift and go to state 180


state 132

    (118) expression -> NOT expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 118 (expression -> NOT expression .)
    AND             reduce using rule 118 (expression -> NOT expression .)
    OR              reduce using rule 118 (expression -> NOT expression .)
    DO              reduce using rule 118 (expression -> NOT expression .)
    OF              reduce using rule 118 (expression -> NOT expression .)
    END             reduce using rule 118 (expression -> NOT expression .)
    SEMI            reduce using rule 118 (expression -> NOT expression .)
    UNTIL           reduce using rule 118 (expression -> NOT expression .)
    ELSE            reduce using rule 118 (expression -> NOT expression .)
    RBRACKET        reduce using rule 118 (expression -> NOT expression .)
    RPAREN          reduce using rule 118 (expression -> NOT expression .)
    COMMA           reduce using rule 118 (expression -> NOT expression .)
    TO              reduce using rule 118 (expression -> NOT expression .)
    DOWNTO          reduce using rule 118 (expression -> NOT expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125

  ! COLON           [ reduce using rule 118 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 118 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 118 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 118 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 118 (expression -> NOT expression .) ]
  ! DIV             [ reduce using rule 118 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 118 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 118 (expression -> NOT expression .) ]
  ! NE              [ reduce using rule 118 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 118 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 118 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 118 (expression -> NOT expression .) ]
  ! GE              [ reduce using rule 118 (expression -> NOT expression .) ]
  ! IN              [ reduce using rule 118 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 133

    (92) for_statement -> FOR ID ASSIGN . expression TO expression DO statement
    (93) for_statement -> FOR ID ASSIGN . expression DOWNTO expression DO statement
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 202
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 134

    (94) while_statement -> WHILE expression DO . statement
    (72) statement -> . assignment
    (73) statement -> . procedure_call
    (74) statement -> . if_statement
    (75) statement -> . for_statement
    (76) statement -> . while_statement
    (77) statement -> . repeat_statement
    (78) statement -> . case_statement
    (79) statement -> . with_statement
    (80) statement -> . goto_statement
    (81) statement -> . labeled_statement
    (82) statement -> . compound
    (83) statement -> . empty
    (84) assignment -> . variable ASSIGN expression
    (88) procedure_call -> . ID LPAREN expression_list RPAREN
    (89) procedure_call -> . ID
    (90) if_statement -> . IF expression THEN statement ELSE statement
    (91) if_statement -> . IF expression THEN statement
    (92) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (93) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (94) while_statement -> . WHILE expression DO statement
    (95) repeat_statement -> . REPEAT statement_list UNTIL expression
    (96) case_statement -> . CASE expression OF case_list END
    (102) with_statement -> . WITH variable_list DO statement
    (105) goto_statement -> . GOTO INTEGER
    (106) labeled_statement -> . INTEGER COLON statement
    (71) compound -> . BEGIN statement_list END
    (137) empty -> .
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    REPEAT          shift and go to state 43
    CASE            shift and go to state 44
    WITH            shift and go to state 45
    GOTO            shift and go to state 46
    INTEGER         shift and go to state 47
    BEGIN           shift and go to state 23
    END             reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    UNTIL           reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)

    statement                      shift and go to state 203
    assignment                     shift and go to state 26
    procedure_call                 shift and go to state 27
    if_statement                   shift and go to state 28
    for_statement                  shift and go to state 29
    while_statement                shift and go to state 30
    repeat_statement               shift and go to state 31
    case_statement                 shift and go to state 32
    with_statement                 shift and go to state 33
    goto_statement                 shift and go to state 34
    labeled_statement              shift and go to state 35
    compound                       shift and go to state 36
    empty                          shift and go to state 37
    variable                       shift and go to state 38

state 135

    (95) repeat_statement -> REPEAT statement_list UNTIL . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 204
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 136

    (96) case_statement -> CASE expression OF . case_list END
    (97) case_list -> . case_list case_item SEMI
    (98) case_list -> . case_item SEMI
    (99) case_item -> . constant_list COLON statement_list
    (100) constant_list -> . const_expr
    (101) constant_list -> . constant_list COMMA const_expr
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166
    ID              shift and go to state 209

    case_list                      shift and go to state 205
    case_item                      shift and go to state 206
    constant_list                  shift and go to state 207
    const_expr                     shift and go to state 208

state 137

    (102) with_statement -> WITH variable_list DO . statement
    (72) statement -> . assignment
    (73) statement -> . procedure_call
    (74) statement -> . if_statement
    (75) statement -> . for_statement
    (76) statement -> . while_statement
    (77) statement -> . repeat_statement
    (78) statement -> . case_statement
    (79) statement -> . with_statement
    (80) statement -> . goto_statement
    (81) statement -> . labeled_statement
    (82) statement -> . compound
    (83) statement -> . empty
    (84) assignment -> . variable ASSIGN expression
    (88) procedure_call -> . ID LPAREN expression_list RPAREN
    (89) procedure_call -> . ID
    (90) if_statement -> . IF expression THEN statement ELSE statement
    (91) if_statement -> . IF expression THEN statement
    (92) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (93) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (94) while_statement -> . WHILE expression DO statement
    (95) repeat_statement -> . REPEAT statement_list UNTIL expression
    (96) case_statement -> . CASE expression OF case_list END
    (102) with_statement -> . WITH variable_list DO statement
    (105) goto_statement -> . GOTO INTEGER
    (106) labeled_statement -> . INTEGER COLON statement
    (71) compound -> . BEGIN statement_list END
    (137) empty -> .
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    REPEAT          shift and go to state 43
    CASE            shift and go to state 44
    WITH            shift and go to state 45
    GOTO            shift and go to state 46
    INTEGER         shift and go to state 47
    BEGIN           shift and go to state 23
    END             reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    UNTIL           reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)

    statement                      shift and go to state 210
    assignment                     shift and go to state 26
    procedure_call                 shift and go to state 27
    if_statement                   shift and go to state 28
    for_statement                  shift and go to state 29
    while_statement                shift and go to state 30
    repeat_statement               shift and go to state 31
    case_statement                 shift and go to state 32
    with_statement                 shift and go to state 33
    goto_statement                 shift and go to state 34
    labeled_statement              shift and go to state 35
    compound                       shift and go to state 36
    empty                          shift and go to state 37
    variable                       shift and go to state 38

state 138

    (104) variable_list -> variable_list COMMA . variable
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 88

    variable                       shift and go to state 211

state 139

    (106) labeled_statement -> INTEGER COLON statement .

    END             reduce using rule 106 (labeled_statement -> INTEGER COLON statement .)
    SEMI            reduce using rule 106 (labeled_statement -> INTEGER COLON statement .)
    UNTIL           reduce using rule 106 (labeled_statement -> INTEGER COLON statement .)
    ELSE            reduce using rule 106 (labeled_statement -> INTEGER COLON statement .)


state 140

    (12) const_list -> const_list CONST_ITEM SEMI .

    ID              reduce using rule 12 (const_list -> const_list CONST_ITEM SEMI .)
    BEGIN           reduce using rule 12 (const_list -> const_list CONST_ITEM SEMI .)
    CONST           reduce using rule 12 (const_list -> const_list CONST_ITEM SEMI .)
    TYPE            reduce using rule 12 (const_list -> const_list CONST_ITEM SEMI .)
    LABEL           reduce using rule 12 (const_list -> const_list CONST_ITEM SEMI .)
    VAR             reduce using rule 12 (const_list -> const_list CONST_ITEM SEMI .)
    FUNCTION        reduce using rule 12 (const_list -> const_list CONST_ITEM SEMI .)
    PROCEDURE       reduce using rule 12 (const_list -> const_list CONST_ITEM SEMI .)


state 141

    (14) CONST_ITEM -> ID EQ expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    SEMI            reduce using rule 14 (CONST_ITEM -> ID EQ expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 142

    (16) type_list -> type_list type_item SEMI .

    ID              reduce using rule 16 (type_list -> type_list type_item SEMI .)
    BEGIN           reduce using rule 16 (type_list -> type_list type_item SEMI .)
    CONST           reduce using rule 16 (type_list -> type_list type_item SEMI .)
    TYPE            reduce using rule 16 (type_list -> type_list type_item SEMI .)
    LABEL           reduce using rule 16 (type_list -> type_list type_item SEMI .)
    VAR             reduce using rule 16 (type_list -> type_list type_item SEMI .)
    FUNCTION        reduce using rule 16 (type_list -> type_list type_item SEMI .)
    PROCEDURE       reduce using rule 16 (type_list -> type_list type_item SEMI .)


state 143

    (39) id_type -> ID .
    (53) const_expr -> ID .

    SEMI            reduce using rule 39 (id_type -> ID .)
    RPAREN          reduce using rule 39 (id_type -> ID .)
    RANGE           reduce using rule 53 (const_expr -> ID .)


state 144

    (18) type_item -> ID EQ type .

    SEMI            reduce using rule 18 (type_item -> ID EQ type .)


state 145

    (28) type -> packed_type .

    SEMI            reduce using rule 28 (type -> packed_type .)
    RPAREN          reduce using rule 28 (type -> packed_type .)


state 146

    (29) type -> simple_type .

    SEMI            reduce using rule 29 (type -> simple_type .)
    RPAREN          reduce using rule 29 (type -> simple_type .)


state 147

    (30) type -> id_type .

    SEMI            reduce using rule 30 (type -> id_type .)
    RPAREN          reduce using rule 30 (type -> id_type .)


state 148

    (31) type -> array_type .

    SEMI            reduce using rule 31 (type -> array_type .)
    RPAREN          reduce using rule 31 (type -> array_type .)


state 149

    (32) type -> enum_type .

    SEMI            reduce using rule 32 (type -> enum_type .)
    RPAREN          reduce using rule 32 (type -> enum_type .)


state 150

    (33) type -> subrange_type .

    SEMI            reduce using rule 33 (type -> subrange_type .)
    RPAREN          reduce using rule 33 (type -> subrange_type .)


state 151

    (34) type -> record_type .

    SEMI            reduce using rule 34 (type -> record_type .)
    RPAREN          reduce using rule 34 (type -> record_type .)


state 152

    (35) type -> set_type .

    SEMI            reduce using rule 35 (type -> set_type .)
    RPAREN          reduce using rule 35 (type -> set_type .)


state 153

    (36) type -> file_type .

    SEMI            reduce using rule 36 (type -> file_type .)
    RPAREN          reduce using rule 36 (type -> file_type .)


state 154

    (37) packed_type -> PACKED . type
    (28) type -> . packed_type
    (29) type -> . simple_type
    (30) type -> . id_type
    (31) type -> . array_type
    (32) type -> . enum_type
    (33) type -> . subrange_type
    (34) type -> . record_type
    (35) type -> . set_type
    (36) type -> . file_type
    (37) packed_type -> . PACKED type
    (38) simple_type -> . TIPO
    (39) id_type -> . ID
    (40) array_type -> . ARRAY LBRACKET range RBRACKET OF type
    (41) enum_type -> . LPAREN ID_LIST RPAREN
    (42) subrange_type -> . const_expr RANGE const_expr
    (43) record_type -> . RECORD field_list variant_part END
    (44) record_type -> . RECORD field_list END
    (45) set_type -> . SET OF type
    (46) file_type -> . FILE OF type
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    PACKED          shift and go to state 154
    TIPO            shift and go to state 155
    ID              shift and go to state 143
    ARRAY           shift and go to state 156
    LPAREN          shift and go to state 157
    RECORD          shift and go to state 159
    SET             shift and go to state 160
    FILE            shift and go to state 161
    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166

    type                           shift and go to state 212
    packed_type                    shift and go to state 145
    simple_type                    shift and go to state 146
    id_type                        shift and go to state 147
    array_type                     shift and go to state 148
    enum_type                      shift and go to state 149
    subrange_type                  shift and go to state 150
    record_type                    shift and go to state 151
    set_type                       shift and go to state 152
    file_type                      shift and go to state 153
    const_expr                     shift and go to state 158

state 155

    (38) simple_type -> TIPO .

    SEMI            reduce using rule 38 (simple_type -> TIPO .)
    RPAREN          reduce using rule 38 (simple_type -> TIPO .)


state 156

    (40) array_type -> ARRAY . LBRACKET range RBRACKET OF type

    LBRACKET        shift and go to state 213


state 157

    (41) enum_type -> LPAREN . ID_LIST RPAREN
    (60) ID_LIST -> . ID
    (61) ID_LIST -> . ID_LIST COMMA ID

    ID              shift and go to state 59

    ID_LIST                        shift and go to state 214

state 158

    (42) subrange_type -> const_expr . RANGE const_expr

    RANGE           shift and go to state 215


state 159

    (43) record_type -> RECORD . field_list variant_part END
    (44) record_type -> RECORD . field_list END
    (54) field_list -> . field_list var_item
    (55) field_list -> . var_item
    (25) var_item -> . ID_LIST COLON type SEMI
    (60) ID_LIST -> . ID
    (61) ID_LIST -> . ID_LIST COMMA ID

    ID              shift and go to state 59

    field_list                     shift and go to state 216
    var_item                       shift and go to state 217
    ID_LIST                        shift and go to state 58

state 160

    (45) set_type -> SET . OF type

    OF              shift and go to state 218


state 161

    (46) file_type -> FILE . OF type

    OF              shift and go to state 219


state 162

    (48) const_expr -> INTEGER .

    RANGE           reduce using rule 48 (const_expr -> INTEGER .)
    COLON           reduce using rule 48 (const_expr -> INTEGER .)
    COMMA           reduce using rule 48 (const_expr -> INTEGER .)
    SEMI            reduce using rule 48 (const_expr -> INTEGER .)
    RPAREN          reduce using rule 48 (const_expr -> INTEGER .)
    RBRACKET        reduce using rule 48 (const_expr -> INTEGER .)


state 163

    (49) const_expr -> REAL .

    RANGE           reduce using rule 49 (const_expr -> REAL .)
    COLON           reduce using rule 49 (const_expr -> REAL .)
    COMMA           reduce using rule 49 (const_expr -> REAL .)
    SEMI            reduce using rule 49 (const_expr -> REAL .)
    RPAREN          reduce using rule 49 (const_expr -> REAL .)
    RBRACKET        reduce using rule 49 (const_expr -> REAL .)


state 164

    (50) const_expr -> BOOLEAN .

    RANGE           reduce using rule 50 (const_expr -> BOOLEAN .)
    COLON           reduce using rule 50 (const_expr -> BOOLEAN .)
    COMMA           reduce using rule 50 (const_expr -> BOOLEAN .)
    SEMI            reduce using rule 50 (const_expr -> BOOLEAN .)
    RPAREN          reduce using rule 50 (const_expr -> BOOLEAN .)
    RBRACKET        reduce using rule 50 (const_expr -> BOOLEAN .)


state 165

    (51) const_expr -> CHAR .

    RANGE           reduce using rule 51 (const_expr -> CHAR .)
    COLON           reduce using rule 51 (const_expr -> CHAR .)
    COMMA           reduce using rule 51 (const_expr -> CHAR .)
    SEMI            reduce using rule 51 (const_expr -> CHAR .)
    RPAREN          reduce using rule 51 (const_expr -> CHAR .)
    RBRACKET        reduce using rule 51 (const_expr -> CHAR .)


state 166

    (52) const_expr -> TEXTO .

    RANGE           reduce using rule 52 (const_expr -> TEXTO .)
    COLON           reduce using rule 52 (const_expr -> TEXTO .)
    COMMA           reduce using rule 52 (const_expr -> TEXTO .)
    SEMI            reduce using rule 52 (const_expr -> TEXTO .)
    RPAREN          reduce using rule 52 (const_expr -> TEXTO .)
    RBRACKET        reduce using rule 52 (const_expr -> TEXTO .)


state 167

    (20) label_list -> label_list COMMA INTEGER .

    SEMI            reduce using rule 20 (label_list -> label_list COMMA INTEGER .)
    COMMA           reduce using rule 20 (label_list -> label_list COMMA INTEGER .)


state 168

    (25) var_item -> ID_LIST COLON type . SEMI

    SEMI            shift and go to state 220


state 169

    (61) ID_LIST -> ID_LIST COMMA ID .

    COLON           reduce using rule 61 (ID_LIST -> ID_LIST COMMA ID .)
    COMMA           reduce using rule 61 (ID_LIST -> ID_LIST COMMA ID .)
    RPAREN          reduce using rule 61 (ID_LIST -> ID_LIST COMMA ID .)


state 170

    (26) function_declaration -> FUNCTION ID LPAREN params . RPAREN COLON type SEMI block SEMI

    RPAREN          shift and go to state 221


state 171

    (62) params -> param_list .
    (64) param_list -> param_list . SEMI param

    RPAREN          reduce using rule 62 (params -> param_list .)
    SEMI            shift and go to state 222


state 172

    (63) params -> empty .

    RPAREN          reduce using rule 63 (params -> empty .)


state 173

    (65) param_list -> param .

    SEMI            reduce using rule 65 (param_list -> param .)
    RPAREN          reduce using rule 65 (param_list -> param .)


state 174

    (66) param -> ID_LIST . COLON type
    (61) ID_LIST -> ID_LIST . COMMA ID

    COLON           shift and go to state 223
    COMMA           shift and go to state 101


state 175

    (67) param -> VAR . ID_LIST COLON type
    (60) ID_LIST -> . ID
    (61) ID_LIST -> . ID_LIST COMMA ID

    ID              shift and go to state 59

    ID_LIST                        shift and go to state 224

state 176

    (68) param -> CONST . ID_LIST COLON type
    (60) ID_LIST -> . ID
    (61) ID_LIST -> . ID_LIST COMMA ID

    ID              shift and go to state 59

    ID_LIST                        shift and go to state 225

state 177

    (27) procedure_declaration -> PROCEDURE ID LPAREN params . RPAREN SEMI block SEMI

    RPAREN          shift and go to state 226


state 178

    (85) variable -> variable LBRACKET expression RBRACKET .

    ASSIGN          reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    DOT             reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    THEN            reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    COLON           reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    DIV             reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    MOD             reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    EQ              reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    NE              reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    LT              reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    LE              reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    GT              reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    GE              reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    IN              reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    AND             reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    OR              reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    DO              reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    OF              reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    END             reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    UNTIL           reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    TO              reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)
    DOWNTO          reduce using rule 85 (variable -> variable LBRACKET expression RBRACKET .)


state 179

    (88) procedure_call -> ID LPAREN expression_list RPAREN .

    END             reduce using rule 88 (procedure_call -> ID LPAREN expression_list RPAREN .)
    SEMI            reduce using rule 88 (procedure_call -> ID LPAREN expression_list RPAREN .)
    UNTIL           reduce using rule 88 (procedure_call -> ID LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 88 (procedure_call -> ID LPAREN expression_list RPAREN .)


state 180

    (136) expression_list -> expression_list COMMA . expression
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 227
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 181

    (90) if_statement -> IF expression THEN statement . ELSE statement
    (91) if_statement -> IF expression THEN statement .

    ELSE            shift and go to state 228
    END             reduce using rule 91 (if_statement -> IF expression THEN statement .)
    SEMI            reduce using rule 91 (if_statement -> IF expression THEN statement .)
    UNTIL           reduce using rule 91 (if_statement -> IF expression THEN statement .)

  ! ELSE            [ reduce using rule 91 (if_statement -> IF expression THEN statement .) ]


state 182

    (119) expression -> expression COLON expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 119 (expression -> expression COLON expression .)
    COLON           reduce using rule 119 (expression -> expression COLON expression .)
    PLUS            reduce using rule 119 (expression -> expression COLON expression .)
    MINUS           reduce using rule 119 (expression -> expression COLON expression .)
    TIMES           reduce using rule 119 (expression -> expression COLON expression .)
    DIVIDE          reduce using rule 119 (expression -> expression COLON expression .)
    DIV             reduce using rule 119 (expression -> expression COLON expression .)
    MOD             reduce using rule 119 (expression -> expression COLON expression .)
    EQ              reduce using rule 119 (expression -> expression COLON expression .)
    NE              reduce using rule 119 (expression -> expression COLON expression .)
    LT              reduce using rule 119 (expression -> expression COLON expression .)
    LE              reduce using rule 119 (expression -> expression COLON expression .)
    GT              reduce using rule 119 (expression -> expression COLON expression .)
    GE              reduce using rule 119 (expression -> expression COLON expression .)
    IN              reduce using rule 119 (expression -> expression COLON expression .)
    AND             reduce using rule 119 (expression -> expression COLON expression .)
    OR              reduce using rule 119 (expression -> expression COLON expression .)
    DO              reduce using rule 119 (expression -> expression COLON expression .)
    OF              reduce using rule 119 (expression -> expression COLON expression .)
    END             reduce using rule 119 (expression -> expression COLON expression .)
    SEMI            reduce using rule 119 (expression -> expression COLON expression .)
    UNTIL           reduce using rule 119 (expression -> expression COLON expression .)
    ELSE            reduce using rule 119 (expression -> expression COLON expression .)
    RBRACKET        reduce using rule 119 (expression -> expression COLON expression .)
    RPAREN          reduce using rule 119 (expression -> expression COLON expression .)
    COMMA           reduce using rule 119 (expression -> expression COLON expression .)
    TO              reduce using rule 119 (expression -> expression COLON expression .)
    DOWNTO          reduce using rule 119 (expression -> expression COLON expression .)

  ! COLON           [ shift and go to state 112 ]
  ! PLUS            [ shift and go to state 113 ]
  ! MINUS           [ shift and go to state 114 ]
  ! TIMES           [ shift and go to state 115 ]
  ! DIVIDE          [ shift and go to state 116 ]
  ! DIV             [ shift and go to state 117 ]
  ! MOD             [ shift and go to state 118 ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 183

    (120) expression -> expression PLUS expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 120 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 120 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 120 (expression -> expression PLUS expression .)
    EQ              reduce using rule 120 (expression -> expression PLUS expression .)
    NE              reduce using rule 120 (expression -> expression PLUS expression .)
    LT              reduce using rule 120 (expression -> expression PLUS expression .)
    LE              reduce using rule 120 (expression -> expression PLUS expression .)
    GT              reduce using rule 120 (expression -> expression PLUS expression .)
    GE              reduce using rule 120 (expression -> expression PLUS expression .)
    IN              reduce using rule 120 (expression -> expression PLUS expression .)
    AND             reduce using rule 120 (expression -> expression PLUS expression .)
    OR              reduce using rule 120 (expression -> expression PLUS expression .)
    DO              reduce using rule 120 (expression -> expression PLUS expression .)
    OF              reduce using rule 120 (expression -> expression PLUS expression .)
    END             reduce using rule 120 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 120 (expression -> expression PLUS expression .)
    UNTIL           reduce using rule 120 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 120 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 120 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 120 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 120 (expression -> expression PLUS expression .)
    TO              reduce using rule 120 (expression -> expression PLUS expression .)
    DOWNTO          reduce using rule 120 (expression -> expression PLUS expression .)
    COLON           shift and go to state 112
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118

  ! COLON           [ reduce using rule 120 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 120 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 120 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 120 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 120 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 113 ]
  ! MINUS           [ shift and go to state 114 ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 184

    (121) expression -> expression MINUS expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 121 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 121 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 121 (expression -> expression MINUS expression .)
    EQ              reduce using rule 121 (expression -> expression MINUS expression .)
    NE              reduce using rule 121 (expression -> expression MINUS expression .)
    LT              reduce using rule 121 (expression -> expression MINUS expression .)
    LE              reduce using rule 121 (expression -> expression MINUS expression .)
    GT              reduce using rule 121 (expression -> expression MINUS expression .)
    GE              reduce using rule 121 (expression -> expression MINUS expression .)
    IN              reduce using rule 121 (expression -> expression MINUS expression .)
    AND             reduce using rule 121 (expression -> expression MINUS expression .)
    OR              reduce using rule 121 (expression -> expression MINUS expression .)
    DO              reduce using rule 121 (expression -> expression MINUS expression .)
    OF              reduce using rule 121 (expression -> expression MINUS expression .)
    END             reduce using rule 121 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 121 (expression -> expression MINUS expression .)
    UNTIL           reduce using rule 121 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 121 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 121 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 121 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 121 (expression -> expression MINUS expression .)
    TO              reduce using rule 121 (expression -> expression MINUS expression .)
    DOWNTO          reduce using rule 121 (expression -> expression MINUS expression .)
    COLON           shift and go to state 112
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118

  ! COLON           [ reduce using rule 121 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 121 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 121 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 121 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 121 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 113 ]
  ! MINUS           [ shift and go to state 114 ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 185

    (122) expression -> expression TIMES expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 122 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 122 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 122 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 122 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 122 (expression -> expression TIMES expression .)
    DIV             reduce using rule 122 (expression -> expression TIMES expression .)
    MOD             reduce using rule 122 (expression -> expression TIMES expression .)
    EQ              reduce using rule 122 (expression -> expression TIMES expression .)
    NE              reduce using rule 122 (expression -> expression TIMES expression .)
    LT              reduce using rule 122 (expression -> expression TIMES expression .)
    LE              reduce using rule 122 (expression -> expression TIMES expression .)
    GT              reduce using rule 122 (expression -> expression TIMES expression .)
    GE              reduce using rule 122 (expression -> expression TIMES expression .)
    IN              reduce using rule 122 (expression -> expression TIMES expression .)
    AND             reduce using rule 122 (expression -> expression TIMES expression .)
    OR              reduce using rule 122 (expression -> expression TIMES expression .)
    DO              reduce using rule 122 (expression -> expression TIMES expression .)
    OF              reduce using rule 122 (expression -> expression TIMES expression .)
    END             reduce using rule 122 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 122 (expression -> expression TIMES expression .)
    UNTIL           reduce using rule 122 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 122 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 122 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 122 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 122 (expression -> expression TIMES expression .)
    TO              reduce using rule 122 (expression -> expression TIMES expression .)
    DOWNTO          reduce using rule 122 (expression -> expression TIMES expression .)
    COLON           shift and go to state 112

  ! COLON           [ reduce using rule 122 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 113 ]
  ! MINUS           [ shift and go to state 114 ]
  ! TIMES           [ shift and go to state 115 ]
  ! DIVIDE          [ shift and go to state 116 ]
  ! DIV             [ shift and go to state 117 ]
  ! MOD             [ shift and go to state 118 ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 186

    (123) expression -> expression DIVIDE expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 123 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 123 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 123 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 123 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 123 (expression -> expression DIVIDE expression .)
    DIV             reduce using rule 123 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 123 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 123 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 123 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 123 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 123 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 123 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 123 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 123 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 123 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 123 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 123 (expression -> expression DIVIDE expression .)
    OF              reduce using rule 123 (expression -> expression DIVIDE expression .)
    END             reduce using rule 123 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 123 (expression -> expression DIVIDE expression .)
    UNTIL           reduce using rule 123 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 123 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 123 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 123 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 123 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 123 (expression -> expression DIVIDE expression .)
    DOWNTO          reduce using rule 123 (expression -> expression DIVIDE expression .)
    COLON           shift and go to state 112

  ! COLON           [ reduce using rule 123 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 113 ]
  ! MINUS           [ shift and go to state 114 ]
  ! TIMES           [ shift and go to state 115 ]
  ! DIVIDE          [ shift and go to state 116 ]
  ! DIV             [ shift and go to state 117 ]
  ! MOD             [ shift and go to state 118 ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 187

    (124) expression -> expression DIV expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 124 (expression -> expression DIV expression .)
    PLUS            reduce using rule 124 (expression -> expression DIV expression .)
    MINUS           reduce using rule 124 (expression -> expression DIV expression .)
    TIMES           reduce using rule 124 (expression -> expression DIV expression .)
    DIVIDE          reduce using rule 124 (expression -> expression DIV expression .)
    DIV             reduce using rule 124 (expression -> expression DIV expression .)
    MOD             reduce using rule 124 (expression -> expression DIV expression .)
    EQ              reduce using rule 124 (expression -> expression DIV expression .)
    NE              reduce using rule 124 (expression -> expression DIV expression .)
    LT              reduce using rule 124 (expression -> expression DIV expression .)
    LE              reduce using rule 124 (expression -> expression DIV expression .)
    GT              reduce using rule 124 (expression -> expression DIV expression .)
    GE              reduce using rule 124 (expression -> expression DIV expression .)
    IN              reduce using rule 124 (expression -> expression DIV expression .)
    AND             reduce using rule 124 (expression -> expression DIV expression .)
    OR              reduce using rule 124 (expression -> expression DIV expression .)
    DO              reduce using rule 124 (expression -> expression DIV expression .)
    OF              reduce using rule 124 (expression -> expression DIV expression .)
    END             reduce using rule 124 (expression -> expression DIV expression .)
    SEMI            reduce using rule 124 (expression -> expression DIV expression .)
    UNTIL           reduce using rule 124 (expression -> expression DIV expression .)
    ELSE            reduce using rule 124 (expression -> expression DIV expression .)
    RBRACKET        reduce using rule 124 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 124 (expression -> expression DIV expression .)
    COMMA           reduce using rule 124 (expression -> expression DIV expression .)
    TO              reduce using rule 124 (expression -> expression DIV expression .)
    DOWNTO          reduce using rule 124 (expression -> expression DIV expression .)
    COLON           shift and go to state 112

  ! COLON           [ reduce using rule 124 (expression -> expression DIV expression .) ]
  ! PLUS            [ shift and go to state 113 ]
  ! MINUS           [ shift and go to state 114 ]
  ! TIMES           [ shift and go to state 115 ]
  ! DIVIDE          [ shift and go to state 116 ]
  ! DIV             [ shift and go to state 117 ]
  ! MOD             [ shift and go to state 118 ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 188

    (125) expression -> expression MOD expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 125 (expression -> expression MOD expression .)
    PLUS            reduce using rule 125 (expression -> expression MOD expression .)
    MINUS           reduce using rule 125 (expression -> expression MOD expression .)
    TIMES           reduce using rule 125 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 125 (expression -> expression MOD expression .)
    DIV             reduce using rule 125 (expression -> expression MOD expression .)
    MOD             reduce using rule 125 (expression -> expression MOD expression .)
    EQ              reduce using rule 125 (expression -> expression MOD expression .)
    NE              reduce using rule 125 (expression -> expression MOD expression .)
    LT              reduce using rule 125 (expression -> expression MOD expression .)
    LE              reduce using rule 125 (expression -> expression MOD expression .)
    GT              reduce using rule 125 (expression -> expression MOD expression .)
    GE              reduce using rule 125 (expression -> expression MOD expression .)
    IN              reduce using rule 125 (expression -> expression MOD expression .)
    AND             reduce using rule 125 (expression -> expression MOD expression .)
    OR              reduce using rule 125 (expression -> expression MOD expression .)
    DO              reduce using rule 125 (expression -> expression MOD expression .)
    OF              reduce using rule 125 (expression -> expression MOD expression .)
    END             reduce using rule 125 (expression -> expression MOD expression .)
    SEMI            reduce using rule 125 (expression -> expression MOD expression .)
    UNTIL           reduce using rule 125 (expression -> expression MOD expression .)
    ELSE            reduce using rule 125 (expression -> expression MOD expression .)
    RBRACKET        reduce using rule 125 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 125 (expression -> expression MOD expression .)
    COMMA           reduce using rule 125 (expression -> expression MOD expression .)
    TO              reduce using rule 125 (expression -> expression MOD expression .)
    DOWNTO          reduce using rule 125 (expression -> expression MOD expression .)
    COLON           shift and go to state 112

  ! COLON           [ reduce using rule 125 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 113 ]
  ! MINUS           [ shift and go to state 114 ]
  ! TIMES           [ shift and go to state 115 ]
  ! DIVIDE          [ shift and go to state 116 ]
  ! DIV             [ shift and go to state 117 ]
  ! MOD             [ shift and go to state 118 ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 189

    (126) expression -> expression EQ expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 126 (expression -> expression EQ expression .)
    EQ              reduce using rule 126 (expression -> expression EQ expression .)
    NE              reduce using rule 126 (expression -> expression EQ expression .)
    LT              reduce using rule 126 (expression -> expression EQ expression .)
    LE              reduce using rule 126 (expression -> expression EQ expression .)
    GT              reduce using rule 126 (expression -> expression EQ expression .)
    GE              reduce using rule 126 (expression -> expression EQ expression .)
    IN              reduce using rule 126 (expression -> expression EQ expression .)
    AND             reduce using rule 126 (expression -> expression EQ expression .)
    OR              reduce using rule 126 (expression -> expression EQ expression .)
    DO              reduce using rule 126 (expression -> expression EQ expression .)
    OF              reduce using rule 126 (expression -> expression EQ expression .)
    END             reduce using rule 126 (expression -> expression EQ expression .)
    SEMI            reduce using rule 126 (expression -> expression EQ expression .)
    UNTIL           reduce using rule 126 (expression -> expression EQ expression .)
    ELSE            reduce using rule 126 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 126 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 126 (expression -> expression EQ expression .)
    COMMA           reduce using rule 126 (expression -> expression EQ expression .)
    TO              reduce using rule 126 (expression -> expression EQ expression .)
    DOWNTO          reduce using rule 126 (expression -> expression EQ expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118

  ! COLON           [ reduce using rule 126 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 126 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 126 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 126 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 126 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 126 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 126 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 190

    (127) expression -> expression NE expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 127 (expression -> expression NE expression .)
    EQ              reduce using rule 127 (expression -> expression NE expression .)
    NE              reduce using rule 127 (expression -> expression NE expression .)
    LT              reduce using rule 127 (expression -> expression NE expression .)
    LE              reduce using rule 127 (expression -> expression NE expression .)
    GT              reduce using rule 127 (expression -> expression NE expression .)
    GE              reduce using rule 127 (expression -> expression NE expression .)
    IN              reduce using rule 127 (expression -> expression NE expression .)
    AND             reduce using rule 127 (expression -> expression NE expression .)
    OR              reduce using rule 127 (expression -> expression NE expression .)
    DO              reduce using rule 127 (expression -> expression NE expression .)
    OF              reduce using rule 127 (expression -> expression NE expression .)
    END             reduce using rule 127 (expression -> expression NE expression .)
    SEMI            reduce using rule 127 (expression -> expression NE expression .)
    UNTIL           reduce using rule 127 (expression -> expression NE expression .)
    ELSE            reduce using rule 127 (expression -> expression NE expression .)
    RBRACKET        reduce using rule 127 (expression -> expression NE expression .)
    RPAREN          reduce using rule 127 (expression -> expression NE expression .)
    COMMA           reduce using rule 127 (expression -> expression NE expression .)
    TO              reduce using rule 127 (expression -> expression NE expression .)
    DOWNTO          reduce using rule 127 (expression -> expression NE expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118

  ! COLON           [ reduce using rule 127 (expression -> expression NE expression .) ]
  ! PLUS            [ reduce using rule 127 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 127 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 127 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 127 (expression -> expression NE expression .) ]
  ! DIV             [ reduce using rule 127 (expression -> expression NE expression .) ]
  ! MOD             [ reduce using rule 127 (expression -> expression NE expression .) ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 191

    (128) expression -> expression LT expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 128 (expression -> expression LT expression .)
    EQ              reduce using rule 128 (expression -> expression LT expression .)
    NE              reduce using rule 128 (expression -> expression LT expression .)
    LT              reduce using rule 128 (expression -> expression LT expression .)
    LE              reduce using rule 128 (expression -> expression LT expression .)
    GT              reduce using rule 128 (expression -> expression LT expression .)
    GE              reduce using rule 128 (expression -> expression LT expression .)
    IN              reduce using rule 128 (expression -> expression LT expression .)
    AND             reduce using rule 128 (expression -> expression LT expression .)
    OR              reduce using rule 128 (expression -> expression LT expression .)
    DO              reduce using rule 128 (expression -> expression LT expression .)
    OF              reduce using rule 128 (expression -> expression LT expression .)
    END             reduce using rule 128 (expression -> expression LT expression .)
    SEMI            reduce using rule 128 (expression -> expression LT expression .)
    UNTIL           reduce using rule 128 (expression -> expression LT expression .)
    ELSE            reduce using rule 128 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 128 (expression -> expression LT expression .)
    RPAREN          reduce using rule 128 (expression -> expression LT expression .)
    COMMA           reduce using rule 128 (expression -> expression LT expression .)
    TO              reduce using rule 128 (expression -> expression LT expression .)
    DOWNTO          reduce using rule 128 (expression -> expression LT expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118

  ! COLON           [ reduce using rule 128 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 128 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 128 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 128 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 128 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 128 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 128 (expression -> expression LT expression .) ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 192

    (129) expression -> expression LE expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 129 (expression -> expression LE expression .)
    EQ              reduce using rule 129 (expression -> expression LE expression .)
    NE              reduce using rule 129 (expression -> expression LE expression .)
    LT              reduce using rule 129 (expression -> expression LE expression .)
    LE              reduce using rule 129 (expression -> expression LE expression .)
    GT              reduce using rule 129 (expression -> expression LE expression .)
    GE              reduce using rule 129 (expression -> expression LE expression .)
    IN              reduce using rule 129 (expression -> expression LE expression .)
    AND             reduce using rule 129 (expression -> expression LE expression .)
    OR              reduce using rule 129 (expression -> expression LE expression .)
    DO              reduce using rule 129 (expression -> expression LE expression .)
    OF              reduce using rule 129 (expression -> expression LE expression .)
    END             reduce using rule 129 (expression -> expression LE expression .)
    SEMI            reduce using rule 129 (expression -> expression LE expression .)
    UNTIL           reduce using rule 129 (expression -> expression LE expression .)
    ELSE            reduce using rule 129 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 129 (expression -> expression LE expression .)
    RPAREN          reduce using rule 129 (expression -> expression LE expression .)
    COMMA           reduce using rule 129 (expression -> expression LE expression .)
    TO              reduce using rule 129 (expression -> expression LE expression .)
    DOWNTO          reduce using rule 129 (expression -> expression LE expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118

  ! COLON           [ reduce using rule 129 (expression -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 129 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 129 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 129 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 129 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 129 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 129 (expression -> expression LE expression .) ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 193

    (130) expression -> expression GT expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 130 (expression -> expression GT expression .)
    EQ              reduce using rule 130 (expression -> expression GT expression .)
    NE              reduce using rule 130 (expression -> expression GT expression .)
    LT              reduce using rule 130 (expression -> expression GT expression .)
    LE              reduce using rule 130 (expression -> expression GT expression .)
    GT              reduce using rule 130 (expression -> expression GT expression .)
    GE              reduce using rule 130 (expression -> expression GT expression .)
    IN              reduce using rule 130 (expression -> expression GT expression .)
    AND             reduce using rule 130 (expression -> expression GT expression .)
    OR              reduce using rule 130 (expression -> expression GT expression .)
    DO              reduce using rule 130 (expression -> expression GT expression .)
    OF              reduce using rule 130 (expression -> expression GT expression .)
    END             reduce using rule 130 (expression -> expression GT expression .)
    SEMI            reduce using rule 130 (expression -> expression GT expression .)
    UNTIL           reduce using rule 130 (expression -> expression GT expression .)
    ELSE            reduce using rule 130 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 130 (expression -> expression GT expression .)
    RPAREN          reduce using rule 130 (expression -> expression GT expression .)
    COMMA           reduce using rule 130 (expression -> expression GT expression .)
    TO              reduce using rule 130 (expression -> expression GT expression .)
    DOWNTO          reduce using rule 130 (expression -> expression GT expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118

  ! COLON           [ reduce using rule 130 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 130 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 130 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 130 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 130 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 130 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 130 (expression -> expression GT expression .) ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 194

    (131) expression -> expression GE expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 131 (expression -> expression GE expression .)
    EQ              reduce using rule 131 (expression -> expression GE expression .)
    NE              reduce using rule 131 (expression -> expression GE expression .)
    LT              reduce using rule 131 (expression -> expression GE expression .)
    LE              reduce using rule 131 (expression -> expression GE expression .)
    GT              reduce using rule 131 (expression -> expression GE expression .)
    GE              reduce using rule 131 (expression -> expression GE expression .)
    IN              reduce using rule 131 (expression -> expression GE expression .)
    AND             reduce using rule 131 (expression -> expression GE expression .)
    OR              reduce using rule 131 (expression -> expression GE expression .)
    DO              reduce using rule 131 (expression -> expression GE expression .)
    OF              reduce using rule 131 (expression -> expression GE expression .)
    END             reduce using rule 131 (expression -> expression GE expression .)
    SEMI            reduce using rule 131 (expression -> expression GE expression .)
    UNTIL           reduce using rule 131 (expression -> expression GE expression .)
    ELSE            reduce using rule 131 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 131 (expression -> expression GE expression .)
    RPAREN          reduce using rule 131 (expression -> expression GE expression .)
    COMMA           reduce using rule 131 (expression -> expression GE expression .)
    TO              reduce using rule 131 (expression -> expression GE expression .)
    DOWNTO          reduce using rule 131 (expression -> expression GE expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118

  ! COLON           [ reduce using rule 131 (expression -> expression GE expression .) ]
  ! PLUS            [ reduce using rule 131 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 131 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 131 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 131 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 131 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 131 (expression -> expression GE expression .) ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 195

    (132) expression -> expression IN expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 132 (expression -> expression IN expression .)
    EQ              reduce using rule 132 (expression -> expression IN expression .)
    NE              reduce using rule 132 (expression -> expression IN expression .)
    LT              reduce using rule 132 (expression -> expression IN expression .)
    LE              reduce using rule 132 (expression -> expression IN expression .)
    GT              reduce using rule 132 (expression -> expression IN expression .)
    GE              reduce using rule 132 (expression -> expression IN expression .)
    IN              reduce using rule 132 (expression -> expression IN expression .)
    AND             reduce using rule 132 (expression -> expression IN expression .)
    OR              reduce using rule 132 (expression -> expression IN expression .)
    DO              reduce using rule 132 (expression -> expression IN expression .)
    OF              reduce using rule 132 (expression -> expression IN expression .)
    END             reduce using rule 132 (expression -> expression IN expression .)
    SEMI            reduce using rule 132 (expression -> expression IN expression .)
    UNTIL           reduce using rule 132 (expression -> expression IN expression .)
    ELSE            reduce using rule 132 (expression -> expression IN expression .)
    RBRACKET        reduce using rule 132 (expression -> expression IN expression .)
    RPAREN          reduce using rule 132 (expression -> expression IN expression .)
    COMMA           reduce using rule 132 (expression -> expression IN expression .)
    TO              reduce using rule 132 (expression -> expression IN expression .)
    DOWNTO          reduce using rule 132 (expression -> expression IN expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118

  ! COLON           [ reduce using rule 132 (expression -> expression IN expression .) ]
  ! PLUS            [ reduce using rule 132 (expression -> expression IN expression .) ]
  ! MINUS           [ reduce using rule 132 (expression -> expression IN expression .) ]
  ! TIMES           [ reduce using rule 132 (expression -> expression IN expression .) ]
  ! DIVIDE          [ reduce using rule 132 (expression -> expression IN expression .) ]
  ! DIV             [ reduce using rule 132 (expression -> expression IN expression .) ]
  ! MOD             [ reduce using rule 132 (expression -> expression IN expression .) ]
  ! EQ              [ shift and go to state 119 ]
  ! NE              [ shift and go to state 120 ]
  ! LT              [ shift and go to state 121 ]
  ! LE              [ shift and go to state 122 ]
  ! GT              [ shift and go to state 123 ]
  ! GE              [ shift and go to state 124 ]
  ! IN              [ shift and go to state 125 ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 196

    (133) expression -> expression AND expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 133 (expression -> expression AND expression .)
    AND             reduce using rule 133 (expression -> expression AND expression .)
    OR              reduce using rule 133 (expression -> expression AND expression .)
    DO              reduce using rule 133 (expression -> expression AND expression .)
    OF              reduce using rule 133 (expression -> expression AND expression .)
    END             reduce using rule 133 (expression -> expression AND expression .)
    SEMI            reduce using rule 133 (expression -> expression AND expression .)
    UNTIL           reduce using rule 133 (expression -> expression AND expression .)
    ELSE            reduce using rule 133 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 133 (expression -> expression AND expression .)
    RPAREN          reduce using rule 133 (expression -> expression AND expression .)
    COMMA           reduce using rule 133 (expression -> expression AND expression .)
    TO              reduce using rule 133 (expression -> expression AND expression .)
    DOWNTO          reduce using rule 133 (expression -> expression AND expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125

  ! COLON           [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! IN              [ reduce using rule 133 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 126 ]
  ! OR              [ shift and go to state 127 ]


state 197

    (134) expression -> expression OR expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    THEN            reduce using rule 134 (expression -> expression OR expression .)
    OR              reduce using rule 134 (expression -> expression OR expression .)
    DO              reduce using rule 134 (expression -> expression OR expression .)
    OF              reduce using rule 134 (expression -> expression OR expression .)
    END             reduce using rule 134 (expression -> expression OR expression .)
    SEMI            reduce using rule 134 (expression -> expression OR expression .)
    UNTIL           reduce using rule 134 (expression -> expression OR expression .)
    ELSE            reduce using rule 134 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 134 (expression -> expression OR expression .)
    RPAREN          reduce using rule 134 (expression -> expression OR expression .)
    COMMA           reduce using rule 134 (expression -> expression OR expression .)
    TO              reduce using rule 134 (expression -> expression OR expression .)
    DOWNTO          reduce using rule 134 (expression -> expression OR expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126

  ! COLON           [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! IN              [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 134 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 127 ]


state 198

    (114) expression -> TIPO LPAREN expression_list . RPAREN
    (136) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 229
    COMMA           shift and go to state 180


state 199

    (116) expression -> LPAREN expression RPAREN .

    THEN            reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    OF              reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    UNTIL           reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 116 (expression -> LPAREN expression RPAREN .)
    DOWNTO          reduce using rule 116 (expression -> LPAREN expression RPAREN .)


state 200

    (115) expression -> ID LPAREN expression_list . RPAREN
    (136) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 230
    COMMA           shift and go to state 180


state 201

    (117) expression -> LBRACKET expression_list RBRACKET .

    THEN            reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    COLON           reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    PLUS            reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    DIV             reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    MOD             reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    EQ              reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    NE              reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    LT              reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    LE              reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    GT              reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    GE              reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    IN              reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    AND             reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    OR              reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    DO              reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    OF              reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    END             reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    SEMI            reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    UNTIL           reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    ELSE            reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    TO              reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)
    DOWNTO          reduce using rule 117 (expression -> LBRACKET expression_list RBRACKET .)


state 202

    (92) for_statement -> FOR ID ASSIGN expression . TO expression DO statement
    (93) for_statement -> FOR ID ASSIGN expression . DOWNTO expression DO statement
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    TO              shift and go to state 231
    DOWNTO          shift and go to state 232
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 203

    (94) while_statement -> WHILE expression DO statement .

    END             reduce using rule 94 (while_statement -> WHILE expression DO statement .)
    SEMI            reduce using rule 94 (while_statement -> WHILE expression DO statement .)
    UNTIL           reduce using rule 94 (while_statement -> WHILE expression DO statement .)
    ELSE            reduce using rule 94 (while_statement -> WHILE expression DO statement .)


state 204

    (95) repeat_statement -> REPEAT statement_list UNTIL expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    END             reduce using rule 95 (repeat_statement -> REPEAT statement_list UNTIL expression .)
    SEMI            reduce using rule 95 (repeat_statement -> REPEAT statement_list UNTIL expression .)
    UNTIL           reduce using rule 95 (repeat_statement -> REPEAT statement_list UNTIL expression .)
    ELSE            reduce using rule 95 (repeat_statement -> REPEAT statement_list UNTIL expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 205

    (96) case_statement -> CASE expression OF case_list . END
    (97) case_list -> case_list . case_item SEMI
    (99) case_item -> . constant_list COLON statement_list
    (100) constant_list -> . const_expr
    (101) constant_list -> . constant_list COMMA const_expr
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    END             shift and go to state 233
    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166
    ID              shift and go to state 209

    case_item                      shift and go to state 234
    constant_list                  shift and go to state 207
    const_expr                     shift and go to state 208

state 206

    (98) case_list -> case_item . SEMI

    SEMI            shift and go to state 235


state 207

    (99) case_item -> constant_list . COLON statement_list
    (101) constant_list -> constant_list . COMMA const_expr

    COLON           shift and go to state 236
    COMMA           shift and go to state 237


state 208

    (100) constant_list -> const_expr .

    COLON           reduce using rule 100 (constant_list -> const_expr .)
    COMMA           reduce using rule 100 (constant_list -> const_expr .)


state 209

    (53) const_expr -> ID .

    COLON           reduce using rule 53 (const_expr -> ID .)
    COMMA           reduce using rule 53 (const_expr -> ID .)
    RANGE           reduce using rule 53 (const_expr -> ID .)
    SEMI            reduce using rule 53 (const_expr -> ID .)
    RPAREN          reduce using rule 53 (const_expr -> ID .)
    RBRACKET        reduce using rule 53 (const_expr -> ID .)


state 210

    (102) with_statement -> WITH variable_list DO statement .

    END             reduce using rule 102 (with_statement -> WITH variable_list DO statement .)
    SEMI            reduce using rule 102 (with_statement -> WITH variable_list DO statement .)
    UNTIL           reduce using rule 102 (with_statement -> WITH variable_list DO statement .)
    ELSE            reduce using rule 102 (with_statement -> WITH variable_list DO statement .)


state 211

    (104) variable_list -> variable_list COMMA variable .
    (85) variable -> variable . LBRACKET expression RBRACKET
    (86) variable -> variable . DOT ID

    DO              reduce using rule 104 (variable_list -> variable_list COMMA variable .)
    COMMA           reduce using rule 104 (variable_list -> variable_list COMMA variable .)
    LBRACKET        shift and go to state 66
    DOT             shift and go to state 67


state 212

    (37) packed_type -> PACKED type .

    SEMI            reduce using rule 37 (packed_type -> PACKED type .)
    RPAREN          reduce using rule 37 (packed_type -> PACKED type .)


state 213

    (40) array_type -> ARRAY LBRACKET . range RBRACKET OF type
    (47) range -> . const_expr RANGE const_expr
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166
    ID              shift and go to state 209

    range                          shift and go to state 238
    const_expr                     shift and go to state 239

state 214

    (41) enum_type -> LPAREN ID_LIST . RPAREN
    (61) ID_LIST -> ID_LIST . COMMA ID

    RPAREN          shift and go to state 240
    COMMA           shift and go to state 101


state 215

    (42) subrange_type -> const_expr RANGE . const_expr
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166
    ID              shift and go to state 209

    const_expr                     shift and go to state 241

state 216

    (43) record_type -> RECORD field_list . variant_part END
    (44) record_type -> RECORD field_list . END
    (54) field_list -> field_list . var_item
    (56) variant_part -> . CASE ID COLON TIPO OF variant_list
    (25) var_item -> . ID_LIST COLON type SEMI
    (60) ID_LIST -> . ID
    (61) ID_LIST -> . ID_LIST COMMA ID

    END             shift and go to state 243
    CASE            shift and go to state 245
    ID              shift and go to state 59

    variant_part                   shift and go to state 242
    var_item                       shift and go to state 244
    ID_LIST                        shift and go to state 58

state 217

    (55) field_list -> var_item .

    END             reduce using rule 55 (field_list -> var_item .)
    CASE            reduce using rule 55 (field_list -> var_item .)
    ID              reduce using rule 55 (field_list -> var_item .)
    RPAREN          reduce using rule 55 (field_list -> var_item .)


state 218

    (45) set_type -> SET OF . type
    (28) type -> . packed_type
    (29) type -> . simple_type
    (30) type -> . id_type
    (31) type -> . array_type
    (32) type -> . enum_type
    (33) type -> . subrange_type
    (34) type -> . record_type
    (35) type -> . set_type
    (36) type -> . file_type
    (37) packed_type -> . PACKED type
    (38) simple_type -> . TIPO
    (39) id_type -> . ID
    (40) array_type -> . ARRAY LBRACKET range RBRACKET OF type
    (41) enum_type -> . LPAREN ID_LIST RPAREN
    (42) subrange_type -> . const_expr RANGE const_expr
    (43) record_type -> . RECORD field_list variant_part END
    (44) record_type -> . RECORD field_list END
    (45) set_type -> . SET OF type
    (46) file_type -> . FILE OF type
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    PACKED          shift and go to state 154
    TIPO            shift and go to state 155
    ID              shift and go to state 143
    ARRAY           shift and go to state 156
    LPAREN          shift and go to state 157
    RECORD          shift and go to state 159
    SET             shift and go to state 160
    FILE            shift and go to state 161
    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166

    type                           shift and go to state 246
    packed_type                    shift and go to state 145
    simple_type                    shift and go to state 146
    id_type                        shift and go to state 147
    array_type                     shift and go to state 148
    enum_type                      shift and go to state 149
    subrange_type                  shift and go to state 150
    record_type                    shift and go to state 151
    set_type                       shift and go to state 152
    file_type                      shift and go to state 153
    const_expr                     shift and go to state 158

state 219

    (46) file_type -> FILE OF . type
    (28) type -> . packed_type
    (29) type -> . simple_type
    (30) type -> . id_type
    (31) type -> . array_type
    (32) type -> . enum_type
    (33) type -> . subrange_type
    (34) type -> . record_type
    (35) type -> . set_type
    (36) type -> . file_type
    (37) packed_type -> . PACKED type
    (38) simple_type -> . TIPO
    (39) id_type -> . ID
    (40) array_type -> . ARRAY LBRACKET range RBRACKET OF type
    (41) enum_type -> . LPAREN ID_LIST RPAREN
    (42) subrange_type -> . const_expr RANGE const_expr
    (43) record_type -> . RECORD field_list variant_part END
    (44) record_type -> . RECORD field_list END
    (45) set_type -> . SET OF type
    (46) file_type -> . FILE OF type
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    PACKED          shift and go to state 154
    TIPO            shift and go to state 155
    ID              shift and go to state 143
    ARRAY           shift and go to state 156
    LPAREN          shift and go to state 157
    RECORD          shift and go to state 159
    SET             shift and go to state 160
    FILE            shift and go to state 161
    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166

    type                           shift and go to state 247
    packed_type                    shift and go to state 145
    simple_type                    shift and go to state 146
    id_type                        shift and go to state 147
    array_type                     shift and go to state 148
    enum_type                      shift and go to state 149
    subrange_type                  shift and go to state 150
    record_type                    shift and go to state 151
    set_type                       shift and go to state 152
    file_type                      shift and go to state 153
    const_expr                     shift and go to state 158

state 220

    (25) var_item -> ID_LIST COLON type SEMI .

    ID              reduce using rule 25 (var_item -> ID_LIST COLON type SEMI .)
    BEGIN           reduce using rule 25 (var_item -> ID_LIST COLON type SEMI .)
    CONST           reduce using rule 25 (var_item -> ID_LIST COLON type SEMI .)
    TYPE            reduce using rule 25 (var_item -> ID_LIST COLON type SEMI .)
    LABEL           reduce using rule 25 (var_item -> ID_LIST COLON type SEMI .)
    VAR             reduce using rule 25 (var_item -> ID_LIST COLON type SEMI .)
    FUNCTION        reduce using rule 25 (var_item -> ID_LIST COLON type SEMI .)
    PROCEDURE       reduce using rule 25 (var_item -> ID_LIST COLON type SEMI .)
    END             reduce using rule 25 (var_item -> ID_LIST COLON type SEMI .)
    CASE            reduce using rule 25 (var_item -> ID_LIST COLON type SEMI .)
    RPAREN          reduce using rule 25 (var_item -> ID_LIST COLON type SEMI .)


state 221

    (26) function_declaration -> FUNCTION ID LPAREN params RPAREN . COLON type SEMI block SEMI

    COLON           shift and go to state 248


state 222

    (64) param_list -> param_list SEMI . param
    (66) param -> . ID_LIST COLON type
    (67) param -> . VAR ID_LIST COLON type
    (68) param -> . CONST ID_LIST COLON type
    (60) ID_LIST -> . ID
    (61) ID_LIST -> . ID_LIST COMMA ID

    VAR             shift and go to state 175
    CONST           shift and go to state 176
    ID              shift and go to state 59

    param                          shift and go to state 249
    ID_LIST                        shift and go to state 174

state 223

    (66) param -> ID_LIST COLON . type
    (28) type -> . packed_type
    (29) type -> . simple_type
    (30) type -> . id_type
    (31) type -> . array_type
    (32) type -> . enum_type
    (33) type -> . subrange_type
    (34) type -> . record_type
    (35) type -> . set_type
    (36) type -> . file_type
    (37) packed_type -> . PACKED type
    (38) simple_type -> . TIPO
    (39) id_type -> . ID
    (40) array_type -> . ARRAY LBRACKET range RBRACKET OF type
    (41) enum_type -> . LPAREN ID_LIST RPAREN
    (42) subrange_type -> . const_expr RANGE const_expr
    (43) record_type -> . RECORD field_list variant_part END
    (44) record_type -> . RECORD field_list END
    (45) set_type -> . SET OF type
    (46) file_type -> . FILE OF type
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    PACKED          shift and go to state 154
    TIPO            shift and go to state 155
    ID              shift and go to state 143
    ARRAY           shift and go to state 156
    LPAREN          shift and go to state 157
    RECORD          shift and go to state 159
    SET             shift and go to state 160
    FILE            shift and go to state 161
    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166

    type                           shift and go to state 250
    packed_type                    shift and go to state 145
    simple_type                    shift and go to state 146
    id_type                        shift and go to state 147
    array_type                     shift and go to state 148
    enum_type                      shift and go to state 149
    subrange_type                  shift and go to state 150
    record_type                    shift and go to state 151
    set_type                       shift and go to state 152
    file_type                      shift and go to state 153
    const_expr                     shift and go to state 158

state 224

    (67) param -> VAR ID_LIST . COLON type
    (61) ID_LIST -> ID_LIST . COMMA ID

    COLON           shift and go to state 251
    COMMA           shift and go to state 101


state 225

    (68) param -> CONST ID_LIST . COLON type
    (61) ID_LIST -> ID_LIST . COMMA ID

    COLON           shift and go to state 252
    COMMA           shift and go to state 101


state 226

    (27) procedure_declaration -> PROCEDURE ID LPAREN params RPAREN . SEMI block SEMI

    SEMI            shift and go to state 253


state 227

    (136) expression_list -> expression_list COMMA expression .
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    RPAREN          reduce using rule 136 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 136 (expression_list -> expression_list COMMA expression .)
    RBRACKET        reduce using rule 136 (expression_list -> expression_list COMMA expression .)
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 228

    (90) if_statement -> IF expression THEN statement ELSE . statement
    (72) statement -> . assignment
    (73) statement -> . procedure_call
    (74) statement -> . if_statement
    (75) statement -> . for_statement
    (76) statement -> . while_statement
    (77) statement -> . repeat_statement
    (78) statement -> . case_statement
    (79) statement -> . with_statement
    (80) statement -> . goto_statement
    (81) statement -> . labeled_statement
    (82) statement -> . compound
    (83) statement -> . empty
    (84) assignment -> . variable ASSIGN expression
    (88) procedure_call -> . ID LPAREN expression_list RPAREN
    (89) procedure_call -> . ID
    (90) if_statement -> . IF expression THEN statement ELSE statement
    (91) if_statement -> . IF expression THEN statement
    (92) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (93) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (94) while_statement -> . WHILE expression DO statement
    (95) repeat_statement -> . REPEAT statement_list UNTIL expression
    (96) case_statement -> . CASE expression OF case_list END
    (102) with_statement -> . WITH variable_list DO statement
    (105) goto_statement -> . GOTO INTEGER
    (106) labeled_statement -> . INTEGER COLON statement
    (71) compound -> . BEGIN statement_list END
    (137) empty -> .
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    REPEAT          shift and go to state 43
    CASE            shift and go to state 44
    WITH            shift and go to state 45
    GOTO            shift and go to state 46
    INTEGER         shift and go to state 47
    BEGIN           shift and go to state 23
    END             reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    UNTIL           reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)

    statement                      shift and go to state 254
    assignment                     shift and go to state 26
    procedure_call                 shift and go to state 27
    if_statement                   shift and go to state 28
    for_statement                  shift and go to state 29
    while_statement                shift and go to state 30
    repeat_statement               shift and go to state 31
    case_statement                 shift and go to state 32
    with_statement                 shift and go to state 33
    goto_statement                 shift and go to state 34
    labeled_statement              shift and go to state 35
    compound                       shift and go to state 36
    empty                          shift and go to state 37
    variable                       shift and go to state 38

state 229

    (114) expression -> TIPO LPAREN expression_list RPAREN .

    THEN            reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    COLON           reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    DIV             reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    MOD             reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    EQ              reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    NE              reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    LT              reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    LE              reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    GT              reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    GE              reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    IN              reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    AND             reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    OR              reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    DO              reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    OF              reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    END             reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    SEMI            reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    UNTIL           reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    TO              reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)
    DOWNTO          reduce using rule 114 (expression -> TIPO LPAREN expression_list RPAREN .)


state 230

    (115) expression -> ID LPAREN expression_list RPAREN .

    THEN            reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    COLON           reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    DIV             reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    MOD             reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    EQ              reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    NE              reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    LT              reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    LE              reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    GT              reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    GE              reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    IN              reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    AND             reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    OR              reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    DO              reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    OF              reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    END             reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    SEMI            reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    UNTIL           reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    TO              reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)
    DOWNTO          reduce using rule 115 (expression -> ID LPAREN expression_list RPAREN .)


state 231

    (92) for_statement -> FOR ID ASSIGN expression TO . expression DO statement
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 255
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 232

    (93) for_statement -> FOR ID ASSIGN expression DOWNTO . expression DO statement
    (112) expression -> . variable
    (113) expression -> . constant
    (114) expression -> . TIPO LPAREN expression_list RPAREN
    (115) expression -> . ID LPAREN expression_list RPAREN
    (116) expression -> . LPAREN expression RPAREN
    (117) expression -> . LBRACKET expression_list RBRACKET
    (118) expression -> . NOT expression
    (119) expression -> . expression COLON expression
    (120) expression -> . expression PLUS expression
    (121) expression -> . expression MINUS expression
    (122) expression -> . expression TIMES expression
    (123) expression -> . expression DIVIDE expression
    (124) expression -> . expression DIV expression
    (125) expression -> . expression MOD expression
    (126) expression -> . expression EQ expression
    (127) expression -> . expression NE expression
    (128) expression -> . expression LT expression
    (129) expression -> . expression LE expression
    (130) expression -> . expression GT expression
    (131) expression -> . expression GE expression
    (132) expression -> . expression IN expression
    (133) expression -> . expression AND expression
    (134) expression -> . expression OR expression
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    TIPO            shift and go to state 72
    ID              shift and go to state 74
    LPAREN          shift and go to state 73
    LBRACKET        shift and go to state 75
    NOT             shift and go to state 76
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    expression                     shift and go to state 256
    variable                       shift and go to state 70
    constant                       shift and go to state 71

state 233

    (96) case_statement -> CASE expression OF case_list END .

    END             reduce using rule 96 (case_statement -> CASE expression OF case_list END .)
    SEMI            reduce using rule 96 (case_statement -> CASE expression OF case_list END .)
    UNTIL           reduce using rule 96 (case_statement -> CASE expression OF case_list END .)
    ELSE            reduce using rule 96 (case_statement -> CASE expression OF case_list END .)


state 234

    (97) case_list -> case_list case_item . SEMI

    SEMI            shift and go to state 257


state 235

    (98) case_list -> case_item SEMI .

    END             reduce using rule 98 (case_list -> case_item SEMI .)
    INTEGER         reduce using rule 98 (case_list -> case_item SEMI .)
    REAL            reduce using rule 98 (case_list -> case_item SEMI .)
    BOOLEAN         reduce using rule 98 (case_list -> case_item SEMI .)
    CHAR            reduce using rule 98 (case_list -> case_item SEMI .)
    TEXTO           reduce using rule 98 (case_list -> case_item SEMI .)
    ID              reduce using rule 98 (case_list -> case_item SEMI .)


state 236

    (99) case_item -> constant_list COLON . statement_list
    (69) statement_list -> . statement_list SEMI statement
    (70) statement_list -> . statement
    (72) statement -> . assignment
    (73) statement -> . procedure_call
    (74) statement -> . if_statement
    (75) statement -> . for_statement
    (76) statement -> . while_statement
    (77) statement -> . repeat_statement
    (78) statement -> . case_statement
    (79) statement -> . with_statement
    (80) statement -> . goto_statement
    (81) statement -> . labeled_statement
    (82) statement -> . compound
    (83) statement -> . empty
    (84) assignment -> . variable ASSIGN expression
    (88) procedure_call -> . ID LPAREN expression_list RPAREN
    (89) procedure_call -> . ID
    (90) if_statement -> . IF expression THEN statement ELSE statement
    (91) if_statement -> . IF expression THEN statement
    (92) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (93) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (94) while_statement -> . WHILE expression DO statement
    (95) repeat_statement -> . REPEAT statement_list UNTIL expression
    (96) case_statement -> . CASE expression OF case_list END
    (102) with_statement -> . WITH variable_list DO statement
    (105) goto_statement -> . GOTO INTEGER
    (106) labeled_statement -> . INTEGER COLON statement
    (71) compound -> . BEGIN statement_list END
    (137) empty -> .
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    REPEAT          shift and go to state 43
    CASE            shift and go to state 44
    WITH            shift and go to state 45
    GOTO            shift and go to state 46
    INTEGER         shift and go to state 47
    BEGIN           shift and go to state 23
    SEMI            reduce using rule 137 (empty -> .)

    statement_list                 shift and go to state 258
    statement                      shift and go to state 25
    assignment                     shift and go to state 26
    procedure_call                 shift and go to state 27
    if_statement                   shift and go to state 28
    for_statement                  shift and go to state 29
    while_statement                shift and go to state 30
    repeat_statement               shift and go to state 31
    case_statement                 shift and go to state 32
    with_statement                 shift and go to state 33
    goto_statement                 shift and go to state 34
    labeled_statement              shift and go to state 35
    compound                       shift and go to state 36
    empty                          shift and go to state 37
    variable                       shift and go to state 38

state 237

    (101) constant_list -> constant_list COMMA . const_expr
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166
    ID              shift and go to state 209

    const_expr                     shift and go to state 259

state 238

    (40) array_type -> ARRAY LBRACKET range . RBRACKET OF type

    RBRACKET        shift and go to state 260


state 239

    (47) range -> const_expr . RANGE const_expr

    RANGE           shift and go to state 261


state 240

    (41) enum_type -> LPAREN ID_LIST RPAREN .

    SEMI            reduce using rule 41 (enum_type -> LPAREN ID_LIST RPAREN .)
    RPAREN          reduce using rule 41 (enum_type -> LPAREN ID_LIST RPAREN .)


state 241

    (42) subrange_type -> const_expr RANGE const_expr .

    SEMI            reduce using rule 42 (subrange_type -> const_expr RANGE const_expr .)
    RPAREN          reduce using rule 42 (subrange_type -> const_expr RANGE const_expr .)


state 242

    (43) record_type -> RECORD field_list variant_part . END

    END             shift and go to state 262


state 243

    (44) record_type -> RECORD field_list END .

    SEMI            reduce using rule 44 (record_type -> RECORD field_list END .)
    RPAREN          reduce using rule 44 (record_type -> RECORD field_list END .)


state 244

    (54) field_list -> field_list var_item .

    END             reduce using rule 54 (field_list -> field_list var_item .)
    CASE            reduce using rule 54 (field_list -> field_list var_item .)
    ID              reduce using rule 54 (field_list -> field_list var_item .)
    RPAREN          reduce using rule 54 (field_list -> field_list var_item .)


state 245

    (56) variant_part -> CASE . ID COLON TIPO OF variant_list

    ID              shift and go to state 263


state 246

    (45) set_type -> SET OF type .

    SEMI            reduce using rule 45 (set_type -> SET OF type .)
    RPAREN          reduce using rule 45 (set_type -> SET OF type .)


state 247

    (46) file_type -> FILE OF type .

    SEMI            reduce using rule 46 (file_type -> FILE OF type .)
    RPAREN          reduce using rule 46 (file_type -> FILE OF type .)


state 248

    (26) function_declaration -> FUNCTION ID LPAREN params RPAREN COLON . type SEMI block SEMI
    (28) type -> . packed_type
    (29) type -> . simple_type
    (30) type -> . id_type
    (31) type -> . array_type
    (32) type -> . enum_type
    (33) type -> . subrange_type
    (34) type -> . record_type
    (35) type -> . set_type
    (36) type -> . file_type
    (37) packed_type -> . PACKED type
    (38) simple_type -> . TIPO
    (39) id_type -> . ID
    (40) array_type -> . ARRAY LBRACKET range RBRACKET OF type
    (41) enum_type -> . LPAREN ID_LIST RPAREN
    (42) subrange_type -> . const_expr RANGE const_expr
    (43) record_type -> . RECORD field_list variant_part END
    (44) record_type -> . RECORD field_list END
    (45) set_type -> . SET OF type
    (46) file_type -> . FILE OF type
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    PACKED          shift and go to state 154
    TIPO            shift and go to state 155
    ID              shift and go to state 143
    ARRAY           shift and go to state 156
    LPAREN          shift and go to state 157
    RECORD          shift and go to state 159
    SET             shift and go to state 160
    FILE            shift and go to state 161
    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166

    type                           shift and go to state 264
    packed_type                    shift and go to state 145
    simple_type                    shift and go to state 146
    id_type                        shift and go to state 147
    array_type                     shift and go to state 148
    enum_type                      shift and go to state 149
    subrange_type                  shift and go to state 150
    record_type                    shift and go to state 151
    set_type                       shift and go to state 152
    file_type                      shift and go to state 153
    const_expr                     shift and go to state 158

state 249

    (64) param_list -> param_list SEMI param .

    SEMI            reduce using rule 64 (param_list -> param_list SEMI param .)
    RPAREN          reduce using rule 64 (param_list -> param_list SEMI param .)


state 250

    (66) param -> ID_LIST COLON type .

    SEMI            reduce using rule 66 (param -> ID_LIST COLON type .)
    RPAREN          reduce using rule 66 (param -> ID_LIST COLON type .)


state 251

    (67) param -> VAR ID_LIST COLON . type
    (28) type -> . packed_type
    (29) type -> . simple_type
    (30) type -> . id_type
    (31) type -> . array_type
    (32) type -> . enum_type
    (33) type -> . subrange_type
    (34) type -> . record_type
    (35) type -> . set_type
    (36) type -> . file_type
    (37) packed_type -> . PACKED type
    (38) simple_type -> . TIPO
    (39) id_type -> . ID
    (40) array_type -> . ARRAY LBRACKET range RBRACKET OF type
    (41) enum_type -> . LPAREN ID_LIST RPAREN
    (42) subrange_type -> . const_expr RANGE const_expr
    (43) record_type -> . RECORD field_list variant_part END
    (44) record_type -> . RECORD field_list END
    (45) set_type -> . SET OF type
    (46) file_type -> . FILE OF type
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    PACKED          shift and go to state 154
    TIPO            shift and go to state 155
    ID              shift and go to state 143
    ARRAY           shift and go to state 156
    LPAREN          shift and go to state 157
    RECORD          shift and go to state 159
    SET             shift and go to state 160
    FILE            shift and go to state 161
    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166

    type                           shift and go to state 265
    packed_type                    shift and go to state 145
    simple_type                    shift and go to state 146
    id_type                        shift and go to state 147
    array_type                     shift and go to state 148
    enum_type                      shift and go to state 149
    subrange_type                  shift and go to state 150
    record_type                    shift and go to state 151
    set_type                       shift and go to state 152
    file_type                      shift and go to state 153
    const_expr                     shift and go to state 158

state 252

    (68) param -> CONST ID_LIST COLON . type
    (28) type -> . packed_type
    (29) type -> . simple_type
    (30) type -> . id_type
    (31) type -> . array_type
    (32) type -> . enum_type
    (33) type -> . subrange_type
    (34) type -> . record_type
    (35) type -> . set_type
    (36) type -> . file_type
    (37) packed_type -> . PACKED type
    (38) simple_type -> . TIPO
    (39) id_type -> . ID
    (40) array_type -> . ARRAY LBRACKET range RBRACKET OF type
    (41) enum_type -> . LPAREN ID_LIST RPAREN
    (42) subrange_type -> . const_expr RANGE const_expr
    (43) record_type -> . RECORD field_list variant_part END
    (44) record_type -> . RECORD field_list END
    (45) set_type -> . SET OF type
    (46) file_type -> . FILE OF type
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    PACKED          shift and go to state 154
    TIPO            shift and go to state 155
    ID              shift and go to state 143
    ARRAY           shift and go to state 156
    LPAREN          shift and go to state 157
    RECORD          shift and go to state 159
    SET             shift and go to state 160
    FILE            shift and go to state 161
    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166

    type                           shift and go to state 266
    packed_type                    shift and go to state 145
    simple_type                    shift and go to state 146
    id_type                        shift and go to state 147
    array_type                     shift and go to state 148
    enum_type                      shift and go to state 149
    subrange_type                  shift and go to state 150
    record_type                    shift and go to state 151
    set_type                       shift and go to state 152
    file_type                      shift and go to state 153
    const_expr                     shift and go to state 158

state 253

    (27) procedure_declaration -> PROCEDURE ID LPAREN params RPAREN SEMI . block SEMI
    (2) block -> . declarations BEGIN statement_list END
    (3) declarations -> . declarations declaration
    (4) declarations -> . empty
    (137) empty -> .

    BEGIN           reduce using rule 137 (empty -> .)
    CONST           reduce using rule 137 (empty -> .)
    TYPE            reduce using rule 137 (empty -> .)
    LABEL           reduce using rule 137 (empty -> .)
    VAR             reduce using rule 137 (empty -> .)
    FUNCTION        reduce using rule 137 (empty -> .)
    PROCEDURE       reduce using rule 137 (empty -> .)

    block                          shift and go to state 267
    declarations                   shift and go to state 6
    empty                          shift and go to state 7

state 254

    (90) if_statement -> IF expression THEN statement ELSE statement .

    END             reduce using rule 90 (if_statement -> IF expression THEN statement ELSE statement .)
    SEMI            reduce using rule 90 (if_statement -> IF expression THEN statement ELSE statement .)
    UNTIL           reduce using rule 90 (if_statement -> IF expression THEN statement ELSE statement .)
    ELSE            reduce using rule 90 (if_statement -> IF expression THEN statement ELSE statement .)


state 255

    (92) for_statement -> FOR ID ASSIGN expression TO expression . DO statement
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    DO              shift and go to state 268
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 256

    (93) for_statement -> FOR ID ASSIGN expression DOWNTO expression . DO statement
    (119) expression -> expression . COLON expression
    (120) expression -> expression . PLUS expression
    (121) expression -> expression . MINUS expression
    (122) expression -> expression . TIMES expression
    (123) expression -> expression . DIVIDE expression
    (124) expression -> expression . DIV expression
    (125) expression -> expression . MOD expression
    (126) expression -> expression . EQ expression
    (127) expression -> expression . NE expression
    (128) expression -> expression . LT expression
    (129) expression -> expression . LE expression
    (130) expression -> expression . GT expression
    (131) expression -> expression . GE expression
    (132) expression -> expression . IN expression
    (133) expression -> expression . AND expression
    (134) expression -> expression . OR expression

    DO              shift and go to state 269
    COLON           shift and go to state 112
    PLUS            shift and go to state 113
    MINUS           shift and go to state 114
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    DIV             shift and go to state 117
    MOD             shift and go to state 118
    EQ              shift and go to state 119
    NE              shift and go to state 120
    LT              shift and go to state 121
    LE              shift and go to state 122
    GT              shift and go to state 123
    GE              shift and go to state 124
    IN              shift and go to state 125
    AND             shift and go to state 126
    OR              shift and go to state 127


state 257

    (97) case_list -> case_list case_item SEMI .

    END             reduce using rule 97 (case_list -> case_list case_item SEMI .)
    INTEGER         reduce using rule 97 (case_list -> case_list case_item SEMI .)
    REAL            reduce using rule 97 (case_list -> case_list case_item SEMI .)
    BOOLEAN         reduce using rule 97 (case_list -> case_list case_item SEMI .)
    CHAR            reduce using rule 97 (case_list -> case_list case_item SEMI .)
    TEXTO           reduce using rule 97 (case_list -> case_list case_item SEMI .)
    ID              reduce using rule 97 (case_list -> case_list case_item SEMI .)


state 258

    (99) case_item -> constant_list COLON statement_list .
    (69) statement_list -> statement_list . SEMI statement

    SEMI            reduce using rule 99 (case_item -> constant_list COLON statement_list .)

  ! SEMI            [ shift and go to state 64 ]


state 259

    (101) constant_list -> constant_list COMMA const_expr .

    COLON           reduce using rule 101 (constant_list -> constant_list COMMA const_expr .)
    COMMA           reduce using rule 101 (constant_list -> constant_list COMMA const_expr .)


state 260

    (40) array_type -> ARRAY LBRACKET range RBRACKET . OF type

    OF              shift and go to state 270


state 261

    (47) range -> const_expr RANGE . const_expr
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166
    ID              shift and go to state 209

    const_expr                     shift and go to state 271

state 262

    (43) record_type -> RECORD field_list variant_part END .

    SEMI            reduce using rule 43 (record_type -> RECORD field_list variant_part END .)
    RPAREN          reduce using rule 43 (record_type -> RECORD field_list variant_part END .)


state 263

    (56) variant_part -> CASE ID . COLON TIPO OF variant_list

    COLON           shift and go to state 272


state 264

    (26) function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type . SEMI block SEMI

    SEMI            shift and go to state 273


state 265

    (67) param -> VAR ID_LIST COLON type .

    SEMI            reduce using rule 67 (param -> VAR ID_LIST COLON type .)
    RPAREN          reduce using rule 67 (param -> VAR ID_LIST COLON type .)


state 266

    (68) param -> CONST ID_LIST COLON type .

    SEMI            reduce using rule 68 (param -> CONST ID_LIST COLON type .)
    RPAREN          reduce using rule 68 (param -> CONST ID_LIST COLON type .)


state 267

    (27) procedure_declaration -> PROCEDURE ID LPAREN params RPAREN SEMI block . SEMI

    SEMI            shift and go to state 274


state 268

    (92) for_statement -> FOR ID ASSIGN expression TO expression DO . statement
    (72) statement -> . assignment
    (73) statement -> . procedure_call
    (74) statement -> . if_statement
    (75) statement -> . for_statement
    (76) statement -> . while_statement
    (77) statement -> . repeat_statement
    (78) statement -> . case_statement
    (79) statement -> . with_statement
    (80) statement -> . goto_statement
    (81) statement -> . labeled_statement
    (82) statement -> . compound
    (83) statement -> . empty
    (84) assignment -> . variable ASSIGN expression
    (88) procedure_call -> . ID LPAREN expression_list RPAREN
    (89) procedure_call -> . ID
    (90) if_statement -> . IF expression THEN statement ELSE statement
    (91) if_statement -> . IF expression THEN statement
    (92) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (93) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (94) while_statement -> . WHILE expression DO statement
    (95) repeat_statement -> . REPEAT statement_list UNTIL expression
    (96) case_statement -> . CASE expression OF case_list END
    (102) with_statement -> . WITH variable_list DO statement
    (105) goto_statement -> . GOTO INTEGER
    (106) labeled_statement -> . INTEGER COLON statement
    (71) compound -> . BEGIN statement_list END
    (137) empty -> .
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    REPEAT          shift and go to state 43
    CASE            shift and go to state 44
    WITH            shift and go to state 45
    GOTO            shift and go to state 46
    INTEGER         shift and go to state 47
    BEGIN           shift and go to state 23
    END             reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    UNTIL           reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)

    statement                      shift and go to state 275
    assignment                     shift and go to state 26
    procedure_call                 shift and go to state 27
    if_statement                   shift and go to state 28
    for_statement                  shift and go to state 29
    while_statement                shift and go to state 30
    repeat_statement               shift and go to state 31
    case_statement                 shift and go to state 32
    with_statement                 shift and go to state 33
    goto_statement                 shift and go to state 34
    labeled_statement              shift and go to state 35
    compound                       shift and go to state 36
    empty                          shift and go to state 37
    variable                       shift and go to state 38

state 269

    (93) for_statement -> FOR ID ASSIGN expression DOWNTO expression DO . statement
    (72) statement -> . assignment
    (73) statement -> . procedure_call
    (74) statement -> . if_statement
    (75) statement -> . for_statement
    (76) statement -> . while_statement
    (77) statement -> . repeat_statement
    (78) statement -> . case_statement
    (79) statement -> . with_statement
    (80) statement -> . goto_statement
    (81) statement -> . labeled_statement
    (82) statement -> . compound
    (83) statement -> . empty
    (84) assignment -> . variable ASSIGN expression
    (88) procedure_call -> . ID LPAREN expression_list RPAREN
    (89) procedure_call -> . ID
    (90) if_statement -> . IF expression THEN statement ELSE statement
    (91) if_statement -> . IF expression THEN statement
    (92) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (93) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (94) while_statement -> . WHILE expression DO statement
    (95) repeat_statement -> . REPEAT statement_list UNTIL expression
    (96) case_statement -> . CASE expression OF case_list END
    (102) with_statement -> . WITH variable_list DO statement
    (105) goto_statement -> . GOTO INTEGER
    (106) labeled_statement -> . INTEGER COLON statement
    (71) compound -> . BEGIN statement_list END
    (137) empty -> .
    (85) variable -> . variable LBRACKET expression RBRACKET
    (86) variable -> . variable DOT ID
    (87) variable -> . ID

    ID              shift and go to state 39
    IF              shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    REPEAT          shift and go to state 43
    CASE            shift and go to state 44
    WITH            shift and go to state 45
    GOTO            shift and go to state 46
    INTEGER         shift and go to state 47
    BEGIN           shift and go to state 23
    END             reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    UNTIL           reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)

    statement                      shift and go to state 276
    assignment                     shift and go to state 26
    procedure_call                 shift and go to state 27
    if_statement                   shift and go to state 28
    for_statement                  shift and go to state 29
    while_statement                shift and go to state 30
    repeat_statement               shift and go to state 31
    case_statement                 shift and go to state 32
    with_statement                 shift and go to state 33
    goto_statement                 shift and go to state 34
    labeled_statement              shift and go to state 35
    compound                       shift and go to state 36
    empty                          shift and go to state 37
    variable                       shift and go to state 38

state 270

    (40) array_type -> ARRAY LBRACKET range RBRACKET OF . type
    (28) type -> . packed_type
    (29) type -> . simple_type
    (30) type -> . id_type
    (31) type -> . array_type
    (32) type -> . enum_type
    (33) type -> . subrange_type
    (34) type -> . record_type
    (35) type -> . set_type
    (36) type -> . file_type
    (37) packed_type -> . PACKED type
    (38) simple_type -> . TIPO
    (39) id_type -> . ID
    (40) array_type -> . ARRAY LBRACKET range RBRACKET OF type
    (41) enum_type -> . LPAREN ID_LIST RPAREN
    (42) subrange_type -> . const_expr RANGE const_expr
    (43) record_type -> . RECORD field_list variant_part END
    (44) record_type -> . RECORD field_list END
    (45) set_type -> . SET OF type
    (46) file_type -> . FILE OF type
    (48) const_expr -> . INTEGER
    (49) const_expr -> . REAL
    (50) const_expr -> . BOOLEAN
    (51) const_expr -> . CHAR
    (52) const_expr -> . TEXTO
    (53) const_expr -> . ID

    PACKED          shift and go to state 154
    TIPO            shift and go to state 155
    ID              shift and go to state 143
    ARRAY           shift and go to state 156
    LPAREN          shift and go to state 157
    RECORD          shift and go to state 159
    SET             shift and go to state 160
    FILE            shift and go to state 161
    INTEGER         shift and go to state 162
    REAL            shift and go to state 163
    BOOLEAN         shift and go to state 164
    CHAR            shift and go to state 165
    TEXTO           shift and go to state 166

    type                           shift and go to state 277
    packed_type                    shift and go to state 145
    simple_type                    shift and go to state 146
    id_type                        shift and go to state 147
    array_type                     shift and go to state 148
    enum_type                      shift and go to state 149
    subrange_type                  shift and go to state 150
    record_type                    shift and go to state 151
    set_type                       shift and go to state 152
    file_type                      shift and go to state 153
    const_expr                     shift and go to state 158

state 271

    (47) range -> const_expr RANGE const_expr .

    RBRACKET        reduce using rule 47 (range -> const_expr RANGE const_expr .)


state 272

    (56) variant_part -> CASE ID COLON . TIPO OF variant_list

    TIPO            shift and go to state 278


state 273

    (26) function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type SEMI . block SEMI
    (2) block -> . declarations BEGIN statement_list END
    (3) declarations -> . declarations declaration
    (4) declarations -> . empty
    (137) empty -> .

    BEGIN           reduce using rule 137 (empty -> .)
    CONST           reduce using rule 137 (empty -> .)
    TYPE            reduce using rule 137 (empty -> .)
    LABEL           reduce using rule 137 (empty -> .)
    VAR             reduce using rule 137 (empty -> .)
    FUNCTION        reduce using rule 137 (empty -> .)
    PROCEDURE       reduce using rule 137 (empty -> .)

    block                          shift and go to state 279
    declarations                   shift and go to state 6
    empty                          shift and go to state 7

state 274

    (27) procedure_declaration -> PROCEDURE ID LPAREN params RPAREN SEMI block SEMI .

    BEGIN           reduce using rule 27 (procedure_declaration -> PROCEDURE ID LPAREN params RPAREN SEMI block SEMI .)
    CONST           reduce using rule 27 (procedure_declaration -> PROCEDURE ID LPAREN params RPAREN SEMI block SEMI .)
    TYPE            reduce using rule 27 (procedure_declaration -> PROCEDURE ID LPAREN params RPAREN SEMI block SEMI .)
    LABEL           reduce using rule 27 (procedure_declaration -> PROCEDURE ID LPAREN params RPAREN SEMI block SEMI .)
    VAR             reduce using rule 27 (procedure_declaration -> PROCEDURE ID LPAREN params RPAREN SEMI block SEMI .)
    FUNCTION        reduce using rule 27 (procedure_declaration -> PROCEDURE ID LPAREN params RPAREN SEMI block SEMI .)
    PROCEDURE       reduce using rule 27 (procedure_declaration -> PROCEDURE ID LPAREN params RPAREN SEMI block SEMI .)


state 275

    (92) for_statement -> FOR ID ASSIGN expression TO expression DO statement .

    END             reduce using rule 92 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    SEMI            reduce using rule 92 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    UNTIL           reduce using rule 92 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    ELSE            reduce using rule 92 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)


state 276

    (93) for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .

    END             reduce using rule 93 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    SEMI            reduce using rule 93 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    UNTIL           reduce using rule 93 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    ELSE            reduce using rule 93 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)


state 277

    (40) array_type -> ARRAY LBRACKET range RBRACKET OF type .

    SEMI            reduce using rule 40 (array_type -> ARRAY LBRACKET range RBRACKET OF type .)
    RPAREN          reduce using rule 40 (array_type -> ARRAY LBRACKET range RBRACKET OF type .)


state 278

    (56) variant_part -> CASE ID COLON TIPO . OF variant_list

    OF              shift and go to state 280


state 279

    (26) function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type SEMI block . SEMI

    SEMI            shift and go to state 281


state 280

    (56) variant_part -> CASE ID COLON TIPO OF . variant_list
    (57) variant_list -> . variant_list variant_item SEMI
    (58) variant_list -> . variant_item SEMI
    (59) variant_item -> . constant COLON LPAREN field_list RPAREN
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    variant_list                   shift and go to state 282
    variant_item                   shift and go to state 283
    constant                       shift and go to state 284

state 281

    (26) function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type SEMI block SEMI .

    BEGIN           reduce using rule 26 (function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type SEMI block SEMI .)
    CONST           reduce using rule 26 (function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type SEMI block SEMI .)
    TYPE            reduce using rule 26 (function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type SEMI block SEMI .)
    LABEL           reduce using rule 26 (function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type SEMI block SEMI .)
    VAR             reduce using rule 26 (function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type SEMI block SEMI .)
    FUNCTION        reduce using rule 26 (function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type SEMI block SEMI .)
    PROCEDURE       reduce using rule 26 (function_declaration -> FUNCTION ID LPAREN params RPAREN COLON type SEMI block SEMI .)


state 282

    (56) variant_part -> CASE ID COLON TIPO OF variant_list .
    (57) variant_list -> variant_list . variant_item SEMI
    (59) variant_item -> . constant COLON LPAREN field_list RPAREN
    (107) constant -> . INTEGER
    (108) constant -> . REAL
    (109) constant -> . BOOLEAN
    (110) constant -> . CHAR
    (111) constant -> . TEXTO

    END             reduce using rule 56 (variant_part -> CASE ID COLON TIPO OF variant_list .)
    INTEGER         shift and go to state 77
    REAL            shift and go to state 78
    BOOLEAN         shift and go to state 79
    CHAR            shift and go to state 80
    TEXTO           shift and go to state 81

    variant_item                   shift and go to state 285
    constant                       shift and go to state 284

state 283

    (58) variant_list -> variant_item . SEMI

    SEMI            shift and go to state 286


state 284

    (59) variant_item -> constant . COLON LPAREN field_list RPAREN

    COLON           shift and go to state 287


state 285

    (57) variant_list -> variant_list variant_item . SEMI

    SEMI            shift and go to state 288


state 286

    (58) variant_list -> variant_item SEMI .

    INTEGER         reduce using rule 58 (variant_list -> variant_item SEMI .)
    REAL            reduce using rule 58 (variant_list -> variant_item SEMI .)
    BOOLEAN         reduce using rule 58 (variant_list -> variant_item SEMI .)
    CHAR            reduce using rule 58 (variant_list -> variant_item SEMI .)
    TEXTO           reduce using rule 58 (variant_list -> variant_item SEMI .)
    END             reduce using rule 58 (variant_list -> variant_item SEMI .)


state 287

    (59) variant_item -> constant COLON . LPAREN field_list RPAREN

    LPAREN          shift and go to state 289


state 288

    (57) variant_list -> variant_list variant_item SEMI .

    INTEGER         reduce using rule 57 (variant_list -> variant_list variant_item SEMI .)
    REAL            reduce using rule 57 (variant_list -> variant_list variant_item SEMI .)
    BOOLEAN         reduce using rule 57 (variant_list -> variant_list variant_item SEMI .)
    CHAR            reduce using rule 57 (variant_list -> variant_list variant_item SEMI .)
    TEXTO           reduce using rule 57 (variant_list -> variant_list variant_item SEMI .)
    END             reduce using rule 57 (variant_list -> variant_list variant_item SEMI .)


state 289

    (59) variant_item -> constant COLON LPAREN . field_list RPAREN
    (54) field_list -> . field_list var_item
    (55) field_list -> . var_item
    (25) var_item -> . ID_LIST COLON type SEMI
    (60) ID_LIST -> . ID
    (61) ID_LIST -> . ID_LIST COMMA ID

    ID              shift and go to state 59

    field_list                     shift and go to state 290
    var_item                       shift and go to state 217
    ID_LIST                        shift and go to state 58

state 290

    (59) variant_item -> constant COLON LPAREN field_list . RPAREN
    (54) field_list -> field_list . var_item
    (25) var_item -> . ID_LIST COLON type SEMI
    (60) ID_LIST -> . ID
    (61) ID_LIST -> . ID_LIST COMMA ID

    RPAREN          shift and go to state 291
    ID              shift and go to state 59

    var_item                       shift and go to state 244
    ID_LIST                        shift and go to state 58

state 291

    (59) variant_item -> constant COLON LPAREN field_list RPAREN .

    SEMI            reduce using rule 59 (variant_item -> constant COLON LPAREN field_list RPAREN .)

